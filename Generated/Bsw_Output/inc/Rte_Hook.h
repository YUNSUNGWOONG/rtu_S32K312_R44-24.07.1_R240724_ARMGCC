/*******************************************************************************
**                           HYUNDAI AUTOEVER Corp.                           **
********************************************************************************
** (C) 2021 HYUNDAI AUTOEVER Corp.                                            **
** Confidential Proprietary Information. Distribution Limited.                **
** This source code is permitted to be used only in projects contracted       **
** with Hyundai Autoever, and any other use is prohibited.                    **
** If you use it for other purposes or change the source code,                **
** you may take legal responsibility.                                         **
** In this case, There is no warranty and technical support.                  **
********************************************************************************
**  Module Name : RTE                                                         **
**                                                                            **
**  File Name : Rte_Hook.h                                                    **
**                                                                            **
**  Generated On : Mon Nov 11 2024 13:32:30 KST                               **
**                                                                            **
**  Generated from :                                                          **
**  Configuration\Definition\Os_ECU_Configuration_PDF_S32K312.arxml           **
**  Configuration\Ecu\ECUCD_EcucValueCollection.arxml                         **
**  Configuration\Ecu\Ecud_BswM.arxml                                         **
**  Configuration\Ecu\Ecud_CanCM.arxml                                        **
**  Configuration\Ecu\Ecud_CanIf.arxml                                        **
**  Configuration\Ecu\Ecud_CanNm.arxml                                        **
**  Configuration\Ecu\Ecud_CanSM.arxml                                        **
**  Configuration\Ecu\Ecud_CanTp.arxml                                        **
**  Configuration\Ecu\Ecud_CanTrcv.arxml                                      **
**  Configuration\Ecu\Ecud_Com.arxml                                          **
**  Configuration\Ecu\Ecud_ComM.arxml                                         **
**  Configuration\Ecu\Ecud_ComXf.arxml                                        **
**  Configuration\Ecu\Ecud_Crc.arxml                                          **
**  Configuration\Ecu\Ecud_CryIf.arxml                                        **
**  Configuration\Ecu\Ecud_Crypto_76_HaeModule.arxml                          **
**  Configuration\Ecu\Ecud_Csm.arxml                                          **
**  Configuration\Ecu\Ecud_Dcm.arxml                                          **
**  Configuration\Ecu\Ecud_Dem.arxml                                          **
**  Configuration\Ecu\Ecud_Det.arxml                                          **
**  Configuration\Ecu\Ecud_E2EXf.arxml                                        **
**  Configuration\Ecu\Ecud_EcuC.arxml                                         **
**  Configuration\Ecu\Ecud_EcuM.arxml                                         **
**  Configuration\Ecu\Ecud_FiM.arxml                                          **
**  Configuration\Ecu\Ecud_Fota.arxml                                         **
**  Configuration\Ecu\Ecud_IoHwAb.arxml                                       **
**  Configuration\Ecu\Ecud_LinIf.arxml                                        **
**  Configuration\Ecu\Ecud_LinSM.arxml                                        **
**  Configuration\Ecu\Ecud_LinTrcv.arxml                                      **
**  Configuration\Ecu\Ecud_MemIf.arxml                                        **
**  Configuration\Ecu\Ecud_Nm.arxml                                           **
**  Configuration\Ecu\Ecud_NvM.arxml                                          **
**  Configuration\Ecu\Ecud_Os.arxml                                           **
**  Configuration\Ecu\Ecud_PduR.arxml                                         **
**  Configuration\Ecu\Ecud_Rte.arxml                                          **
**  Configuration\Ecu\Ecud_StbM.arxml                                         **
**  Configuration\Ecu\Ecud_Tm.arxml                                           **
**  Configuration\Ecu\Ecud_WdgIf.arxml                                        **
**  Configuration\Ecu\Ecud_WdgM.arxml                                         **
**  Configuration\Ecu\Ecud_Wdg_76_Acw.arxml                                   **
**  Configuration\Ecu\Mcal\Ecud_Adc.arxml                                     **
**  Configuration\Ecu\Mcal\Ecud_Wdg.arxml                                     **
**  Configuration\System\Bswmd\Bswmd_Adc.arxml                                **
**  Configuration\System\Bswmd\Bswmd_BswM.arxml                               **
**  Configuration\System\Bswmd\Bswmd_Can.arxml                                **
**  Configuration\System\Bswmd\Bswmd_ComXf.arxml                              **
**  Configuration\System\Bswmd\Bswmd_Crypto.arxml                             **
**  Configuration\System\Bswmd\Bswmd_Dio.arxml                                **
**  Configuration\System\Bswmd\Bswmd_E2EXf.arxml                              **
**  Configuration\System\Bswmd\Bswmd_Fee.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Fls.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Gpt.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Icu.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Lin.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Mcl.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Mcu.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Port.arxml                               **
**  Configuration\System\Bswmd\Bswmd_Pwm.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Spi.arxml                                **
**  Configuration\System\Bswmd\Bswmd_Wdg.arxml                                **
**  Configuration\System\Composition\EcuExtract.arxml                         **
**  Configuration\System\DBImport\DataTypes\AUTOSAR_DataTypes.arxml           **
**  Configuration\System\DBImport\DataTypes\CanStack_DataTypes.arxml          **
**  Configuration\System\DBImport\DataTypes\ComStack_DataTypes.arxml          **
**  Configuration\System\DBImport\FD_CAN1.arxml                               **
**  Configuration\System\DBImport\LIN1.arxml                                  **
**  Configuration\System\DBImport\LIN2.arxml                                  **
**  Configuration\System\Swcd_App\App_Dcm.arxml                               **
**  Configuration\System\Swcd_App\App_Dem.arxml                               **
**  Configuration\System\Swcd_App\App_E2EXf.arxml                             **
**  Configuration\System\Swcd_App\App_Lin.arxml                               **
**  Configuration\System\Swcd_App\App_Mode.arxml                              **
**  Configuration\System\Swcd_App\App_WdgM.arxml                              **
**  Configuration\System\Swcd_Bsw\MODE_PortInterfaces.arxml                   **
**  Configuration\System\Swcd_Bsw\Swcd_Bsw_BswM.arxml                         **
**  Configuration\System\Swcd_Bsw\Swcd_Lin.arxml                              **
**  Configuration\System\Transformer\Transformer.arxml                        **
**  Generated\Bsw_Output\bswmd\Bswmd_CanCM.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_CanIf.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_CanNm.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_CanSM.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_CanTp.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_CanTrcv.arxml                            **
**  Generated\Bsw_Output\bswmd\Bswmd_Com.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_ComM.arxml                               **
**  Generated\Bsw_Output\bswmd\Bswmd_Crc.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_CryIf.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_Crypto_76_HaeModule.arxml                **
**  Generated\Bsw_Output\bswmd\Bswmd_Csm.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_Dcm.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_Dem.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_Det.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_EcuM.arxml                               **
**  Generated\Bsw_Output\bswmd\Bswmd_FiM.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_Fota.arxml                               **
**  Generated\Bsw_Output\bswmd\Bswmd_IoHwAb.arxml                             **
**  Generated\Bsw_Output\bswmd\Bswmd_IpduM.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_KeyM.arxml                               **
**  Generated\Bsw_Output\bswmd\Bswmd_LinIf.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_LinSM.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_LinTrcv.arxml                            **
**  Generated\Bsw_Output\bswmd\Bswmd_MemIf.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_Mem_76_Pfls.arxml                        **
**  Generated\Bsw_Output\bswmd\Bswmd_Nm.arxml                                 **
**  Generated\Bsw_Output\bswmd\Bswmd_NvM.arxml                                **
**  Generated\Bsw_Output\bswmd\Bswmd_Os.arxml                                 **
**  Generated\Bsw_Output\bswmd\Bswmd_PduR.arxml                               **
**  Generated\Bsw_Output\bswmd\Bswmd_StbM.arxml                               **
**  Generated\Bsw_Output\bswmd\Bswmd_Tm.arxml                                 **
**  Generated\Bsw_Output\bswmd\Bswmd_WdgIf.arxml                              **
**  Generated\Bsw_Output\bswmd\Bswmd_WdgM.arxml                               **
**  Generated\Bsw_Output\bswmd\Bswmd_Wdg_76_Acw.arxml                         **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_ComM.arxml                             **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_Csm.arxml                              **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_Dcm.arxml                              **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_Dem.arxml                              **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_Det.arxml                              **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_EcuM.arxml                             **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_FiM.arxml                              **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_IoHwAb.arxml                           **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_KeyM.arxml                             **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_NvM.arxml                              **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_Os.arxml                               **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_StbM.arxml                             **
**  Generated\Bsw_Output\swcd\Swcd_Bsw_WdgM.arxml                             **
**  Generated\Bsw_Output\swcd\Swcd_Fota.arxml                                 **
**  Static_Code\Modules\EcuM_R44\generator\EcuM_PortInterface.arxml           **
**  Static_Code\Modules\Rte_R44\generator\SafeRTE_PDF.arxml                   **
**                                                                            **
**  Generator version : 1.8.0.0                                               **
**                                                                            **
**  NOTE: This is a generated file, Please DO NOT EDIT manually!              **
**                                                                           **/
/******************************************************************************/
/*                 Multiple Header Inclusion Protection Start                 */
/******************************************************************************/
#ifndef RTE_HOOK_H
#define RTE_HOOK_H

/******************************************************************************/
/*                              Header Inclusion                              */
/******************************************************************************/
#include "Rte_Cfg.h"
#include "Rte_Type.h"
#include "Os.h"

/******************************************************************************/
/*                Compatibility between C/C++ Languages Start                 */
/******************************************************************************/
#ifdef __cplusplus
extern "C" 
{

#endif

#ifndef RTE_VFB_TRACE
#define RTE_VFB_TRACE (FALSE)
#endif /* RTE_VFB_TRACE */

#if defined(Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Return
#endif
#if defined(Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Return)
#undef Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Return
extern void Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Return(VAR(uint8, AUTOMATIC) channelId, VAR(uint8, AUTOMATIC) schId, VAR(uint8, AUTOMATIC) schEntryNum, VAR(uint8, AUTOMATIC) frameId);
#else
#define Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Return(channelId, schId, schEntryNum, frameId) ((void)(0))
#endif /* Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Return */

#if defined(Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Start
#endif
#if defined(Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Start)
#undef Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Start
extern void Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Start(VAR(uint8, AUTOMATIC) channelId, VAR(uint8, AUTOMATIC) schId, VAR(uint8, AUTOMATIC) schEntryNum, VAR(uint8, AUTOMATIC) frameId);
#else
#define Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Start(channelId, schId, schEntryNum, frameId) ((void)(0))
#endif /* Rte_CallHook_CDD_LIN_CallbackAfterSchedule_lin_after_schedule_Start */

#if defined(Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Return
#endif
#if defined(Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Return)
#undef Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Return
extern void Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Return(VAR(uint8, AUTOMATIC) channelId, VAR(uint8, AUTOMATIC) errcode, VAR(uint8, AUTOMATIC) schEntryNum, VAR(uint8, AUTOMATIC) frameId);
#else
#define Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Return(channelId, errcode, schEntryNum, frameId) ((void)(0))
#endif /* Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Return */

#if defined(Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Start
#endif
#if defined(Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Start)
#undef Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Start
extern void Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Start(VAR(uint8, AUTOMATIC) channelId, VAR(uint8, AUTOMATIC) errcode, VAR(uint8, AUTOMATIC) schEntryNum, VAR(uint8, AUTOMATIC) frameId);
#else
#define Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Start(channelId, errcode, schEntryNum, frameId) ((void)(0))
#endif /* Rte_CallHook_CDD_LIN_CallbackError_lin_cbk_err_Start */

#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Return
#endif
#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Return)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Return
extern void Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Return(VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress, VAR(uint16, AUTOMATIC) ConnectionId);
#else
#define Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Return(ProtocolType, TesterSourceAddress, ConnectionId) ((void)(0))
#endif /* Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Return */

#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Start
#endif
#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Start)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Start
extern void Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Start(VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress, VAR(uint16, AUTOMATIC) ConnectionId);
#else
#define Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Start(ProtocolType, TesterSourceAddress, ConnectionId) ((void)(0))
#endif /* Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StartProtocol_Start */

#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Return
#endif
#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Return)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Return
extern void Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Return(VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress, VAR(uint16, AUTOMATIC) ConnectionId);
#else
#define Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Return(ProtocolType, TesterSourceAddress, ConnectionId) ((void)(0))
#endif /* Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Return */

#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Start
#endif
#if defined(Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Start)
#undef Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Start
extern void Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Start(VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress, VAR(uint16, AUTOMATIC) ConnectionId);
#else
#define Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Start(ProtocolType, TesterSourceAddress, ConnectionId) ((void)(0))
#endif /* Rte_CallHook_Dcm_CallbackDCMRequestServices_ECU1_StopProtocol_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Return)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Return
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Start)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Start
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_FreezeCurrentState_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Return)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Return
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Start)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Start
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ResetToDefault_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Return)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Return
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Start)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Start
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ReturnControlToECU_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Return)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Return
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) ControlStateInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Return(ControlStateInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Start)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Start
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) ControlStateInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Start(ControlStateInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_ShortTermAdjustment_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Return)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Return
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Return(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Start)
#undef Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Start
extern void Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Start(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ActuatorControl_WriteData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_BatVolt_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_BatVolt_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Return)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Return
extern void Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Return(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Start)
#undef Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Start
extern void Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Start(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_BatVolt_WriteData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Return)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Return
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Return(VAR(uint16, AUTOMATIC) DID, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_DidSupportedType, AUTOMATIC, RTE_APPL_DATA) Supported);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Return(DID, OpStatus, Supported) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Return */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Start)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Start
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Start(VAR(uint16, AUTOMATIC) DID, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_DidSupportedType, AUTOMATIC, RTE_APPL_DATA) Supported);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Start(DID, OpStatus, Supported) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_IsDidAvailable_Start */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Return)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Return
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Return(VAR(uint16, AUTOMATIC) DID, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) DataLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Return(DID, Data, OpStatus, DataLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Start)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Start
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Start(VAR(uint16, AUTOMATIC) DID, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) DataLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Start(DID, Data, OpStatus, DataLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Return)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Return
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Return(VAR(uint16, AUTOMATIC) DID, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) DataLength);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Return(DID, OpStatus, DataLength) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Return */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Start)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Start
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Start(VAR(uint16, AUTOMATIC) DID, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) DataLength);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Start(DID, OpStatus, DataLength) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_ReadDidRangeDataLength_Start */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Return)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Return
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Return(VAR(uint16, AUTOMATIC) DID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) DataLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Return(DID, Data, OpStatus, DataLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Start)
#undef Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Start
extern void Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Start(VAR(uint16, AUTOMATIC) DID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) DataLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Start(DID, Data, OpStatus, DataLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_DIDRange_DIDs_0100h_0110h_WriteDidData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ECT_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ECT_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ECT_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ECT_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_ECT_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_ECT_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_ECT_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ECT_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ECT_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ECT_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ECT_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_ECT_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_ECT_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_ECT_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ECT_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_ECT_WriteData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ECT_WriteData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ECT_WriteData_Return)
#undef Rte_CallHook_Dcm_DataServices_ECT_WriteData_Return
extern void Rte_CallHook_Dcm_DataServices_ECT_WriteData_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ECT_WriteData_Return(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ECT_WriteData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_ECT_WriteData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_ECT_WriteData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_ECT_WriteData_Start)
#undef Rte_CallHook_Dcm_DataServices_ECT_WriteData_Start
extern void Rte_CallHook_Dcm_DataServices_ECT_WriteData_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_ECT_WriteData_Start(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_ECT_WriteData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Return)
#undef Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Return
extern void Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Return */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Start)
#undef Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Start
extern void Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_FreezeCurrentState_Start */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_RPM_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_RPM_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Return)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Return
extern void Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Return */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Start)
#undef Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Start
extern void Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ReturnControlToECU_Start */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Return)
#undef Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Return
extern void Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) ControlStateInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Return(ControlStateInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Return */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Start)
#undef Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Start
extern void Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) ControlStateInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Start(ControlStateInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_ShortTermAdjustment_Start */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_WriteData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_WriteData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_WriteData_Return)
#undef Rte_CallHook_Dcm_DataServices_RPM_WriteData_Return
extern void Rte_CallHook_Dcm_DataServices_RPM_WriteData_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_WriteData_Return(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_WriteData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_RPM_WriteData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_RPM_WriteData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_RPM_WriteData_Start)
#undef Rte_CallHook_Dcm_DataServices_RPM_WriteData_Start
extern void Rte_CallHook_Dcm_DataServices_RPM_WriteData_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_RPM_WriteData_Start(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_RPM_WriteData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUHardwareVersionNumber_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_SystemSupplierECUSoftwareNumber_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Return)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Return
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) ScalingInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Return(ScalingInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Start)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Start
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) ScalingInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Start(ScalingInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_GetScalingInformation_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Return)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Return
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Return(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Start)
#undef Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Start
extern void Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Start(Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VINDataIdentifier_WriteData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleManufacturerECUSoftwareVersionNumber_ReadData_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Return)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Return
extern void Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Return(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Return(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Start)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Start
extern void Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Start(P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Start(ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleSpeed_ConditionCheckRead_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Return)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Return
extern void Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) ScalingInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Return(ScalingInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Start)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Start
extern void Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) ScalingInfo, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Start(ScalingInfo, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleSpeed_GetScalingInformation_Start */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Return
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Return)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Return
extern void Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Return(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Return */

#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Start
#endif
#if defined(Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Start)
#undef Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Start
extern void Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Start(Data) ((void)(0))
#endif /* Rte_CallHook_Dcm_DataServices_VehicleSpeed_ReadData_Start */

#if defined(Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return
#endif
#if defined(Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return)
#undef Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return
extern void Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DataValueBuffer, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DataValueBufferSize);
#else
#define Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return(OpStatus, DataValueBuffer, DataValueBufferSize) ((void)(0))
#endif /* Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return */

#if defined(Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start
#endif
#if defined(Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start)
#undef Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start
extern void Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DataValueBuffer, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DataValueBufferSize);
#else
#define Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start(OpStatus, DataValueBuffer, DataValueBufferSize) ((void)(0))
#endif /* Rte_CallHook_Dcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start */

#if defined(Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Return)
#undef Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Return
extern void Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) InBuffer);
#else
#define Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Return(OutBuffer, InBuffer) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Return */

#if defined(Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Start)
#undef Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Start
extern void Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) InBuffer);
#else
#define Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Start(OutBuffer, InBuffer) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestControlServices_Tid1_RequestControl_Start */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Return)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Return
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, VAR(uint8, AUTOMATIC) dataFormatIdentifier, VAR(uint64, AUTOMATIC) fileSizeUncompressed, VAR(uint64, AUTOMATIC) fileSizeCompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Return(OpStatus, filePathAndNameLength, filePathAndName, dataFormatIdentifier, fileSizeUncompressed, fileSizeCompressed, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Return */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Start)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Start
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, VAR(uint8, AUTOMATIC) dataFormatIdentifier, VAR(uint64, AUTOMATIC) fileSizeUncompressed, VAR(uint64, AUTOMATIC) fileSizeCompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Start(OpStatus, filePathAndNameLength, filePathAndName, dataFormatIdentifier, fileSizeUncompressed, fileSizeCompressed, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestAddFile_Start */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Return)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Return
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Return(OpStatus, filePathAndNameLength, filePathAndName, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Return */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Start)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Start
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Start(OpStatus, filePathAndNameLength, filePathAndName, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestDeleteFile_Start */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Return)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Return
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) dirInfoLength, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Return(OpStatus, filePathAndNameLength, filePathAndName, dirInfoLength, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Return */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Start)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Start
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) dirInfoLength, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Start(OpStatus, filePathAndNameLength, filePathAndName, dirInfoLength, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadDir_Start */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Return)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Return
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, VAR(uint8, AUTOMATIC) dataFormatIdentifier, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) fileSizeUncompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) fileSizeCompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Return(OpStatus, filePathAndNameLength, filePathAndName, dataFormatIdentifier, fileSizeUncompressed, fileSizeCompressed, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Return */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Start)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Start
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, VAR(uint8, AUTOMATIC) dataFormatIdentifier, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) fileSizeUncompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) fileSizeCompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Start(OpStatus, filePathAndNameLength, filePathAndName, dataFormatIdentifier, fileSizeUncompressed, fileSizeCompressed, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReadFile_Start */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Return)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Return
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, VAR(uint8, AUTOMATIC) dataFormatIdentifier, VAR(uint64, AUTOMATIC) fileSizeUncompressed, VAR(uint64, AUTOMATIC) fileSizeCompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Return(OpStatus, filePathAndNameLength, filePathAndName, dataFormatIdentifier, fileSizeUncompressed, fileSizeCompressed, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Return */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Start)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Start
extern void Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint16, AUTOMATIC) filePathAndNameLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) filePathAndName, VAR(uint8, AUTOMATIC) dataFormatIdentifier, VAR(uint64, AUTOMATIC) fileSizeUncompressed, VAR(uint64, AUTOMATIC) fileSizeCompressed, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) maxNumberOfBlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Start(OpStatus, filePathAndNameLength, filePathAndName, dataFormatIdentifier, fileSizeUncompressed, fileSizeCompressed, maxNumberOfBlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ProcessRequestReplaceFile_Start */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Return)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Return
extern void Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) DataLength, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Return(OpStatus, DataLength, Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Return */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Start)
#undef Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Start
extern void Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint64, AUTOMATIC, RTE_APPL_DATA) DataLength, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Start(OpStatus, DataLength, Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_ReadFileOrDir_Start */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Return
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Return)
#undef Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Return
extern void Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint64, AUTOMATIC) DataLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Return(OpStatus, DataLength, Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Return */

#if defined(Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Start
#endif
#if defined(Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Start)
#undef Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Start
extern void Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint64, AUTOMATIC) DataLength, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Data, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Start(OpStatus, DataLength, Data, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RequestFileTransfer_WriteFile_Start */

#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Return
#endif
#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Return)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Return
extern void Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_RequestDataOut_RID_0200h_CalibrationActuator_RID_0200h_RequestOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_RID_0200h_RequestOutSignal, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Return(OpStatus, DataOut_RID_0200h_RequestOutSignal, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Return */

#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Start
#endif
#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Start)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Start
extern void Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_RequestDataOut_RID_0200h_CalibrationActuator_RID_0200h_RequestOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_RID_0200h_RequestOutSignal, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Start(OpStatus, DataOut_RID_0200h_RequestOutSignal, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_RequestResults_Start */

#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Return
#endif
#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Return)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Return
extern void Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Return(VAR(Dcm_StartDataIn_RID_0200h_CalibrationActuator_RID_0200h_StartInSignalType, AUTOMATIC) DataIn_RID_0200h_StartInSignal, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_StartDataOut_RID_0200h_CalibrationActuator_RID_0200h_StartOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_RID_0200h_StartOutSignal, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Return(DataIn_RID_0200h_StartInSignal, OpStatus, DataOut_RID_0200h_StartOutSignal, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Return */

#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Start
#endif
#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Start)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Start
extern void Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Start(VAR(Dcm_StartDataIn_RID_0200h_CalibrationActuator_RID_0200h_StartInSignalType, AUTOMATIC) DataIn_RID_0200h_StartInSignal, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_StartDataOut_RID_0200h_CalibrationActuator_RID_0200h_StartOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_RID_0200h_StartOutSignal, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Start(DataIn_RID_0200h_StartInSignal, OpStatus, DataOut_RID_0200h_StartOutSignal, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Start_Start */

#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Return
#endif
#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Return)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Return
extern void Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Return(VAR(Dcm_StopDataIn_RID_0200h_CalibrationActuator_RID_0200h_StopInSignalType, AUTOMATIC) DataIn_RID_0200h_StopInSignal, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_StopDataOut_RID_0200h_CalibrationActuator_RID_0200h_StopOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_RID_0200h_StopOutSignal, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Return(DataIn_RID_0200h_StopInSignal, OpStatus, DataOut_RID_0200h_StopOutSignal, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Return */

#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Start
#endif
#if defined(Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Start)
#undef Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Start
extern void Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Start(VAR(Dcm_StopDataIn_RID_0200h_CalibrationActuator_RID_0200h_StopInSignalType, AUTOMATIC) DataIn_RID_0200h_StopInSignal, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_StopDataOut_RID_0200h_CalibrationActuator_RID_0200h_StopOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_RID_0200h_StopOutSignal, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Start(DataIn_RID_0200h_StopInSignal, OpStatus, DataOut_RID_0200h_StopOutSignal, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_RoutineServices_RID_0200h_CalibrationActuator_Stop_Start */

#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Return
#endif
#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Return)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Return
extern void Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Return(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Key, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Return(Key, OpStatus, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Return */

#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Start
#endif
#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Start)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Start
extern void Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Start(P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) Key, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Start(Key, OpStatus, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_SecurityAccess_L9_CompareKey_Start */

#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Return
#endif
#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Return)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Return
extern void Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Return(OpStatus, Seed, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Return */

#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Start
#endif
#if defined(Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Start)
#undef Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Start
extern void Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Seed, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Start(OpStatus, Seed, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_SecurityAccess_L9_GetSeed_Start */

#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Return
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Return)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Return
extern void Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Return(VAR(uint8, AUTOMATIC) SID, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, VAR(Dcm_ConfirmationStatusType, AUTOMATIC) ConfirmationStatus, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Return(SID, ReqType, ConnectionId, ConfirmationStatus, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Return */

#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Start
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Start)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Start
extern void Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Start(VAR(uint8, AUTOMATIC) SID, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, VAR(Dcm_ConfirmationStatusType, AUTOMATIC) ConfirmationStatus, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Start(SID, ReqType, ConnectionId, ConfirmationStatus, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Confirmation_Start */

#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Return
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Return)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Return
extern void Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Return(VAR(uint8, AUTOMATIC) SID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) RequestData, VAR(uint16, AUTOMATIC) DataSize, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Return(SID, RequestData, DataSize, ReqType, ConnectionId, ErrorCode, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Return */

#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Start
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Start)
#undef Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Start
extern void Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Start(VAR(uint8, AUTOMATIC) SID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) RequestData, VAR(uint16, AUTOMATIC) DataSize, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Start(SID, RequestData, DataSize, ReqType, ConnectionId, ErrorCode, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestManufacturerNotification_DcmDsdServiceRequestManufacturerNotification0_Indication_Start */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Return
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Return)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Return
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Return(VAR(uint8, AUTOMATIC) SID, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, VAR(Dcm_ConfirmationStatusType, AUTOMATIC) ConfirmationStatus, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Return(SID, ReqType, ConnectionId, ConfirmationStatus, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Return */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Start
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Start)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Start
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Start(VAR(uint8, AUTOMATIC) SID, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, VAR(Dcm_ConfirmationStatusType, AUTOMATIC) ConfirmationStatus, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Start(SID, ReqType, ConnectionId, ConfirmationStatus, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Confirmation_Start */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Return
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Return)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Return
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Return(VAR(uint8, AUTOMATIC) SID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) RequestData, VAR(uint16, AUTOMATIC) DataSize, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Return(SID, RequestData, DataSize, ReqType, ConnectionId, ErrorCode, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Return */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Start
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Start)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Start
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Start(VAR(uint8, AUTOMATIC) SID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) RequestData, VAR(uint16, AUTOMATIC) DataSize, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Start(SID, RequestData, DataSize, ReqType, ConnectionId, ErrorCode, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification0_Indication_Start */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Return
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Return)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Return
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Return(VAR(uint8, AUTOMATIC) SID, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, VAR(Dcm_ConfirmationStatusType, AUTOMATIC) ConfirmationStatus, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Return(SID, ReqType, ConnectionId, ConfirmationStatus, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Return */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Start
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Start)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Start
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Start(VAR(uint8, AUTOMATIC) SID, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, VAR(Dcm_ConfirmationStatusType, AUTOMATIC) ConfirmationStatus, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Start(SID, ReqType, ConnectionId, ConfirmationStatus, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Confirmation_Start */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Return
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Return)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Return
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Return(VAR(uint8, AUTOMATIC) SID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) RequestData, VAR(uint16, AUTOMATIC) DataSize, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Return(SID, RequestData, DataSize, ReqType, ConnectionId, ErrorCode, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Return */

#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Start
#endif
#if defined(Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Start)
#undef Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Start
extern void Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Start(VAR(uint8, AUTOMATIC) SID, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) RequestData, VAR(uint16, AUTOMATIC) DataSize, VAR(uint8, AUTOMATIC) ReqType, VAR(uint16, AUTOMATIC) ConnectionId, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode, VAR(Dcm_ProtocolType, AUTOMATIC) ProtocolType, VAR(uint16, AUTOMATIC) TesterSourceAddress);
#else
#define Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Start(SID, RequestData, DataSize, ReqType, ConnectionId, ErrorCode, ProtocolType, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_Dcm_ServiceRequestSupplierNotification_DcmDsdServiceRequestSupplierNotification1_Indication_Start */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Return
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Return)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Return
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) DataFormatIdentifier, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) BlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Return(OpStatus, DataFormatIdentifier, MemoryIdentifier, MemoryAddress, MemorySize, BlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Return */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Start
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Start)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Start
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) DataFormatIdentifier, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) BlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Start(OpStatus, DataFormatIdentifier, MemoryIdentifier, MemoryAddress, MemorySize, BlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestDownload_Start */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Return
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Return)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Return
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Return(OpStatus, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Return */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Start
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Start)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Start
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Start(OpStatus, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestTransferExit_Start */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Return
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Return)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Return
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) DataFormatIdentifier, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) BlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Return(OpStatus, DataFormatIdentifier, MemoryIdentifier, MemoryAddress, MemorySize, BlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Return */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Start
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Start)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Start
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) DataFormatIdentifier, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) BlockLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Start(OpStatus, DataFormatIdentifier, MemoryIdentifier, MemoryAddress, MemorySize, BlockLength, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessRequestUpload_Start */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Return
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Return)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Return
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) MemoryData, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Return(OpStatus, MemoryIdentifier, MemoryAddress, MemorySize, MemoryData, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Return */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Start
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Start)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Start
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) MemoryData, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Start(OpStatus, MemoryIdentifier, MemoryAddress, MemorySize, MemoryData, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataRead_Start */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Return
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Return)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Return
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Return(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) MemoryData, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Return(OpStatus, MemoryIdentifier, MemoryAddress, MemorySize, MemoryData, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Return */

#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Start
#endif
#if defined(Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Start)
#undef Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Start
extern void Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Start(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, VAR(uint8, AUTOMATIC) MemoryIdentifier, VAR(uint32, AUTOMATIC) MemoryAddress, VAR(uint32, AUTOMATIC) MemorySize, P2CONST(uint8, AUTOMATIC, RTE_APPL_CONST) MemoryData, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
#define Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Start(OpStatus, MemoryIdentifier, MemoryAddress, MemorySize, MemoryData, ErrorCode) ((void)(0))
#endif /* Rte_CallHook_Dcm_UploadDownloadServices_ProcessTransferDataWrite_Start */

#if defined(Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Return
#endif
#if defined(Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Return)
#undef Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Return
extern void Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Return(P2VAR(AUTOSAR_boolean, AUTOMATIC, RTE_APPL_DATA) Allowed);
#else
#define Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Return(Allowed) ((void)(0))
#endif /* Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Return */

#if defined(Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Start
#endif
#if defined(Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Start)
#undef Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Start
extern void Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Start(P2VAR(AUTOSAR_boolean, AUTOMATIC, RTE_APPL_DATA) Allowed);
#else
#define Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Start(Allowed) ((void)(0))
#endif /* Rte_CallHook_Dem_CBClrEvt_DEM_E_TEST_EVENT1_ClearEventAllowed_Start */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_FD_CAN2_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_HS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_LS_CAN1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_CANSM_E_MODE_CHANGE_Project_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Return */

#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
#endif
#if defined(Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start)
#undef Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start
extern void Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start(EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_CBEventUdsStatusChanged_DEM_E_TEST_EVENT1_DemCallbackEventUdsStatusChanged0_CallbackEventUdsStatusChanged_Start */

#if defined(Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Return
#endif
#if defined(Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Return)
#undef Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Return
extern void Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Return(VAR(Dem_InitMonitorReasonType, AUTOMATIC) InitMonitorReason);
#else
#define Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Return(InitMonitorReason) ((void)(0))
#endif /* Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Return */

#if defined(Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Start
#endif
#if defined(Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Start)
#undef Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Start
extern void Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Start(VAR(Dem_InitMonitorReasonType, AUTOMATIC) InitMonitorReason);
#else
#define Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Start(InitMonitorReason) ((void)(0))
#endif /* Rte_CallHook_Dem_CBInitEvt_DEM_E_TEST_EVENT1_InitMonitorForEvent_Start */

#if defined(Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return
#endif
#if defined(Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return)
#undef Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return
extern void Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return */

#if defined(Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start
#endif
#if defined(Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start)
#undef Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start
extern void Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_Dem_ClearDtcNotification_DemEventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0001_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0002_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0003_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0004_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0005_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0006_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0008_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0009_ReadData_Start */

#if defined(Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Return
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Return)
#undef Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Return
extern void Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Return(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Return */

#if defined(Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Start
#endif
#if defined(Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Start)
#undef Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Start
extern void Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0);
#else
#define Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Start(Data, monitorData0) ((void)(0))
#endif /* Rte_CallHook_Dem_DataServices_DE_0010_ReadData_Start */

#if defined(Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Return
#endif
#if defined(Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Return)
#undef Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Return
extern void Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Return(VAR(Dem_EventIdType, AUTOMATIC) EventId);
#else
#define Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Return(EventId) ((void)(0))
#endif /* Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Return */

#if defined(Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Start
#endif
#if defined(Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Start)
#undef Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Start
extern void Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Start(VAR(Dem_EventIdType, AUTOMATIC) EventId);
#else
#define Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Start(EventId) ((void)(0))
#endif /* Rte_CallHook_Dem_GeneralCBDataEvt_EventDataChanged_Start */

#if defined(Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Return
#endif
#if defined(Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Return)
#undef Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Return
extern void Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Return(VAR(Dem_EventIdType, AUTOMATIC) EventId, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Return(EventId, EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Return */

#if defined(Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Start
#endif
#if defined(Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Start)
#undef Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Start
extern void Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Start(VAR(Dem_EventIdType, AUTOMATIC) EventId, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteOld, VAR(Dem_UdsStatusByteType, AUTOMATIC) EventStatusByteNew);
#else
#define Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Start(EventId, EventStatusByteOld, EventStatusByteNew) ((void)(0))
#endif /* Rte_CallHook_Dem_GeneralCBStatusEvt_GeneralCallbackEventUdsStatusChanged_Start */

#if defined(Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Return
#endif
#if defined(Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Return)
#undef Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Return
extern void Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Return(user) ((void)(0))
#endif /* Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Return */

#if defined(Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Start
#endif
#if defined(Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Start)
#undef Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Start
extern void Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Start(user) ((void)(0))
#endif /* Rte_CallHook_Fota_Fota_StateRequest_RequestReset_Start */

#if defined(Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Return
#endif
#if defined(Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Return)
#undef Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Return
extern void Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Return(void);
#else
#define Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Return() ((void)(0))
#endif /* Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Return */

#if defined(Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Start
#endif
#if defined(Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Start)
#undef Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Start
extern void Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Start(void);
#else
#define Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Start() ((void)(0))
#endif /* Rte_CallHook_IoHwAb_R_IoHwAbGptLogical0_Cbk_Notification_Start */

#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Return
#endif
#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Return)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Return
extern void Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Return(void);
#else
#define Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Return() ((void)(0))
#endif /* Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Return */

#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Start
#endif
#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Start)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Start
extern void Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Start(void);
#else
#define Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Start() ((void)(0))
#endif /* Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical1_EdgeDetect_Cbk_Notification_Start */

#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Return
#endif
#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Return)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Return
extern void Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Return(void);
#else
#define Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Return() ((void)(0))
#endif /* Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Return */

#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Start
#endif
#if defined(Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Start)
#undef Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Start
extern void Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Start(void);
#else
#define Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Start() ((void)(0))
#endif /* Rte_CallHook_IoHwAb_R_IoHwAbIcuLogical2_Timestamp_Cbk_Notification_Start */

#if defined(Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Return
#endif
#if defined(Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Return)
#undef Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Return
extern void Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Return(VAR(KeyM_ResultType, AUTOMATIC) Result, VAR(uint16, AUTOMATIC) ResponseDataLength, VAR(KeyM_CryptoKeyDataType, AUTOMATIC) ResponseData);
#else
#define Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Return(Result, ResponseDataLength, ResponseData) ((void)(0))
#endif /* Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Return */

#if defined(Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Start
#endif
#if defined(Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Start)
#undef Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Start
extern void Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Start(VAR(KeyM_ResultType, AUTOMATIC) Result, VAR(uint16, AUTOMATIC) ResponseDataLength, VAR(KeyM_CryptoKeyDataType, AUTOMATIC) ResponseData);
#else
#define Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Start(Result, ResponseDataLength, ResponseData) ((void)(0))
#endif /* Rte_CallHook_KeyM_KeyMCryptoKeyNotification_CryptoKeyUpdateCallbackNotification_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Return)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Return
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Return(P2VAR(ComM_InhibitionStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Start)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Start
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Start(P2VAR(ComM_InhibitionStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_GetInhibitionStatus_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Return)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Return
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Return(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Start)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Start
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Start(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_FD_CAN1_PNC32_LimitChannelToNoComMode_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Return)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Return
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Return(P2VAR(ComM_InhibitionStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Start)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Start
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Start(P2VAR(ComM_InhibitionStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_GetInhibitionStatus_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Return)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Return
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Return(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Start)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Start
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Start(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN1_LimitChannelToNoComMode_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Return)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Return
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Return(P2VAR(ComM_InhibitionStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Start)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Start
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Start(P2VAR(ComM_InhibitionStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_GetInhibitionStatus_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Return)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Return
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Return(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Start)
#undef Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Start
extern void Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Start(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_CL_ComMChannel_LIN2_LimitChannelToNoComMode_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Return)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Return
extern void Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Return(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Start)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Start
extern void Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Start(VAR(boolean, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_modeLimitation_LimitECUToNoComMode_Start */

#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Return)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Return
extern void Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Return(VAR(ComM_InhibitionStatusType, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Return */

#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Start)
#undef Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Start
extern void Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Start(VAR(ComM_InhibitionStatusType, AUTOMATIC) Status);
#else
#define Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_R_modeLimitation_SetECUGroupClassification_Start */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Return)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Return
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Return(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Return */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Start)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Start
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Start(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleasePOST_RUN_Start */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Return)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Return
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Return(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Return */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Start)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Start
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Start(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_ReleaseRUN_Start */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Return)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Return
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Return(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Return */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Start)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Start
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Start(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestOff_Start */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Return)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Return
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Return(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Return */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Start)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Start
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Start(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestPOST_RUN_Start */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Return)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Return
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Return(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Return */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Start)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Start
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Start(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestRUN_Start */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Return)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Return
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Return(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Return */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Start)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Start
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Start(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestReset_Start */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Return)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Return
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Return(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Return(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Return */

#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Start)
#undef Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Start
extern void Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Start(VAR(EcuM_UserType, AUTOMATIC) user);
#else
#define Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Start(user) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_clientPort_StateRequest_RequestSleep_Start */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Return)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Return
extern void Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Return(P2VAR(EcuM_BootTargetType, AUTOMATIC, RTE_APPL_DATA) target);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Return(target) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Return */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Start)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Start
extern void Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Start(P2VAR(EcuM_BootTargetType, AUTOMATIC, RTE_APPL_DATA) target);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Start(target) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_BootTarget_GetBootTarget_Start */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Return)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Return
extern void Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Return(VAR(EcuM_BootTargetType, AUTOMATIC) target);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Return(target) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Return */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Start)
#undef Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Start
extern void Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Start(VAR(EcuM_BootTargetType, AUTOMATIC) target);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Start(target) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_BootTarget_SelectBootTarget_Start */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Return)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Return
extern void Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Return(P2VAR(EcuM_TimeType, AUTOMATIC, RTE_APPL_DATA) time);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Return(time) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Return */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Start)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Start
extern void Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Start(P2VAR(EcuM_TimeType, AUTOMATIC, RTE_APPL_DATA) time);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Start(time) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetCurrentTime_Start */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Return)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Return
extern void Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Return(P2VAR(EcuM_TimeType, AUTOMATIC, RTE_APPL_DATA) time);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Return(time) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Return */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Start)
#undef Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Start
extern void Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Start(P2VAR(EcuM_TimeType, AUTOMATIC, RTE_APPL_DATA) time);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Start(time) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_EcuMTime_GetWakeupTime_Start */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Return)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Return
extern void Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Return(P2VAR(EcuM_ShutdownTargetType, AUTOMATIC, RTE_APPL_DATA) shutdownTarget, P2VAR(EcuM_ShutdownModeType, AUTOMATIC, RTE_APPL_DATA) shutdownMode);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Return(shutdownTarget, shutdownMode) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Return */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Start)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Start
extern void Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Start(P2VAR(EcuM_ShutdownTargetType, AUTOMATIC, RTE_APPL_DATA) shutdownTarget, P2VAR(EcuM_ShutdownModeType, AUTOMATIC, RTE_APPL_DATA) shutdownMode);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Start(shutdownTarget, shutdownMode) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetLastShutdownTarget_Start */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Return)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Return
extern void Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Return(P2VAR(EcuM_ShutdownTargetType, AUTOMATIC, RTE_APPL_DATA) shutdownTarget, P2VAR(EcuM_ShutdownModeType, AUTOMATIC, RTE_APPL_DATA) shutdownMode);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Return(shutdownTarget, shutdownMode) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Return */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Start)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Start
extern void Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Start(P2VAR(EcuM_ShutdownTargetType, AUTOMATIC, RTE_APPL_DATA) shutdownTarget, P2VAR(EcuM_ShutdownModeType, AUTOMATIC, RTE_APPL_DATA) shutdownMode);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Start(shutdownTarget, shutdownMode) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_GetShutdownTarget_Start */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Return
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Return)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Return
extern void Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Return(VAR(EcuM_ShutdownTargetType, AUTOMATIC) shutdownTarget, VAR(EcuM_ShutdownModeType, AUTOMATIC) shutdownMode);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Return(shutdownTarget, shutdownMode) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Return */

#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Start
#endif
#if defined(Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Start)
#undef Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Start
extern void Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Start(VAR(EcuM_ShutdownTargetType, AUTOMATIC) shutdownTarget, VAR(EcuM_ShutdownModeType, AUTOMATIC) shutdownMode);
#else
#define Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Start(shutdownTarget, shutdownMode) ((void)(0))
#endif /* Rte_CallHook_SWC_AppMode_requirePort_ShutdownTarget_SelectShutdownTarget_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Return(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Start(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_ClearDTC_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Return(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Return(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Start(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Start(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient0_SelectDTC_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Return(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Start(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_ClearDTC_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Return(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Return(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Start(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Start(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDTC_DemClient1_SelectDTC_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start(VAR(uint32, AUTOMATIC) DTC, VAR(Dem_DTCFormatType, AUTOMATIC) DTCFormat, VAR(Dem_DTCOriginType, AUTOMATIC) DTCOrigin);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start(DTC, DTCFormat, DTCOrigin) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_ClearDtcNotification_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Return(VAR(uint8, AUTOMATIC) ClientID, P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) SuppressionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Return(ClientID, SuppressionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Start(VAR(uint8, AUTOMATIC) ClientID, P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) SuppressionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Start(ClientID, SuppressionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_GetDTCSuppression_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Return(VAR(uint8, AUTOMATIC) ClientID, VAR(boolean, AUTOMATIC) SuppressionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Return(ClientID, SuppressionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Start(VAR(uint8, AUTOMATIC) ClientID, VAR(boolean, AUTOMATIC) SuppressionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Start(ClientID, SuppressionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ControlDTCSuppression_SetDTCSuppression_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Return(VAR(boolean, AUTOMATIC) AvailableStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Return(AvailableStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Start(VAR(boolean, AUTOMATIC) AvailableStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Start(AvailableStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_ControlEventAvailable_DEM_E_TEST_EVENT6_SetEventAvailable_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Return(VAR(uint8, AUTOMATIC) ApiId, VAR(uint8, AUTOMATIC) ErrorId);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Return(ApiId, ErrorId) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Start(VAR(uint8, AUTOMATIC) ApiId, VAR(uint8, AUTOMATIC) ErrorId);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Start(ApiId, ErrorId) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportError_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Return(VAR(uint8, AUTOMATIC) ApiId, VAR(uint8, AUTOMATIC) ErrorId);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Return(ApiId, ErrorId) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Start(VAR(uint8, AUTOMATIC) ApiId, VAR(uint8, AUTOMATIC) ErrorId);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Start(ApiId, ErrorId) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DS000_ReportRuntimeError_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Return(VAR(sint32, AUTOMATIC) TestResult, VAR(sint32, AUTOMATIC) LowerLimit, VAR(sint32, AUTOMATIC) UpperLimit, VAR(Dem_DTRControlType, AUTOMATIC) Ctrlval);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Return(TestResult, LowerLimit, UpperLimit, Ctrlval) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Start(VAR(sint32, AUTOMATIC) TestResult, VAR(sint32, AUTOMATIC) LowerLimit, VAR(sint32, AUTOMATIC) UpperLimit, VAR(Dem_DTRControlType, AUTOMATIC) Ctrlval);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Start(TestResult, LowerLimit, UpperLimit, Ctrlval) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr0_SetDTR_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Return(VAR(sint32, AUTOMATIC) TestResult, VAR(sint32, AUTOMATIC) LowerLimit, VAR(sint32, AUTOMATIC) UpperLimit, VAR(Dem_DTRControlType, AUTOMATIC) Ctrlval);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Return(TestResult, LowerLimit, UpperLimit, Ctrlval) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Start(VAR(sint32, AUTOMATIC) TestResult, VAR(sint32, AUTOMATIC) LowerLimit, VAR(sint32, AUTOMATIC) UpperLimit, VAR(Dem_DTRControlType, AUTOMATIC) Ctrlval);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Start(TestResult, LowerLimit, UpperLimit, Ctrlval) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_DTR_Dtr1_SetDTR_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Return(VAR(boolean, AUTOMATIC) ConditionFulfilled);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Return(ConditionFulfilled) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Start(VAR(boolean, AUTOMATIC) ConditionFulfilled);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Start(ConditionFulfilled) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EnableCond_EnableCondtion_0_SetEnableCondition_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Return(VAR(uint8, AUTOMATIC) RecordNumber, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) BufSize);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Return(RecordNumber, DestBuffer, BufSize) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Start(VAR(uint8, AUTOMATIC) RecordNumber, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) BufSize);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Start(RecordNumber, DestBuffer, BufSize) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventExtendedDataRecordEx_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Return(VAR(uint8, AUTOMATIC) RecordNumber, VAR(uint16, AUTOMATIC) DataId, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) BufSize);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Return(RecordNumber, DataId, DestBuffer, BufSize) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Start(VAR(uint8, AUTOMATIC) RecordNumber, VAR(uint16, AUTOMATIC) DataId, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DestBuffer, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) BufSize);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Start(RecordNumber, DataId, DestBuffer, BufSize) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT5_GetEventFreezeFrameDataEx_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Return(P2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) FaultDetectionCounter);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Return(FaultDetectionCounter) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Start(P2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) FaultDetectionCounter);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Start(FaultDetectionCounter) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventInfo_DEM_E_TEST_EVENT6_GetFaultDetectionCounter_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Return(VAR(boolean, AUTOMATIC) WIRStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Return(WIRStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Start(VAR(boolean, AUTOMATIC) WIRStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Start(WIRStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_EventStatus_DEM_E_TEST_EVENT3_SetWIRStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT10_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT11_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT12_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT13_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT1_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT2_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT3_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT4_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT5_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT6_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT7_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT8_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_EVENT9_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_1_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_2_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Return(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Return(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Start(VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Start(EventStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_Event_DEM_E_TEST_OBD_EVENT_3_SetEventStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Return(VAR(boolean, AUTOMATIC) Availability);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Return(Availability) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Start(VAR(boolean, AUTOMATIC) Availability);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Start(Availability) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM00_ControlFunctionAvailable_SetFunctionAvailable_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) Permission);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Return(Permission) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) Permission);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Start(Permission) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM00_FunctionInhibition_GetFunctionPermission_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Return(VAR(boolean, AUTOMATIC) Availability);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Return(Availability) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Start(VAR(boolean, AUTOMATIC) Availability);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Start(Availability) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM01_ControlFunctionAvailable_SetFunctionAvailable_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) Permission);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Return(Permission) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) Permission);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Start(Permission) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_FiM01_FunctionInhibition_GetFunctionPermission_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Return(VAR(Dem_IumprDenomCondStatusType, AUTOMATIC) ConditionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Return(ConditionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Start(VAR(Dem_IumprDenomCondStatusType, AUTOMATIC) ConditionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Start(ConditionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_INDIVIDUAL_DENOMINATOR_SetIUMPRDenCondition_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Return(VAR(Dem_IumprDenomCondStatusType, AUTOMATIC) ConditionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Return(ConditionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Start(VAR(Dem_IumprDenomCondStatusType, AUTOMATIC) ConditionStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Start(ConditionStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRDenominatorCondition_DEM_IUMPR_GENERAL_OBDCOND_SetIUMPRDenCondition_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Return(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Start(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio00_RepIUMPRFaultDetect_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Return(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Start(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio01_RepIUMPRFaultDetect_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Return(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Start(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IUMPRNumerator_Ratio02_RepIUMPRFaultDetect_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Return(P2VAR(Dem_IndicatorStatusType, AUTOMATIC, RTE_APPL_DATA) IndicatorStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Return(IndicatorStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Start(P2VAR(Dem_IndicatorStatusType, AUTOMATIC, RTE_APPL_DATA) IndicatorStatus);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Start(IndicatorStatus) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_IndStatus_DemIndicator_0_GetIndicatorStatus_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Return(VAR(Dem_EventIdType, AUTOMATIC) EventStatus, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData1);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Return(EventStatus, monitorData0, monitorData1) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Start(VAR(Dem_EventIdType, AUTOMATIC) EventStatus, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData0, VAR(Dem_MonitorDataType, AUTOMATIC) monitorData1);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Start(EventStatus, monitorData0, monitorData1) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_MonitorData_DEM_E_TEST_EVENT11_SetEventStatusWithMonitorData_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Return(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Start(void);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OpCycle_POWER_CYCLE_RestartOperationCycle_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Return(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Start(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetEventMemoryOverflow_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Return(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Start(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient0_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Return(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Start(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetEventMemoryOverflow_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndMirrorMemory_DemClient1_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Return(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Start(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetEventMemoryOverflow_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Return(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Start(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient0_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Return(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Start(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetEventMemoryOverflow_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPermanentMemory_DemClient1_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Return(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Start(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetEventMemoryOverflow_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Return(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Start(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient0_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Return(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Return(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Start(P2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) OverflowIndication);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Start(OverflowIndication) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetEventMemoryOverflow_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndPrimaryMemory_DemClient1_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Return(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) GetNumberOfEventMemoryEntries);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Start(GetNumberOfEventMemoryEntries) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_OverflowIndUserDefinedMemory_DemClient1_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Return(VAR(boolean, AUTOMATIC) ConditionFulfilled);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Return(ConditionFulfilled) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Start(VAR(boolean, AUTOMATIC) ConditionFulfilled);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Start(ConditionFulfilled) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition0_SetStorageCondition_Start */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Return)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Return
extern void Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Return(VAR(boolean, AUTOMATIC) ConditionFulfilled);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Return(ConditionFulfilled) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Return */

#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Start)
#undef Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Start
extern void Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Start(VAR(boolean, AUTOMATIC) ConditionFulfilled);
#else
#define Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Start(ConditionFulfilled) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticMonitor_StorageCond_DemStorageCondition1_SetStorageCondition_Start */

#if defined(Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Return)
#undef Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Return
extern void Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Return(VAR(Csm_ConstDataPtr, AUTOMATIC) seedPtr, VAR(uint32, AUTOMATIC) seedLength);
#else
#define Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Return(seedPtr, seedLength) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Return */

#if defined(Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Start)
#undef Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Start
extern void Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Start(VAR(Csm_ConstDataPtr, AUTOMATIC) seedPtr, VAR(uint32, AUTOMATIC) seedLength);
#else
#define Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Start(seedPtr, seedLength) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_CsmKeyManagement_RandomSeed_L9_RandomSeed_Start */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Return)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Return
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Return(P2VAR(Dcm_ProtocolType, AUTOMATIC, RTE_APPL_DATA) ActiveProtocolType, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) ConnectionId, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) TesterSourceAddress);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Return(ActiveProtocolType, ConnectionId, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Return */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Start)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Start
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Start(P2VAR(Dcm_ProtocolType, AUTOMATIC, RTE_APPL_DATA) ActiveProtocolType, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) ConnectionId, P2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) TesterSourceAddress);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Start(ActiveProtocolType, ConnectionId, TesterSourceAddress) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetActiveProtocol_Start */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Return)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Return
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Return(P2VAR(Dcm_SecLevelType, AUTOMATIC, RTE_APPL_DATA) SecLevel);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Return(SecLevel) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Return */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Start)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Start
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Start(P2VAR(Dcm_SecLevelType, AUTOMATIC, RTE_APPL_DATA) SecLevel);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Start(SecLevel) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSecurityLevel_Start */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Return)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Return
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Return(P2VAR(Dcm_SesCtrlType, AUTOMATIC, RTE_APPL_DATA) SesCtrlType);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Return(SesCtrlType) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Return */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Start)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Start
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Start(P2VAR(Dcm_SesCtrlType, AUTOMATIC, RTE_APPL_DATA) SesCtrlType);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Start(SesCtrlType) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_GetSesCtrlType_Start */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Return)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Return
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Return(void);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Return */

#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Start)
#undef Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Start
extern void Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Start(void);
#else
#define Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_DCM_Services_ResetToDefaultSession_Start */

#if defined(Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Return
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Return)
#undef Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Return
extern void Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) resultBuffer, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) resultLength);
#else
#define Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Return(resultBuffer, resultLength) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Return */

#if defined(Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Start
#endif
#if defined(Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Start)
#undef Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Start
extern void Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) resultBuffer, P2VAR(uint32, AUTOMATIC, RTE_APPL_DATA) resultLength);
#else
#define Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Start(resultBuffer, resultLength) ((void)(0))
#endif /* Rte_CallHook_SWC_DiagnosticService_RandomGenerate_L9_CsmRandomGenerateConfig_RandomGenerate_Start */

#if defined(Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Return
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Return)
#undef Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Return
extern void Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Return(void);
#else
#define Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Return() ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Return */

#if defined(Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Start
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Start)
#undef Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Start
extern void Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Start(void);
#else
#define Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Start() ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_SE_Init_CP_AS0_CheckpointReached_Start */

#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Return
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Return)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Return
extern void Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Return(P2VAR(WdgM_SupervisedEntityIdType, AUTOMATIC, RTE_APPL_DATA) SEID);
#else
#define Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Return(SEID) ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Return */

#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Start
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Start)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Start
extern void Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Start(P2VAR(WdgM_SupervisedEntityIdType, AUTOMATIC, RTE_APPL_DATA) SEID);
#else
#define Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Start(SEID) ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetFirstExpiredSEID_Start */

#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Return
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Return)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Return
extern void Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Return(P2VAR(WdgM_GlobalStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Return(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Return */

#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Start
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Start)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Start
extern void Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Start(P2VAR(WdgM_GlobalStatusType, AUTOMATIC, RTE_APPL_DATA) Status);
#else
#define Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Start(Status) ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_GetGlobalStatus_Start */

#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Return
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Return)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Return
extern void Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Return(VAR(WdgM_ModeType, AUTOMATIC) Mode);
#else
#define Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Return(Mode) ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Return */

#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Start
#endif
#if defined(Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Start)
#undef Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Start
extern void Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Start(VAR(WdgM_ModeType, AUTOMATIC) Mode);
#else
#define Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Start(Mode) ((void)(0))
#endif /* Rte_CallHook_SWC_WdgMTest_WdgM_GlobalSupervision_SetMode_Start */

#if defined(Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Return
#endif
#if defined(Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Return)
#undef Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Return
extern void Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Return(P2CONST(StbM_SyncRecordTableBlockType, AUTOMATIC, RTE_APPL_CONST) syncRecordTableBlock);
#else
#define Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Return(syncRecordTableBlock) ((void)(0))
#endif /* Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Return */

#if defined(Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Start
#endif
#if defined(Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Start)
#undef Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Start
extern void Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Start(P2CONST(StbM_SyncRecordTableBlockType, AUTOMATIC, RTE_APPL_CONST) syncRecordTableBlock);
#else
#define Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Start(syncRecordTableBlock) ((void)(0))
#endif /* Rte_CallHook_StbM_MeasurementNotification_Client0_SetSyncTimeRecordTable_Start */

#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Return
#endif
#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Return)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Return
extern void Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Return */

#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Start
#endif
#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Start)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Start
extern void Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN1_SCHEDULE_INDICATION_LinSchedule_LIN1_Start */

#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Return
#endif
#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Return)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Return
extern void Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Return */

#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Start
#endif
#if defined(Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Start)
#undef Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Start
extern void Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_App_Lin_LIN1_R_MSR_LIN2_SCHEDULE_INDICATION_LinSchedule_LIN2_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN1_ComMMode_LIN1_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_LIN2_ComMMode_LIN2_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_ComMMode_PNC32_ComMMode_PNC32_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_InitState_InitState_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_WakeupEvent_WakeupEvent_Start */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Return
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Return)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Return
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Return(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Return */

#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Start
#endif
#if defined(Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Start)
#undef Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Start
extern void Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Start(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_AppMode_modeNotificationPort_currentMode_currentMode_Start */

#if defined(Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Return
#endif
#if defined(Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Return)
#undef Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Return
extern void Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Return(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Return */

#if defined(Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Start
#endif
#if defined(Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Start)
#undef Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Start
extern void Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Start(previousMode, nextMode) ((void)(0))
#endif /* Rte_ModeHook_SWC_DiagnosticService_modeNotificationPort_SessionControl_Dcm_DiagnosticSessionControlModeSwitchInterface_Start */

#if defined(Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Return
#endif
#if defined(Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Return)
#undef Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Return
extern void Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Return(void);
#else
#define Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Return() ((void)(0))
#endif /* Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Return */

#if defined(Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Start
#endif
#if defined(Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Start)
#undef Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Start
extern void Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Start(void);
#else
#define Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Start() ((void)(0))
#endif /* Rte_ModeHook_SWC_WdgMTest_globalMode_currentMode_Start */

#if defined(Rte_ModeHook_WdgM_globalMode_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_WdgM_globalMode_currentMode_Return
#endif
#if defined(Rte_ModeHook_WdgM_globalMode_currentMode_Return)
#undef Rte_ModeHook_WdgM_globalMode_currentMode_Return
extern void Rte_ModeHook_WdgM_globalMode_currentMode_Return(void);
#else
#define Rte_ModeHook_WdgM_globalMode_currentMode_Return() ((void)(0))
#endif /* Rte_ModeHook_WdgM_globalMode_currentMode_Return */

#if defined(Rte_ModeHook_WdgM_globalMode_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_WdgM_globalMode_currentMode_Start
#endif
#if defined(Rte_ModeHook_WdgM_globalMode_currentMode_Start)
#undef Rte_ModeHook_WdgM_globalMode_currentMode_Start
extern void Rte_ModeHook_WdgM_globalMode_currentMode_Start(void);
#else
#define Rte_ModeHook_WdgM_globalMode_currentMode_Start() ((void)(0))
#endif /* Rte_ModeHook_WdgM_globalMode_currentMode_Start */

#if defined(Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Return
#endif
#if defined(Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Return)
#undef Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Return
extern void Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Return(void);
#else
#define Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Return() ((void)(0))
#endif /* Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Return */

#if defined(Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Start
#endif
#if defined(Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Start)
#undef Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Start
extern void Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Start(void);
#else
#define Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Start() ((void)(0))
#endif /* Rte_ModeHook_WdgM_mode_SE_Init_currentMode_Start */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Return
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Return)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Return
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Return(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Return */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Start
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Start)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Start
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Start(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN1_LinSchedule_LIN1_Start */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Return
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Return)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Return
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Return(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Return */

#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Start
#endif
#if defined(Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Start)
#undef Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Start
extern void Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
#else
#define Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Start(Data) ((void)(0))
#endif /* Rte_ReadHook_BswM_Partition_Main_modeRequestPort_LinSchedule_LIN2_LinSchedule_LIN2_Start */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Return
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Return)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Return
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Return(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Return */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Start
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Start)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Start
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Start(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN1_Start */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Return
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Return)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Return
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Return(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Return */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Start
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Start)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Start
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Start(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleRequest_LIN2_Start */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Return
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Return)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Return
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Return(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Return */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Start
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Start)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Start
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Start(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN1_Start */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Return
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Return)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Return
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Return(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Return */

#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Start
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Start)
#undef Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Start
extern void Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Start(void);
#else
#define Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_Sym_LinScheduleSwitch_LIN2_Start */

#if defined(Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Return
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Return)
#undef Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Return
extern void Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Return(void);
#else
#define Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Return() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Return */

#if defined(Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Start
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Start)
#undef Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Start
extern void Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Start(void);
#else
#define Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Start() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_lin_after_schedule_Start */

#if defined(Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Return
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Return)
#undef Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Return
extern void Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Return(void);
#else
#define Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Return() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Return */

#if defined(Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Start
#endif
#if defined(Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Start)
#undef Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Start
extern void Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Start(void);
#else
#define Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Start() ((void)(0))
#endif /* Rte_Runnable_App_Lin_LIN1_lin_cbk_err_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMBORState_FD_CAN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_CanSMState_FD_CAN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_FD_CAN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_LIN2_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_ComMMode_PNC32_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_DcmDiagnosticSessionControl_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ControlDTCSettingModeSwitchInterface_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_DiagnosticSessionControlModeSwitchInterface_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_EcuResetModeSwitchInterface_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_InitState_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMSchedule_LIN2_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_LinSMState_LIN2_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_FD_CAN1_PNC32_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupRx_LIN2_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_FD_CAN1_PNC32_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_PduGroupTx_LIN2_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_ActionList_RteSwitch_WakeupEvent_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_LIN2_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_ComMMode_PNC32_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN1_Start */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Return
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Return)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Return
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Return(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Return */

#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Start
#endif
#if defined(Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Start)
#undef Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Start
extern void Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Start(void);
#else
#define Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_BswM_Partition_Main_BswM_Immediate_LinSchedule_LIN2_Start */

#if defined(Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Return
#endif
#if defined(Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Return)
#undef Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Return
extern void Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Return(void);
#else
#define Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Return() ((void)(0))
#endif /* Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Return */

#if defined(Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Start
#endif
#if defined(Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Start)
#undef Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Start
extern void Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Start(void);
#else
#define Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Start() ((void)(0))
#endif /* Rte_Runnable_CDD_LIN_RE_CB_AfterSchedule_Start */

#if defined(Rte_Runnable_CDD_LIN_RE_CB_Error_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_CDD_LIN_RE_CB_Error_Return
#endif
#if defined(Rte_Runnable_CDD_LIN_RE_CB_Error_Return)
#undef Rte_Runnable_CDD_LIN_RE_CB_Error_Return
extern void Rte_Runnable_CDD_LIN_RE_CB_Error_Return(void);
#else
#define Rte_Runnable_CDD_LIN_RE_CB_Error_Return() ((void)(0))
#endif /* Rte_Runnable_CDD_LIN_RE_CB_Error_Return */

#if defined(Rte_Runnable_CDD_LIN_RE_CB_Error_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_CDD_LIN_RE_CB_Error_Start
#endif
#if defined(Rte_Runnable_CDD_LIN_RE_CB_Error_Start)
#undef Rte_Runnable_CDD_LIN_RE_CB_Error_Start
extern void Rte_Runnable_CDD_LIN_RE_CB_Error_Start(void);
#else
#define Rte_Runnable_CDD_LIN_RE_CB_Error_Start() ((void)(0))
#endif /* Rte_Runnable_CDD_LIN_RE_CB_Error_Start */

#if defined(Rte_Runnable_ComM_ComM_GetCurrentComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetCurrentComMode_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_GetCurrentComMode_Return)
#undef Rte_Runnable_ComM_ComM_GetCurrentComMode_Return
extern void Rte_Runnable_ComM_ComM_GetCurrentComMode_Return(void);
#else
#define Rte_Runnable_ComM_ComM_GetCurrentComMode_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetCurrentComMode_Return */

#if defined(Rte_Runnable_ComM_ComM_GetCurrentComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetCurrentComMode_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_GetCurrentComMode_Start)
#undef Rte_Runnable_ComM_ComM_GetCurrentComMode_Start
extern void Rte_Runnable_ComM_ComM_GetCurrentComMode_Start(void);
#else
#define Rte_Runnable_ComM_ComM_GetCurrentComMode_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetCurrentComMode_Start */

#if defined(Rte_Runnable_ComM_ComM_GetInhibitionStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetInhibitionStatus_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_GetInhibitionStatus_Return)
#undef Rte_Runnable_ComM_ComM_GetInhibitionStatus_Return
extern void Rte_Runnable_ComM_ComM_GetInhibitionStatus_Return(void);
#else
#define Rte_Runnable_ComM_ComM_GetInhibitionStatus_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetInhibitionStatus_Return */

#if defined(Rte_Runnable_ComM_ComM_GetInhibitionStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetInhibitionStatus_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_GetInhibitionStatus_Start)
#undef Rte_Runnable_ComM_ComM_GetInhibitionStatus_Start
extern void Rte_Runnable_ComM_ComM_GetInhibitionStatus_Start(void);
#else
#define Rte_Runnable_ComM_ComM_GetInhibitionStatus_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetInhibitionStatus_Start */

#if defined(Rte_Runnable_ComM_ComM_GetMaxComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetMaxComMode_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_GetMaxComMode_Return)
#undef Rte_Runnable_ComM_ComM_GetMaxComMode_Return
extern void Rte_Runnable_ComM_ComM_GetMaxComMode_Return(void);
#else
#define Rte_Runnable_ComM_ComM_GetMaxComMode_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetMaxComMode_Return */

#if defined(Rte_Runnable_ComM_ComM_GetMaxComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetMaxComMode_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_GetMaxComMode_Start)
#undef Rte_Runnable_ComM_ComM_GetMaxComMode_Start
extern void Rte_Runnable_ComM_ComM_GetMaxComMode_Start(void);
#else
#define Rte_Runnable_ComM_ComM_GetMaxComMode_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetMaxComMode_Start */

#if defined(Rte_Runnable_ComM_ComM_GetRequestedComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetRequestedComMode_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_GetRequestedComMode_Return)
#undef Rte_Runnable_ComM_ComM_GetRequestedComMode_Return
extern void Rte_Runnable_ComM_ComM_GetRequestedComMode_Return(void);
#else
#define Rte_Runnable_ComM_ComM_GetRequestedComMode_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetRequestedComMode_Return */

#if defined(Rte_Runnable_ComM_ComM_GetRequestedComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_GetRequestedComMode_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_GetRequestedComMode_Start)
#undef Rte_Runnable_ComM_ComM_GetRequestedComMode_Start
extern void Rte_Runnable_ComM_ComM_GetRequestedComMode_Start(void);
#else
#define Rte_Runnable_ComM_ComM_GetRequestedComMode_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_GetRequestedComMode_Start */

#if defined(Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Return)
#undef Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Return
extern void Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Return(void);
#else
#define Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Return */

#if defined(Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Start)
#undef Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Start
extern void Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Start(void);
#else
#define Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_LimitChannelToNoComMode_Start */

#if defined(Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Return)
#undef Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Return
extern void Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Return(void);
#else
#define Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Return */

#if defined(Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Start)
#undef Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Start
extern void Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Start(void);
#else
#define Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_LimitECUToNoComMode_Start */

#if defined(Rte_Runnable_ComM_ComM_PreventWakeUp_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_PreventWakeUp_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_PreventWakeUp_Return)
#undef Rte_Runnable_ComM_ComM_PreventWakeUp_Return
extern void Rte_Runnable_ComM_ComM_PreventWakeUp_Return(void);
#else
#define Rte_Runnable_ComM_ComM_PreventWakeUp_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_PreventWakeUp_Return */

#if defined(Rte_Runnable_ComM_ComM_PreventWakeUp_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_PreventWakeUp_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_PreventWakeUp_Start)
#undef Rte_Runnable_ComM_ComM_PreventWakeUp_Start
extern void Rte_Runnable_ComM_ComM_PreventWakeUp_Start(void);
#else
#define Rte_Runnable_ComM_ComM_PreventWakeUp_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_PreventWakeUp_Start */

#if defined(Rte_Runnable_ComM_ComM_RequestComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_RequestComMode_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_RequestComMode_Return)
#undef Rte_Runnable_ComM_ComM_RequestComMode_Return
extern void Rte_Runnable_ComM_ComM_RequestComMode_Return(void);
#else
#define Rte_Runnable_ComM_ComM_RequestComMode_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_RequestComMode_Return */

#if defined(Rte_Runnable_ComM_ComM_RequestComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_RequestComMode_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_RequestComMode_Start)
#undef Rte_Runnable_ComM_ComM_RequestComMode_Start
extern void Rte_Runnable_ComM_ComM_RequestComMode_Start(void);
#else
#define Rte_Runnable_ComM_ComM_RequestComMode_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_RequestComMode_Start */

#if defined(Rte_Runnable_ComM_ComM_SetECUGroupClassification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_SetECUGroupClassification_Return
#endif
#if defined(Rte_Runnable_ComM_ComM_SetECUGroupClassification_Return)
#undef Rte_Runnable_ComM_ComM_SetECUGroupClassification_Return
extern void Rte_Runnable_ComM_ComM_SetECUGroupClassification_Return(void);
#else
#define Rte_Runnable_ComM_ComM_SetECUGroupClassification_Return() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_SetECUGroupClassification_Return */

#if defined(Rte_Runnable_ComM_ComM_SetECUGroupClassification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_ComM_ComM_SetECUGroupClassification_Start
#endif
#if defined(Rte_Runnable_ComM_ComM_SetECUGroupClassification_Start)
#undef Rte_Runnable_ComM_ComM_SetECUGroupClassification_Start
extern void Rte_Runnable_ComM_ComM_SetECUGroupClassification_Start(void);
#else
#define Rte_Runnable_ComM_ComM_SetECUGroupClassification_Start() ((void)(0))
#endif /* Rte_Runnable_ComM_ComM_SetECUGroupClassification_Start */

#if defined(Rte_Runnable_Csm_Csm_Decrypt_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_Decrypt_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_Decrypt_Return)
#undef Rte_Runnable_Csm_Csm_Decrypt_Return
extern void Rte_Runnable_Csm_Csm_Decrypt_Return(void);
#else
#define Rte_Runnable_Csm_Csm_Decrypt_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_Decrypt_Return */

#if defined(Rte_Runnable_Csm_Csm_Decrypt_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_Decrypt_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_Decrypt_Start)
#undef Rte_Runnable_Csm_Csm_Decrypt_Start
extern void Rte_Runnable_Csm_Csm_Decrypt_Start(void);
#else
#define Rte_Runnable_Csm_Csm_Decrypt_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_Decrypt_Start */

#if defined(Rte_Runnable_Csm_Csm_Encrypt_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_Encrypt_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_Encrypt_Return)
#undef Rte_Runnable_Csm_Csm_Encrypt_Return
extern void Rte_Runnable_Csm_Csm_Encrypt_Return(void);
#else
#define Rte_Runnable_Csm_Csm_Encrypt_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_Encrypt_Return */

#if defined(Rte_Runnable_Csm_Csm_Encrypt_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_Encrypt_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_Encrypt_Start)
#undef Rte_Runnable_Csm_Csm_Encrypt_Start
extern void Rte_Runnable_Csm_Csm_Encrypt_Start(void);
#else
#define Rte_Runnable_Csm_Csm_Encrypt_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_Encrypt_Start */

#if defined(Rte_Runnable_Csm_Csm_Hash_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_Hash_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_Hash_Return)
#undef Rte_Runnable_Csm_Csm_Hash_Return
extern void Rte_Runnable_Csm_Csm_Hash_Return(void);
#else
#define Rte_Runnable_Csm_Csm_Hash_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_Hash_Return */

#if defined(Rte_Runnable_Csm_Csm_Hash_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_Hash_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_Hash_Start)
#undef Rte_Runnable_Csm_Csm_Hash_Start
extern void Rte_Runnable_Csm_Csm_Hash_Start(void);
#else
#define Rte_Runnable_Csm_Csm_Hash_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_Hash_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyCopy_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyCopy_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyCopy_Return)
#undef Rte_Runnable_Csm_Csm_KeyCopy_Return
extern void Rte_Runnable_Csm_Csm_KeyCopy_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyCopy_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyCopy_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyCopy_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyCopy_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyCopy_Start)
#undef Rte_Runnable_Csm_Csm_KeyCopy_Start
extern void Rte_Runnable_Csm_Csm_KeyCopy_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyCopy_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyCopy_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyDerive_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyDerive_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyDerive_Return)
#undef Rte_Runnable_Csm_Csm_KeyDerive_Return
extern void Rte_Runnable_Csm_Csm_KeyDerive_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyDerive_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyDerive_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyDerive_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyDerive_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyDerive_Start)
#undef Rte_Runnable_Csm_Csm_KeyDerive_Start
extern void Rte_Runnable_Csm_Csm_KeyDerive_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyDerive_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyDerive_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Return)
#undef Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Return
extern void Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Start)
#undef Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Start
extern void Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementCopyPartial_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyElementCopy_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementCopy_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementCopy_Return)
#undef Rte_Runnable_Csm_Csm_KeyElementCopy_Return
extern void Rte_Runnable_Csm_Csm_KeyElementCopy_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementCopy_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementCopy_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyElementCopy_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementCopy_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementCopy_Start)
#undef Rte_Runnable_Csm_Csm_KeyElementCopy_Start
extern void Rte_Runnable_Csm_Csm_KeyElementCopy_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementCopy_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementCopy_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyElementGet_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementGet_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementGet_Return)
#undef Rte_Runnable_Csm_Csm_KeyElementGet_Return
extern void Rte_Runnable_Csm_Csm_KeyElementGet_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementGet_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementGet_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyElementGet_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementGet_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementGet_Start)
#undef Rte_Runnable_Csm_Csm_KeyElementGet_Start
extern void Rte_Runnable_Csm_Csm_KeyElementGet_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementGet_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementGet_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyElementSet_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementSet_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementSet_Return)
#undef Rte_Runnable_Csm_Csm_KeyElementSet_Return
extern void Rte_Runnable_Csm_Csm_KeyElementSet_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementSet_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementSet_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyElementSet_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyElementSet_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyElementSet_Start)
#undef Rte_Runnable_Csm_Csm_KeyElementSet_Start
extern void Rte_Runnable_Csm_Csm_KeyElementSet_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyElementSet_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyElementSet_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Return)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Return
extern void Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Start)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Start
extern void Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyExchangeCalcPubVal_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Return)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Return
extern void Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Start)
#undef Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Start
extern void Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyExchangeCalcSecret_Start */

#if defined(Rte_Runnable_Csm_Csm_KeyGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyGenerate_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyGenerate_Return)
#undef Rte_Runnable_Csm_Csm_KeyGenerate_Return
extern void Rte_Runnable_Csm_Csm_KeyGenerate_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeyGenerate_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyGenerate_Return */

#if defined(Rte_Runnable_Csm_Csm_KeyGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeyGenerate_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeyGenerate_Start)
#undef Rte_Runnable_Csm_Csm_KeyGenerate_Start
extern void Rte_Runnable_Csm_Csm_KeyGenerate_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeyGenerate_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeyGenerate_Start */

#if defined(Rte_Runnable_Csm_Csm_KeySetValid_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeySetValid_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_KeySetValid_Return)
#undef Rte_Runnable_Csm_Csm_KeySetValid_Return
extern void Rte_Runnable_Csm_Csm_KeySetValid_Return(void);
#else
#define Rte_Runnable_Csm_Csm_KeySetValid_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeySetValid_Return */

#if defined(Rte_Runnable_Csm_Csm_KeySetValid_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_KeySetValid_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_KeySetValid_Start)
#undef Rte_Runnable_Csm_Csm_KeySetValid_Start
extern void Rte_Runnable_Csm_Csm_KeySetValid_Start(void);
#else
#define Rte_Runnable_Csm_Csm_KeySetValid_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_KeySetValid_Start */

#if defined(Rte_Runnable_Csm_Csm_MacGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_MacGenerate_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_MacGenerate_Return)
#undef Rte_Runnable_Csm_Csm_MacGenerate_Return
extern void Rte_Runnable_Csm_Csm_MacGenerate_Return(void);
#else
#define Rte_Runnable_Csm_Csm_MacGenerate_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_MacGenerate_Return */

#if defined(Rte_Runnable_Csm_Csm_MacGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_MacGenerate_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_MacGenerate_Start)
#undef Rte_Runnable_Csm_Csm_MacGenerate_Start
extern void Rte_Runnable_Csm_Csm_MacGenerate_Start(void);
#else
#define Rte_Runnable_Csm_Csm_MacGenerate_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_MacGenerate_Start */

#if defined(Rte_Runnable_Csm_Csm_MacVerify_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_MacVerify_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_MacVerify_Return)
#undef Rte_Runnable_Csm_Csm_MacVerify_Return
extern void Rte_Runnable_Csm_Csm_MacVerify_Return(void);
#else
#define Rte_Runnable_Csm_Csm_MacVerify_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_MacVerify_Return */

#if defined(Rte_Runnable_Csm_Csm_MacVerify_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_MacVerify_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_MacVerify_Start)
#undef Rte_Runnable_Csm_Csm_MacVerify_Start
extern void Rte_Runnable_Csm_Csm_MacVerify_Start(void);
#else
#define Rte_Runnable_Csm_Csm_MacVerify_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_MacVerify_Start */

#if defined(Rte_Runnable_Csm_Csm_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_MainFunction_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_MainFunction_Return)
#undef Rte_Runnable_Csm_Csm_MainFunction_Return
extern void Rte_Runnable_Csm_Csm_MainFunction_Return(void);
#else
#define Rte_Runnable_Csm_Csm_MainFunction_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_MainFunction_Return */

#if defined(Rte_Runnable_Csm_Csm_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_MainFunction_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_MainFunction_Start)
#undef Rte_Runnable_Csm_Csm_MainFunction_Start
extern void Rte_Runnable_Csm_Csm_MainFunction_Start(void);
#else
#define Rte_Runnable_Csm_Csm_MainFunction_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_MainFunction_Start */

#if defined(Rte_Runnable_Csm_Csm_RandomGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_RandomGenerate_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_RandomGenerate_Return)
#undef Rte_Runnable_Csm_Csm_RandomGenerate_Return
extern void Rte_Runnable_Csm_Csm_RandomGenerate_Return(void);
#else
#define Rte_Runnable_Csm_Csm_RandomGenerate_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_RandomGenerate_Return */

#if defined(Rte_Runnable_Csm_Csm_RandomGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_RandomGenerate_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_RandomGenerate_Start)
#undef Rte_Runnable_Csm_Csm_RandomGenerate_Start
extern void Rte_Runnable_Csm_Csm_RandomGenerate_Start(void);
#else
#define Rte_Runnable_Csm_Csm_RandomGenerate_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_RandomGenerate_Start */

#if defined(Rte_Runnable_Csm_Csm_RandomSeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_RandomSeed_Return
#endif
#if defined(Rte_Runnable_Csm_Csm_RandomSeed_Return)
#undef Rte_Runnable_Csm_Csm_RandomSeed_Return
extern void Rte_Runnable_Csm_Csm_RandomSeed_Return(void);
#else
#define Rte_Runnable_Csm_Csm_RandomSeed_Return() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_RandomSeed_Return */

#if defined(Rte_Runnable_Csm_Csm_RandomSeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Csm_Csm_RandomSeed_Start
#endif
#if defined(Rte_Runnable_Csm_Csm_RandomSeed_Start)
#undef Rte_Runnable_Csm_Csm_RandomSeed_Start
extern void Rte_Runnable_Csm_Csm_RandomSeed_Start(void);
#else
#define Rte_Runnable_Csm_Csm_RandomSeed_Start() ((void)(0))
#endif /* Rte_Runnable_Csm_Csm_RandomSeed_Start */

#if defined(Rte_Runnable_DET_Det_ReportError_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_DET_Det_ReportError_Return
#endif
#if defined(Rte_Runnable_DET_Det_ReportError_Return)
#undef Rte_Runnable_DET_Det_ReportError_Return
extern void Rte_Runnable_DET_Det_ReportError_Return(void);
#else
#define Rte_Runnable_DET_Det_ReportError_Return() ((void)(0))
#endif /* Rte_Runnable_DET_Det_ReportError_Return */

#if defined(Rte_Runnable_DET_Det_ReportError_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_DET_Det_ReportError_Start
#endif
#if defined(Rte_Runnable_DET_Det_ReportError_Start)
#undef Rte_Runnable_DET_Det_ReportError_Start
extern void Rte_Runnable_DET_Det_ReportError_Start(void);
#else
#define Rte_Runnable_DET_Det_ReportError_Start() ((void)(0))
#endif /* Rte_Runnable_DET_Det_ReportError_Start */

#if defined(Rte_Runnable_DET_Det_ReportRuntimeError_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_DET_Det_ReportRuntimeError_Return
#endif
#if defined(Rte_Runnable_DET_Det_ReportRuntimeError_Return)
#undef Rte_Runnable_DET_Det_ReportRuntimeError_Return
extern void Rte_Runnable_DET_Det_ReportRuntimeError_Return(void);
#else
#define Rte_Runnable_DET_Det_ReportRuntimeError_Return() ((void)(0))
#endif /* Rte_Runnable_DET_Det_ReportRuntimeError_Return */

#if defined(Rte_Runnable_DET_Det_ReportRuntimeError_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_DET_Det_ReportRuntimeError_Start
#endif
#if defined(Rte_Runnable_DET_Det_ReportRuntimeError_Start)
#undef Rte_Runnable_DET_Det_ReportRuntimeError_Start
extern void Rte_Runnable_DET_Det_ReportRuntimeError_Start(void);
#else
#define Rte_Runnable_DET_Det_ReportRuntimeError_Start() ((void)(0))
#endif /* Rte_Runnable_DET_Det_ReportRuntimeError_Start */

#if defined(Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Return
#endif
#if defined(Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Return)
#undef Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Return
extern void Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Return(void);
#else
#define Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Return() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Return */

#if defined(Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Start
#endif
#if defined(Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Start)
#undef Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Start
extern void Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Start(void);
#else
#define Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Start() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_GetActiveProtocol_Start */

#if defined(Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Return
#endif
#if defined(Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Return)
#undef Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Return
extern void Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Return(void);
#else
#define Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Return() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Return */

#if defined(Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Start
#endif
#if defined(Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Start)
#undef Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Start
extern void Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Start(void);
#else
#define Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Start() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_GetSecurityLevel_Start */

#if defined(Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Return
#endif
#if defined(Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Return)
#undef Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Return
extern void Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Return(void);
#else
#define Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Return() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Return */

#if defined(Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Start
#endif
#if defined(Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Start)
#undef Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Start
extern void Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Start(void);
#else
#define Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Start() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_GetSesCtrlType_Start */

#if defined(Rte_Runnable_Dcm_Dcm_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_MainFunction_Return
#endif
#if defined(Rte_Runnable_Dcm_Dcm_MainFunction_Return)
#undef Rte_Runnable_Dcm_Dcm_MainFunction_Return
extern void Rte_Runnable_Dcm_Dcm_MainFunction_Return(void);
#else
#define Rte_Runnable_Dcm_Dcm_MainFunction_Return() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_MainFunction_Return */

#if defined(Rte_Runnable_Dcm_Dcm_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_MainFunction_Start
#endif
#if defined(Rte_Runnable_Dcm_Dcm_MainFunction_Start)
#undef Rte_Runnable_Dcm_Dcm_MainFunction_Start
extern void Rte_Runnable_Dcm_Dcm_MainFunction_Start(void);
#else
#define Rte_Runnable_Dcm_Dcm_MainFunction_Start() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_MainFunction_Start */

#if defined(Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Return
#endif
#if defined(Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Return)
#undef Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Return
extern void Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Return(void);
#else
#define Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Return() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Return */

#if defined(Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Start
#endif
#if defined(Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Start)
#undef Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Start
extern void Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Start(void);
#else
#define Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Start() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_ResetToDefaultSession_Start */

#if defined(Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Return
#endif
#if defined(Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Return)
#undef Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Return
extern void Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Return(void);
#else
#define Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Return() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Return */

#if defined(Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Start
#endif
#if defined(Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Start)
#undef Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Start
extern void Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Start(void);
#else
#define Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Start() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_Runnable_TriggerOnEvent_Start */

#if defined(Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Return
#endif
#if defined(Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Return)
#undef Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Return
extern void Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Return(void);
#else
#define Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Return() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Return */

#if defined(Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Start
#endif
#if defined(Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Start)
#undef Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Start
extern void Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Start(void);
#else
#define Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Start() ((void)(0))
#endif /* Rte_Runnable_Dcm_Dcm_SetActiveDiagnostic_Start */

#if defined(Rte_Runnable_Dem_Dem_ClearDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_ClearDTC_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_ClearDTC_Return)
#undef Rte_Runnable_Dem_Dem_ClearDTC_Return
extern void Rte_Runnable_Dem_Dem_ClearDTC_Return(void);
#else
#define Rte_Runnable_Dem_Dem_ClearDTC_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_ClearDTC_Return */

#if defined(Rte_Runnable_Dem_Dem_ClearDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_ClearDTC_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_ClearDTC_Start)
#undef Rte_Runnable_Dem_Dem_ClearDTC_Start
extern void Rte_Runnable_Dem_Dem_ClearDTC_Start(void);
#else
#define Rte_Runnable_Dem_Dem_ClearDTC_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_ClearDTC_Start */

#if defined(Rte_Runnable_Dem_Dem_GetCycleQualified_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetCycleQualified_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetCycleQualified_Return)
#undef Rte_Runnable_Dem_Dem_GetCycleQualified_Return
extern void Rte_Runnable_Dem_Dem_GetCycleQualified_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetCycleQualified_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetCycleQualified_Return */

#if defined(Rte_Runnable_Dem_Dem_GetCycleQualified_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetCycleQualified_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetCycleQualified_Start)
#undef Rte_Runnable_Dem_Dem_GetCycleQualified_Start
extern void Rte_Runnable_Dem_Dem_GetCycleQualified_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetCycleQualified_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetCycleQualified_Start */

#if defined(Rte_Runnable_Dem_Dem_GetDTCOfEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetDTCOfEvent_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetDTCOfEvent_Return)
#undef Rte_Runnable_Dem_Dem_GetDTCOfEvent_Return
extern void Rte_Runnable_Dem_Dem_GetDTCOfEvent_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetDTCOfEvent_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetDTCOfEvent_Return */

#if defined(Rte_Runnable_Dem_Dem_GetDTCOfEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetDTCOfEvent_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetDTCOfEvent_Start)
#undef Rte_Runnable_Dem_Dem_GetDTCOfEvent_Start
extern void Rte_Runnable_Dem_Dem_GetDTCOfEvent_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetDTCOfEvent_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetDTCOfEvent_Start */

#if defined(Rte_Runnable_Dem_Dem_GetDTCSuppression_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetDTCSuppression_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetDTCSuppression_Return)
#undef Rte_Runnable_Dem_Dem_GetDTCSuppression_Return
extern void Rte_Runnable_Dem_Dem_GetDTCSuppression_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetDTCSuppression_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetDTCSuppression_Return */

#if defined(Rte_Runnable_Dem_Dem_GetDTCSuppression_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetDTCSuppression_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetDTCSuppression_Start)
#undef Rte_Runnable_Dem_Dem_GetDTCSuppression_Start
extern void Rte_Runnable_Dem_Dem_GetDTCSuppression_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetDTCSuppression_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetDTCSuppression_Start */

#if defined(Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Return)
#undef Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Return
extern void Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Return */

#if defined(Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Start)
#undef Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Start
extern void Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetDebouncingOfEvent_Start */

#if defined(Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Return)
#undef Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Return
extern void Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Return */

#if defined(Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Start)
#undef Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Start
extern void Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventExtendedDataRecordEx_Start */

#if defined(Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Return)
#undef Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Return
extern void Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Return */

#if defined(Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Start)
#undef Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Start
extern void Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventFreezeFrameDataEx_Start */

#if defined(Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Return)
#undef Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Return
extern void Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Return */

#if defined(Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Start)
#undef Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Start
extern void Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventMemoryOverflow_Start */

#if defined(Rte_Runnable_Dem_Dem_GetEventUdsStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventUdsStatus_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventUdsStatus_Return)
#undef Rte_Runnable_Dem_Dem_GetEventUdsStatus_Return
extern void Rte_Runnable_Dem_Dem_GetEventUdsStatus_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventUdsStatus_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventUdsStatus_Return */

#if defined(Rte_Runnable_Dem_Dem_GetEventUdsStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetEventUdsStatus_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetEventUdsStatus_Start)
#undef Rte_Runnable_Dem_Dem_GetEventUdsStatus_Start
extern void Rte_Runnable_Dem_Dem_GetEventUdsStatus_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetEventUdsStatus_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetEventUdsStatus_Start */

#if defined(Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Return)
#undef Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Return
extern void Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Return */

#if defined(Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Start)
#undef Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Start
extern void Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetFaultDetectionCounter_Start */

#if defined(Rte_Runnable_Dem_Dem_GetIndicatorStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetIndicatorStatus_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetIndicatorStatus_Return)
#undef Rte_Runnable_Dem_Dem_GetIndicatorStatus_Return
extern void Rte_Runnable_Dem_Dem_GetIndicatorStatus_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetIndicatorStatus_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetIndicatorStatus_Return */

#if defined(Rte_Runnable_Dem_Dem_GetIndicatorStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetIndicatorStatus_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetIndicatorStatus_Start)
#undef Rte_Runnable_Dem_Dem_GetIndicatorStatus_Start
extern void Rte_Runnable_Dem_Dem_GetIndicatorStatus_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetIndicatorStatus_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetIndicatorStatus_Start */

#if defined(Rte_Runnable_Dem_Dem_GetMonitorStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetMonitorStatus_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetMonitorStatus_Return)
#undef Rte_Runnable_Dem_Dem_GetMonitorStatus_Return
extern void Rte_Runnable_Dem_Dem_GetMonitorStatus_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetMonitorStatus_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetMonitorStatus_Return */

#if defined(Rte_Runnable_Dem_Dem_GetMonitorStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetMonitorStatus_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetMonitorStatus_Start)
#undef Rte_Runnable_Dem_Dem_GetMonitorStatus_Start
extern void Rte_Runnable_Dem_Dem_GetMonitorStatus_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetMonitorStatus_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetMonitorStatus_Start */

#if defined(Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Return)
#undef Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Return
extern void Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Return(void);
#else
#define Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Return */

#if defined(Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Start)
#undef Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Start
extern void Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Start(void);
#else
#define Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_GetNumberOfEventMemoryEntries_Start */

#if defined(Rte_Runnable_Dem_Dem_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_MainFunction_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_MainFunction_Return)
#undef Rte_Runnable_Dem_Dem_MainFunction_Return
extern void Rte_Runnable_Dem_Dem_MainFunction_Return(void);
#else
#define Rte_Runnable_Dem_Dem_MainFunction_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_MainFunction_Return */

#if defined(Rte_Runnable_Dem_Dem_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_MainFunction_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_MainFunction_Start)
#undef Rte_Runnable_Dem_Dem_MainFunction_Start
extern void Rte_Runnable_Dem_Dem_MainFunction_Start(void);
#else
#define Rte_Runnable_Dem_Dem_MainFunction_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_MainFunction_Start */

#if defined(Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Return)
#undef Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Return
extern void Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Return(void);
#else
#define Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Return */

#if defined(Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Start)
#undef Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Start
extern void Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Start(void);
#else
#define Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_ResetEventDebounceStatus_Start */

#if defined(Rte_Runnable_Dem_Dem_ResetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_ResetEventStatus_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_ResetEventStatus_Return)
#undef Rte_Runnable_Dem_Dem_ResetEventStatus_Return
extern void Rte_Runnable_Dem_Dem_ResetEventStatus_Return(void);
#else
#define Rte_Runnable_Dem_Dem_ResetEventStatus_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_ResetEventStatus_Return */

#if defined(Rte_Runnable_Dem_Dem_ResetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_ResetEventStatus_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_ResetEventStatus_Start)
#undef Rte_Runnable_Dem_Dem_ResetEventStatus_Start
extern void Rte_Runnable_Dem_Dem_ResetEventStatus_Start(void);
#else
#define Rte_Runnable_Dem_Dem_ResetEventStatus_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_ResetEventStatus_Start */

#if defined(Rte_Runnable_Dem_Dem_RestartOperationCycle_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_RestartOperationCycle_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_RestartOperationCycle_Return)
#undef Rte_Runnable_Dem_Dem_RestartOperationCycle_Return
extern void Rte_Runnable_Dem_Dem_RestartOperationCycle_Return(void);
#else
#define Rte_Runnable_Dem_Dem_RestartOperationCycle_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_RestartOperationCycle_Return */

#if defined(Rte_Runnable_Dem_Dem_RestartOperationCycle_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_RestartOperationCycle_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_RestartOperationCycle_Start)
#undef Rte_Runnable_Dem_Dem_RestartOperationCycle_Start
extern void Rte_Runnable_Dem_Dem_RestartOperationCycle_Start(void);
#else
#define Rte_Runnable_Dem_Dem_RestartOperationCycle_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_RestartOperationCycle_Start */

#if defined(Rte_Runnable_Dem_Dem_SelectDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SelectDTC_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SelectDTC_Return)
#undef Rte_Runnable_Dem_Dem_SelectDTC_Return
extern void Rte_Runnable_Dem_Dem_SelectDTC_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SelectDTC_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SelectDTC_Return */

#if defined(Rte_Runnable_Dem_Dem_SelectDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SelectDTC_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SelectDTC_Start)
#undef Rte_Runnable_Dem_Dem_SelectDTC_Start
extern void Rte_Runnable_Dem_Dem_SelectDTC_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SelectDTC_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SelectDTC_Start */

#if defined(Rte_Runnable_Dem_Dem_SetCycleQualified_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetCycleQualified_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetCycleQualified_Return)
#undef Rte_Runnable_Dem_Dem_SetCycleQualified_Return
extern void Rte_Runnable_Dem_Dem_SetCycleQualified_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetCycleQualified_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetCycleQualified_Return */

#if defined(Rte_Runnable_Dem_Dem_SetCycleQualified_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetCycleQualified_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetCycleQualified_Start)
#undef Rte_Runnable_Dem_Dem_SetCycleQualified_Start
extern void Rte_Runnable_Dem_Dem_SetCycleQualified_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetCycleQualified_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetCycleQualified_Start */

#if defined(Rte_Runnable_Dem_Dem_SetDTCSuppression_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetDTCSuppression_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetDTCSuppression_Return)
#undef Rte_Runnable_Dem_Dem_SetDTCSuppression_Return
extern void Rte_Runnable_Dem_Dem_SetDTCSuppression_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetDTCSuppression_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetDTCSuppression_Return */

#if defined(Rte_Runnable_Dem_Dem_SetDTCSuppression_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetDTCSuppression_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetDTCSuppression_Start)
#undef Rte_Runnable_Dem_Dem_SetDTCSuppression_Start
extern void Rte_Runnable_Dem_Dem_SetDTCSuppression_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetDTCSuppression_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetDTCSuppression_Start */

#if defined(Rte_Runnable_Dem_Dem_SetEnableCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEnableCondition_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEnableCondition_Return)
#undef Rte_Runnable_Dem_Dem_SetEnableCondition_Return
extern void Rte_Runnable_Dem_Dem_SetEnableCondition_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetEnableCondition_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEnableCondition_Return */

#if defined(Rte_Runnable_Dem_Dem_SetEnableCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEnableCondition_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEnableCondition_Start)
#undef Rte_Runnable_Dem_Dem_SetEnableCondition_Start
extern void Rte_Runnable_Dem_Dem_SetEnableCondition_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetEnableCondition_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEnableCondition_Start */

#if defined(Rte_Runnable_Dem_Dem_SetEventAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEventAvailable_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEventAvailable_Return)
#undef Rte_Runnable_Dem_Dem_SetEventAvailable_Return
extern void Rte_Runnable_Dem_Dem_SetEventAvailable_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetEventAvailable_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEventAvailable_Return */

#if defined(Rte_Runnable_Dem_Dem_SetEventAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEventAvailable_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEventAvailable_Start)
#undef Rte_Runnable_Dem_Dem_SetEventAvailable_Start
extern void Rte_Runnable_Dem_Dem_SetEventAvailable_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetEventAvailable_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEventAvailable_Start */

#if defined(Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Return)
#undef Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Return
extern void Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Return */

#if defined(Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Start)
#undef Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Start
extern void Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEventStatusWithMonitorData_Start */

#if defined(Rte_Runnable_Dem_Dem_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEventStatus_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEventStatus_Return)
#undef Rte_Runnable_Dem_Dem_SetEventStatus_Return
extern void Rte_Runnable_Dem_Dem_SetEventStatus_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetEventStatus_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEventStatus_Return */

#if defined(Rte_Runnable_Dem_Dem_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetEventStatus_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetEventStatus_Start)
#undef Rte_Runnable_Dem_Dem_SetEventStatus_Start
extern void Rte_Runnable_Dem_Dem_SetEventStatus_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetEventStatus_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetEventStatus_Start */

#if defined(Rte_Runnable_Dem_Dem_SetStorageCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetStorageCondition_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetStorageCondition_Return)
#undef Rte_Runnable_Dem_Dem_SetStorageCondition_Return
extern void Rte_Runnable_Dem_Dem_SetStorageCondition_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetStorageCondition_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetStorageCondition_Return */

#if defined(Rte_Runnable_Dem_Dem_SetStorageCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetStorageCondition_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetStorageCondition_Start)
#undef Rte_Runnable_Dem_Dem_SetStorageCondition_Start
extern void Rte_Runnable_Dem_Dem_SetStorageCondition_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetStorageCondition_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetStorageCondition_Start */

#if defined(Rte_Runnable_Dem_Dem_SetWIRStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetWIRStatus_Return
#endif
#if defined(Rte_Runnable_Dem_Dem_SetWIRStatus_Return)
#undef Rte_Runnable_Dem_Dem_SetWIRStatus_Return
extern void Rte_Runnable_Dem_Dem_SetWIRStatus_Return(void);
#else
#define Rte_Runnable_Dem_Dem_SetWIRStatus_Return() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetWIRStatus_Return */

#if defined(Rte_Runnable_Dem_Dem_SetWIRStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Dem_Dem_SetWIRStatus_Start
#endif
#if defined(Rte_Runnable_Dem_Dem_SetWIRStatus_Start)
#undef Rte_Runnable_Dem_Dem_SetWIRStatus_Start
extern void Rte_Runnable_Dem_Dem_SetWIRStatus_Start(void);
#else
#define Rte_Runnable_Dem_Dem_SetWIRStatus_Start() ((void)(0))
#endif /* Rte_Runnable_Dem_Dem_SetWIRStatus_Start */

#if defined(Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Return)
#undef Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Return
extern void Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Return */

#if defined(Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Start)
#undef Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Start
extern void Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_ClearWakeupEvent_Start */

#if defined(Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Return)
#undef Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Return
extern void Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Return */

#if defined(Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Start)
#undef Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Start
extern void Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_DisableWakeupSources_Start */

#if defined(Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Return)
#undef Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Return
extern void Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Return */

#if defined(Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Start)
#undef Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Start
extern void Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_EnableWakeupSources_Start */

#if defined(Rte_Runnable_EcuM_EcuM_GetBootTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetBootTarget_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetBootTarget_Return)
#undef Rte_Runnable_EcuM_EcuM_GetBootTarget_Return
extern void Rte_Runnable_EcuM_EcuM_GetBootTarget_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetBootTarget_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetBootTarget_Return */

#if defined(Rte_Runnable_EcuM_EcuM_GetBootTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetBootTarget_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetBootTarget_Start)
#undef Rte_Runnable_EcuM_EcuM_GetBootTarget_Start
extern void Rte_Runnable_EcuM_EcuM_GetBootTarget_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetBootTarget_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetBootTarget_Start */

#if defined(Rte_Runnable_EcuM_EcuM_GetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetCurrentTime_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetCurrentTime_Return)
#undef Rte_Runnable_EcuM_EcuM_GetCurrentTime_Return
extern void Rte_Runnable_EcuM_EcuM_GetCurrentTime_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetCurrentTime_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetCurrentTime_Return */

#if defined(Rte_Runnable_EcuM_EcuM_GetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetCurrentTime_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetCurrentTime_Start)
#undef Rte_Runnable_EcuM_EcuM_GetCurrentTime_Start
extern void Rte_Runnable_EcuM_EcuM_GetCurrentTime_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetCurrentTime_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetCurrentTime_Start */

#if defined(Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Return)
#undef Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Return
extern void Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Return */

#if defined(Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Start)
#undef Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Start
extern void Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetLastShutdownTarget_Start */

#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownCause_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownCause_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownCause_Return)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownCause_Return
extern void Rte_Runnable_EcuM_EcuM_GetShutdownCause_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetShutdownCause_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetShutdownCause_Return */

#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownCause_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownCause_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownCause_Start)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownCause_Start
extern void Rte_Runnable_EcuM_EcuM_GetShutdownCause_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetShutdownCause_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetShutdownCause_Start */

#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Return)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Return
extern void Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Return */

#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Start)
#undef Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Start
extern void Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetShutdownTarget_Start */

#if defined(Rte_Runnable_EcuM_EcuM_GetWakeupTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetWakeupTime_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetWakeupTime_Return)
#undef Rte_Runnable_EcuM_EcuM_GetWakeupTime_Return
extern void Rte_Runnable_EcuM_EcuM_GetWakeupTime_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetWakeupTime_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetWakeupTime_Return */

#if defined(Rte_Runnable_EcuM_EcuM_GetWakeupTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GetWakeupTime_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GetWakeupTime_Start)
#undef Rte_Runnable_EcuM_EcuM_GetWakeupTime_Start
extern void Rte_Runnable_EcuM_EcuM_GetWakeupTime_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_GetWakeupTime_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GetWakeupTime_Start */

#if defined(Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Return)
#undef Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Return
extern void Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Return */

#if defined(Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Start)
#undef Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Start
extern void Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_GoDownHaltPoll_Start */

#if defined(Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Return)
#undef Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Return
extern void Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Return */

#if defined(Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Start)
#undef Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Start
extern void Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_ReleasePOST_RUN_Start */

#if defined(Rte_Runnable_EcuM_EcuM_ReleaseRUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_ReleaseRUN_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_ReleaseRUN_Return)
#undef Rte_Runnable_EcuM_EcuM_ReleaseRUN_Return
extern void Rte_Runnable_EcuM_EcuM_ReleaseRUN_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_ReleaseRUN_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_ReleaseRUN_Return */

#if defined(Rte_Runnable_EcuM_EcuM_ReleaseRUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_ReleaseRUN_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_ReleaseRUN_Start)
#undef Rte_Runnable_EcuM_EcuM_ReleaseRUN_Start
extern void Rte_Runnable_EcuM_EcuM_ReleaseRUN_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_ReleaseRUN_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_ReleaseRUN_Start */

#if defined(Rte_Runnable_EcuM_EcuM_RequestOff_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestOff_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestOff_Return)
#undef Rte_Runnable_EcuM_EcuM_RequestOff_Return
extern void Rte_Runnable_EcuM_EcuM_RequestOff_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestOff_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestOff_Return */

#if defined(Rte_Runnable_EcuM_EcuM_RequestOff_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestOff_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestOff_Start)
#undef Rte_Runnable_EcuM_EcuM_RequestOff_Start
extern void Rte_Runnable_EcuM_EcuM_RequestOff_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestOff_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestOff_Start */

#if defined(Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Return)
#undef Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Return
extern void Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Return */

#if defined(Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Start)
#undef Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Start
extern void Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestPOST_RUN_Start */

#if defined(Rte_Runnable_EcuM_EcuM_RequestRUN_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestRUN_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestRUN_Return)
#undef Rte_Runnable_EcuM_EcuM_RequestRUN_Return
extern void Rte_Runnable_EcuM_EcuM_RequestRUN_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestRUN_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestRUN_Return */

#if defined(Rte_Runnable_EcuM_EcuM_RequestRUN_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestRUN_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestRUN_Start)
#undef Rte_Runnable_EcuM_EcuM_RequestRUN_Start
extern void Rte_Runnable_EcuM_EcuM_RequestRUN_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestRUN_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestRUN_Start */

#if defined(Rte_Runnable_EcuM_EcuM_RequestReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestReset_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestReset_Return)
#undef Rte_Runnable_EcuM_EcuM_RequestReset_Return
extern void Rte_Runnable_EcuM_EcuM_RequestReset_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestReset_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestReset_Return */

#if defined(Rte_Runnable_EcuM_EcuM_RequestReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestReset_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestReset_Start)
#undef Rte_Runnable_EcuM_EcuM_RequestReset_Start
extern void Rte_Runnable_EcuM_EcuM_RequestReset_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestReset_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestReset_Start */

#if defined(Rte_Runnable_EcuM_EcuM_RequestSleep_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestSleep_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestSleep_Return)
#undef Rte_Runnable_EcuM_EcuM_RequestSleep_Return
extern void Rte_Runnable_EcuM_EcuM_RequestSleep_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestSleep_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestSleep_Return */

#if defined(Rte_Runnable_EcuM_EcuM_RequestSleep_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_RequestSleep_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_RequestSleep_Start)
#undef Rte_Runnable_EcuM_EcuM_RequestSleep_Start
extern void Rte_Runnable_EcuM_EcuM_RequestSleep_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_RequestSleep_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_RequestSleep_Start */

#if defined(Rte_Runnable_EcuM_EcuM_SelectBootTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_SelectBootTarget_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_SelectBootTarget_Return)
#undef Rte_Runnable_EcuM_EcuM_SelectBootTarget_Return
extern void Rte_Runnable_EcuM_EcuM_SelectBootTarget_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_SelectBootTarget_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_SelectBootTarget_Return */

#if defined(Rte_Runnable_EcuM_EcuM_SelectBootTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_SelectBootTarget_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_SelectBootTarget_Start)
#undef Rte_Runnable_EcuM_EcuM_SelectBootTarget_Start
extern void Rte_Runnable_EcuM_EcuM_SelectBootTarget_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_SelectBootTarget_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_SelectBootTarget_Start */

#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Return)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Return
extern void Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Return */

#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Start)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Start
extern void Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_SelectShutdownCause_Start */

#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Return
#endif
#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Return)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Return
extern void Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Return(void);
#else
#define Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Return */

#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Start
#endif
#if defined(Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Start)
#undef Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Start
extern void Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Start(void);
#else
#define Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_EcuM_SelectShutdownTarget_Start */

#if defined(Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Return
#endif
#if defined(Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Return)
#undef Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Return
extern void Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Return(void);
#else
#define Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Return() ((void)(0))
#endif /* Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Return */

#if defined(Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Start
#endif
#if defined(Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Start)
#undef Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Start
extern void Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Start(void);
#else
#define Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Start() ((void)(0))
#endif /* Rte_Runnable_EcuM_Rte_Switch_currentMode_currentMode_Start */

#if defined(Rte_Runnable_FiM_FiM_GetFunctionPermission_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_FiM_FiM_GetFunctionPermission_Return
#endif
#if defined(Rte_Runnable_FiM_FiM_GetFunctionPermission_Return)
#undef Rte_Runnable_FiM_FiM_GetFunctionPermission_Return
extern void Rte_Runnable_FiM_FiM_GetFunctionPermission_Return(void);
#else
#define Rte_Runnable_FiM_FiM_GetFunctionPermission_Return() ((void)(0))
#endif /* Rte_Runnable_FiM_FiM_GetFunctionPermission_Return */

#if defined(Rte_Runnable_FiM_FiM_GetFunctionPermission_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_FiM_FiM_GetFunctionPermission_Start
#endif
#if defined(Rte_Runnable_FiM_FiM_GetFunctionPermission_Start)
#undef Rte_Runnable_FiM_FiM_GetFunctionPermission_Start
extern void Rte_Runnable_FiM_FiM_GetFunctionPermission_Start(void);
#else
#define Rte_Runnable_FiM_FiM_GetFunctionPermission_Start() ((void)(0))
#endif /* Rte_Runnable_FiM_FiM_GetFunctionPermission_Start */

#if defined(Rte_Runnable_FiM_FiM_SetFunctionAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_FiM_FiM_SetFunctionAvailable_Return
#endif
#if defined(Rte_Runnable_FiM_FiM_SetFunctionAvailable_Return)
#undef Rte_Runnable_FiM_FiM_SetFunctionAvailable_Return
extern void Rte_Runnable_FiM_FiM_SetFunctionAvailable_Return(void);
#else
#define Rte_Runnable_FiM_FiM_SetFunctionAvailable_Return() ((void)(0))
#endif /* Rte_Runnable_FiM_FiM_SetFunctionAvailable_Return */

#if defined(Rte_Runnable_FiM_FiM_SetFunctionAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_FiM_FiM_SetFunctionAvailable_Start
#endif
#if defined(Rte_Runnable_FiM_FiM_SetFunctionAvailable_Start)
#undef Rte_Runnable_FiM_FiM_SetFunctionAvailable_Start
extern void Rte_Runnable_FiM_FiM_SetFunctionAvailable_Start(void);
#else
#define Rte_Runnable_FiM_FiM_SetFunctionAvailable_Start() ((void)(0))
#endif /* Rte_Runnable_FiM_FiM_SetFunctionAvailable_Start */

#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Return
#endif
#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Return)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Return
extern void Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Return(void);
#else
#define Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Return() ((void)(0))
#endif /* Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Return */

#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Start
#endif
#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Start)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Start
extern void Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Start(void);
#else
#define Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Start() ((void)(0))
#endif /* Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Confirmation_Start */

#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Return
#endif
#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Return)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Return
extern void Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Return(void);
#else
#define Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Return() ((void)(0))
#endif /* Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Return */

#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Start
#endif
#if defined(Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Start)
#undef Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Start
extern void Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Start(void);
#else
#define Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Start() ((void)(0))
#endif /* Rte_Runnable_Fota_Fota_SupplierNotification_ServiceRequest_Indication_Start */

#if defined(Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Return
#endif
#if defined(Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Return)
#undef Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Return
extern void Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Return(void);
#else
#define Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Return */

#if defined(Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Start
#endif
#if defined(Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Start)
#undef Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Start
extern void Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Start(void);
#else
#define Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_GptChannelConfiguration_IoHwAbTest_Cbk_Start */

#if defined(Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Return)
#undef Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Return
extern void Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Return(void);
#else
#define Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Return */

#if defined(Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Start)
#undef Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Start
extern void Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Start(void);
#else
#define Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IcuSignalEdgeDetection_Cbk_Start */

#if defined(Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Return)
#undef Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Return
extern void Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Return(void);
#else
#define Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Return */

#if defined(Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Start)
#undef Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Start
extern void Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Start(void);
#else
#define Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IcuTimestampMeasurement_Cbk_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_AnaInDirReadDirect_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirIsInput_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirIsOutput_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirReadDirect_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToInput_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirSetToOutput_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_DigDirWriteDirect_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptDisableNotification_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptEnableNotification_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeElapsed_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptGetTimeRemaining_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptStartTimer_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_GptStopTimer_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeCount_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuDisableEdgeDetection_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuDisableNotification_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeCount_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuEnableEdgeDetection_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuEnableNotification_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetDutyCycleValues_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetEdgeNumbers_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetInputState_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimeElapsed_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuGetTimestampIndex_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuResetEdgeCount_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuSetActivationCondition_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStartSignalMeasurement_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStartTimestamp_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStopSignalMeasurement_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_IcuStopTimestamp_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmDisableNotification_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmEnableNotification_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmSetDutyCycle_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmSetOutputToIdle_Start */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Return
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Return)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Return
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Return(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Return() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Return */

#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Start
#endif
#if defined(Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Start)
#undef Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Start
extern void Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Start(void);
#else
#define Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Start() ((void)(0))
#endif /* Rte_Runnable_IoHwAb_IoHwAb_PwmSetPeriodAndDuty_Start */

#if defined(Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Return
#endif
#if defined(Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Return)
#undef Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Return
extern void Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Return(void);
#else
#define Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Return() ((void)(0))
#endif /* Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Return */

#if defined(Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Start
#endif
#if defined(Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Start)
#undef Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Start
extern void Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Start(void);
#else
#define Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Start() ((void)(0))
#endif /* Rte_Runnable_KeyM_KeyM_MainBackgroundFunction_Start */

#if defined(Rte_Runnable_KeyM_KeyM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_KeyM_KeyM_MainFunction_Return
#endif
#if defined(Rte_Runnable_KeyM_KeyM_MainFunction_Return)
#undef Rte_Runnable_KeyM_KeyM_MainFunction_Return
extern void Rte_Runnable_KeyM_KeyM_MainFunction_Return(void);
#else
#define Rte_Runnable_KeyM_KeyM_MainFunction_Return() ((void)(0))
#endif /* Rte_Runnable_KeyM_KeyM_MainFunction_Return */

#if defined(Rte_Runnable_KeyM_KeyM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_KeyM_KeyM_MainFunction_Start
#endif
#if defined(Rte_Runnable_KeyM_KeyM_MainFunction_Start)
#undef Rte_Runnable_KeyM_KeyM_MainFunction_Start
extern void Rte_Runnable_KeyM_KeyM_MainFunction_Start(void);
#else
#define Rte_Runnable_KeyM_KeyM_MainFunction_Start() ((void)(0))
#endif /* Rte_Runnable_KeyM_KeyM_MainFunction_Start */

#if defined(Rte_Runnable_KeyM_KeyM_Update_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_KeyM_KeyM_Update_Return
#endif
#if defined(Rte_Runnable_KeyM_KeyM_Update_Return)
#undef Rte_Runnable_KeyM_KeyM_Update_Return
extern void Rte_Runnable_KeyM_KeyM_Update_Return(void);
#else
#define Rte_Runnable_KeyM_KeyM_Update_Return() ((void)(0))
#endif /* Rte_Runnable_KeyM_KeyM_Update_Return */

#if defined(Rte_Runnable_KeyM_KeyM_Update_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_KeyM_KeyM_Update_Start
#endif
#if defined(Rte_Runnable_KeyM_KeyM_Update_Start)
#undef Rte_Runnable_KeyM_KeyM_Update_Start
extern void Rte_Runnable_KeyM_KeyM_Update_Start(void);
#else
#define Rte_Runnable_KeyM_KeyM_Update_Start() ((void)(0))
#endif /* Rte_Runnable_KeyM_KeyM_Update_Start */

#if defined(Rte_Runnable_NvM_NvM_EraseNvBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_EraseNvBlock_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_EraseNvBlock_Return)
#undef Rte_Runnable_NvM_NvM_EraseNvBlock_Return
extern void Rte_Runnable_NvM_NvM_EraseNvBlock_Return(void);
#else
#define Rte_Runnable_NvM_NvM_EraseNvBlock_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_EraseNvBlock_Return */

#if defined(Rte_Runnable_NvM_NvM_EraseNvBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_EraseNvBlock_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_EraseNvBlock_Start)
#undef Rte_Runnable_NvM_NvM_EraseNvBlock_Start
extern void Rte_Runnable_NvM_NvM_EraseNvBlock_Start(void);
#else
#define Rte_Runnable_NvM_NvM_EraseNvBlock_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_EraseNvBlock_Start */

#if defined(Rte_Runnable_NvM_NvM_GetDataIndex_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_GetDataIndex_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_GetDataIndex_Return)
#undef Rte_Runnable_NvM_NvM_GetDataIndex_Return
extern void Rte_Runnable_NvM_NvM_GetDataIndex_Return(void);
#else
#define Rte_Runnable_NvM_NvM_GetDataIndex_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_GetDataIndex_Return */

#if defined(Rte_Runnable_NvM_NvM_GetDataIndex_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_GetDataIndex_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_GetDataIndex_Start)
#undef Rte_Runnable_NvM_NvM_GetDataIndex_Start
extern void Rte_Runnable_NvM_NvM_GetDataIndex_Start(void);
#else
#define Rte_Runnable_NvM_NvM_GetDataIndex_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_GetDataIndex_Start */

#if defined(Rte_Runnable_NvM_NvM_GetErrorStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_GetErrorStatus_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_GetErrorStatus_Return)
#undef Rte_Runnable_NvM_NvM_GetErrorStatus_Return
extern void Rte_Runnable_NvM_NvM_GetErrorStatus_Return(void);
#else
#define Rte_Runnable_NvM_NvM_GetErrorStatus_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_GetErrorStatus_Return */

#if defined(Rte_Runnable_NvM_NvM_GetErrorStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_GetErrorStatus_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_GetErrorStatus_Start)
#undef Rte_Runnable_NvM_NvM_GetErrorStatus_Start
extern void Rte_Runnable_NvM_NvM_GetErrorStatus_Start(void);
#else
#define Rte_Runnable_NvM_NvM_GetErrorStatus_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_GetErrorStatus_Start */

#if defined(Rte_Runnable_NvM_NvM_InvalidateNvBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_InvalidateNvBlock_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_InvalidateNvBlock_Return)
#undef Rte_Runnable_NvM_NvM_InvalidateNvBlock_Return
extern void Rte_Runnable_NvM_NvM_InvalidateNvBlock_Return(void);
#else
#define Rte_Runnable_NvM_NvM_InvalidateNvBlock_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_InvalidateNvBlock_Return */

#if defined(Rte_Runnable_NvM_NvM_InvalidateNvBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_InvalidateNvBlock_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_InvalidateNvBlock_Start)
#undef Rte_Runnable_NvM_NvM_InvalidateNvBlock_Start
extern void Rte_Runnable_NvM_NvM_InvalidateNvBlock_Start(void);
#else
#define Rte_Runnable_NvM_NvM_InvalidateNvBlock_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_InvalidateNvBlock_Start */

#if defined(Rte_Runnable_NvM_NvM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_MainFunction_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_MainFunction_Return)
#undef Rte_Runnable_NvM_NvM_MainFunction_Return
extern void Rte_Runnable_NvM_NvM_MainFunction_Return(void);
#else
#define Rte_Runnable_NvM_NvM_MainFunction_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_MainFunction_Return */

#if defined(Rte_Runnable_NvM_NvM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_MainFunction_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_MainFunction_Start)
#undef Rte_Runnable_NvM_NvM_MainFunction_Start
extern void Rte_Runnable_NvM_NvM_MainFunction_Start(void);
#else
#define Rte_Runnable_NvM_NvM_MainFunction_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_MainFunction_Start */

#if defined(Rte_Runnable_NvM_NvM_ReadBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_ReadBlock_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_ReadBlock_Return)
#undef Rte_Runnable_NvM_NvM_ReadBlock_Return
extern void Rte_Runnable_NvM_NvM_ReadBlock_Return(void);
#else
#define Rte_Runnable_NvM_NvM_ReadBlock_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_ReadBlock_Return */

#if defined(Rte_Runnable_NvM_NvM_ReadBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_ReadBlock_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_ReadBlock_Start)
#undef Rte_Runnable_NvM_NvM_ReadBlock_Start
extern void Rte_Runnable_NvM_NvM_ReadBlock_Start(void);
#else
#define Rte_Runnable_NvM_NvM_ReadBlock_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_ReadBlock_Start */

#if defined(Rte_Runnable_NvM_NvM_ReadPRAMBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_ReadPRAMBlock_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_ReadPRAMBlock_Return)
#undef Rte_Runnable_NvM_NvM_ReadPRAMBlock_Return
extern void Rte_Runnable_NvM_NvM_ReadPRAMBlock_Return(void);
#else
#define Rte_Runnable_NvM_NvM_ReadPRAMBlock_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_ReadPRAMBlock_Return */

#if defined(Rte_Runnable_NvM_NvM_ReadPRAMBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_ReadPRAMBlock_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_ReadPRAMBlock_Start)
#undef Rte_Runnable_NvM_NvM_ReadPRAMBlock_Start
extern void Rte_Runnable_NvM_NvM_ReadPRAMBlock_Start(void);
#else
#define Rte_Runnable_NvM_NvM_ReadPRAMBlock_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_ReadPRAMBlock_Start */

#if defined(Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Return)
#undef Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Return
extern void Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Return(void);
#else
#define Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Return */

#if defined(Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Start)
#undef Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Start
extern void Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Start(void);
#else
#define Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_RestoreBlockDefaults_Start */

#if defined(Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Return)
#undef Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Return
extern void Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Return(void);
#else
#define Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Return */

#if defined(Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Start)
#undef Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Start
extern void Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Start(void);
#else
#define Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_RestorePRAMBlockDefaults_Start */

#if defined(Rte_Runnable_NvM_NvM_SetBlockProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_SetBlockProtection_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_SetBlockProtection_Return)
#undef Rte_Runnable_NvM_NvM_SetBlockProtection_Return
extern void Rte_Runnable_NvM_NvM_SetBlockProtection_Return(void);
#else
#define Rte_Runnable_NvM_NvM_SetBlockProtection_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_SetBlockProtection_Return */

#if defined(Rte_Runnable_NvM_NvM_SetBlockProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_SetBlockProtection_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_SetBlockProtection_Start)
#undef Rte_Runnable_NvM_NvM_SetBlockProtection_Start
extern void Rte_Runnable_NvM_NvM_SetBlockProtection_Start(void);
#else
#define Rte_Runnable_NvM_NvM_SetBlockProtection_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_SetBlockProtection_Start */

#if defined(Rte_Runnable_NvM_NvM_SetDataIndex_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_SetDataIndex_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_SetDataIndex_Return)
#undef Rte_Runnable_NvM_NvM_SetDataIndex_Return
extern void Rte_Runnable_NvM_NvM_SetDataIndex_Return(void);
#else
#define Rte_Runnable_NvM_NvM_SetDataIndex_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_SetDataIndex_Return */

#if defined(Rte_Runnable_NvM_NvM_SetDataIndex_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_SetDataIndex_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_SetDataIndex_Start)
#undef Rte_Runnable_NvM_NvM_SetDataIndex_Start
extern void Rte_Runnable_NvM_NvM_SetDataIndex_Start(void);
#else
#define Rte_Runnable_NvM_NvM_SetDataIndex_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_SetDataIndex_Start */

#if defined(Rte_Runnable_NvM_NvM_SetRamBlockStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_SetRamBlockStatus_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_SetRamBlockStatus_Return)
#undef Rte_Runnable_NvM_NvM_SetRamBlockStatus_Return
extern void Rte_Runnable_NvM_NvM_SetRamBlockStatus_Return(void);
#else
#define Rte_Runnable_NvM_NvM_SetRamBlockStatus_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_SetRamBlockStatus_Return */

#if defined(Rte_Runnable_NvM_NvM_SetRamBlockStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_SetRamBlockStatus_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_SetRamBlockStatus_Start)
#undef Rte_Runnable_NvM_NvM_SetRamBlockStatus_Start
extern void Rte_Runnable_NvM_NvM_SetRamBlockStatus_Start(void);
#else
#define Rte_Runnable_NvM_NvM_SetRamBlockStatus_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_SetRamBlockStatus_Start */

#if defined(Rte_Runnable_NvM_NvM_WriteBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_WriteBlock_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_WriteBlock_Return)
#undef Rte_Runnable_NvM_NvM_WriteBlock_Return
extern void Rte_Runnable_NvM_NvM_WriteBlock_Return(void);
#else
#define Rte_Runnable_NvM_NvM_WriteBlock_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_WriteBlock_Return */

#if defined(Rte_Runnable_NvM_NvM_WriteBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_WriteBlock_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_WriteBlock_Start)
#undef Rte_Runnable_NvM_NvM_WriteBlock_Start
extern void Rte_Runnable_NvM_NvM_WriteBlock_Start(void);
#else
#define Rte_Runnable_NvM_NvM_WriteBlock_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_WriteBlock_Start */

#if defined(Rte_Runnable_NvM_NvM_WritePRAMBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_WritePRAMBlock_Return
#endif
#if defined(Rte_Runnable_NvM_NvM_WritePRAMBlock_Return)
#undef Rte_Runnable_NvM_NvM_WritePRAMBlock_Return
extern void Rte_Runnable_NvM_NvM_WritePRAMBlock_Return(void);
#else
#define Rte_Runnable_NvM_NvM_WritePRAMBlock_Return() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_WritePRAMBlock_Return */

#if defined(Rte_Runnable_NvM_NvM_WritePRAMBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_NvM_NvM_WritePRAMBlock_Start
#endif
#if defined(Rte_Runnable_NvM_NvM_WritePRAMBlock_Start)
#undef Rte_Runnable_NvM_NvM_WritePRAMBlock_Start
extern void Rte_Runnable_NvM_NvM_WritePRAMBlock_Start(void);
#else
#define Rte_Runnable_NvM_NvM_WritePRAMBlock_Start() ((void)(0))
#endif /* Rte_Runnable_NvM_NvM_WritePRAMBlock_Start */

#if defined(Rte_Runnable_Os_Master_Os_MeasureCPULoad_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Os_Master_Os_MeasureCPULoad_Return
#endif
#if defined(Rte_Runnable_Os_Master_Os_MeasureCPULoad_Return)
#undef Rte_Runnable_Os_Master_Os_MeasureCPULoad_Return
extern void Rte_Runnable_Os_Master_Os_MeasureCPULoad_Return(void);
#else
#define Rte_Runnable_Os_Master_Os_MeasureCPULoad_Return() ((void)(0))
#endif /* Rte_Runnable_Os_Master_Os_MeasureCPULoad_Return */

#if defined(Rte_Runnable_Os_Master_Os_MeasureCPULoad_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_Os_Master_Os_MeasureCPULoad_Start
#endif
#if defined(Rte_Runnable_Os_Master_Os_MeasureCPULoad_Start)
#undef Rte_Runnable_Os_Master_Os_MeasureCPULoad_Start
extern void Rte_Runnable_Os_Master_Os_MeasureCPULoad_Start(void);
#else
#define Rte_Runnable_Os_Master_Os_MeasureCPULoad_Start() ((void)(0))
#endif /* Rte_Runnable_Os_Master_Os_MeasureCPULoad_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_CanSMBorStateSwitched_FD_CAN1_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_FD_CAN1_PNC32_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN1_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_ComMModeSwitched_LIN2_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_EcuModeSwitched_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_InitCompleted_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Rx_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_PduGroupSwitched_FD_CAN1_PNC32_Tx_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_Test_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_Test_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_Test_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_Test_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_Test_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_Test_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_Test_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_Test_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_Test_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_Test_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_Test_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_Test_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_Test_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_Test_Start */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Return
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Return)
#undef Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Return
extern void Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Return(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Return */

#if defined(Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Start
#endif
#if defined(Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Start)
#undef Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Start
extern void Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Start(void);
#else
#define Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_AppMode_AppMode_WakeupEventValidated_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBClrEvt_DEM_E_TEST_EVENT1_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0001_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0002_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0003_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0004_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0005_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0006_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0008_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0009_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBReadData_DE_0010_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_DEM_E_TEST_EVENT1_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_CBStatusEvt_E_MODE_CHANGE_HS_CAN1_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_ClearDtcNotification_EventMemorySet0_DemClearDTCNotification0_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_DiagnosticMonitor_Start */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Return)
#undef Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Return
extern void Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Return */

#if defined(Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Start)
#undef Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Start
extern void Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticMonitor_InitMonitorForEvent_DEM_E_TEST_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_CompareKey_L9_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ActuatorControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_BatVolt_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_ECT_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_RPM_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUHardwareVersionNumber_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_SystemSupplierECUSoftwareNumber_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VINDataIdentifier_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleManufacturerECUSoftwareVersionNumber_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ConditionCheckRead_VehicleSpeed_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_DiagnosticSessionControlNotification_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_ActuatorControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_FreezeCurrentState_RPM_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VINDataIdentifier_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_GetScalingInformation_VehicleSpeed_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_GetSeed_L9_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_InfotypeServices_VINInfoData_GetInfotypeValueData_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_IsDidAvailable_DID_0100h_0110h_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ActuatorControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_BatVolt_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_ECT_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_RPM_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUHardwareVersionNumber_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_SystemSupplierECUSoftwareNumber_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VINDataIdentifier_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleManufacturerECUSoftwareVersionNumber_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadData_VehicleSpeed_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidData_DID_0100h_0110h_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReadDidRangeDataLength_DID_0100h_0110h_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestControlServices_Tid1_RequestControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestAddFile_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestDeleteFile_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadDir_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReadFile_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ProcessRequestReplaceFile_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestFileTransfer_ReadFileOrDir_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_RequestResults_CalibrationActuator_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ResetToDefault_ActuatorControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_ActuatorControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ReturnControlToECU_RPM_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_Runnable_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_ActuatorControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_ShortTermAdjustment_RPM_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_StartProtocol_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_Start_CalibrationActuator_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_StopProtocol_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_Stop_CalibrationActuator_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestDownload_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestTransferExit_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessRequestUpload_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataRead_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_UploadDownloadServices_ProcessTransferDataWrite_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ActuatorControl_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_BatVolt_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_ECT_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_RPM_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteData_VINDataIdentifier_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Return)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Return
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Start)
#undef Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Start
extern void Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_AppDcm_WriteDidData_DID_0100h_0110h_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Return)
#undef Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Return
extern void Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Start)
#undef Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Start
extern void Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_App_Dcm_RequestFileTransfer_WriteFile_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Return)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Return
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Start)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Start
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Confirmation_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Return)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Return
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Start)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Start
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestManufacturerNotification_Indication_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Return)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Return
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Start)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Start
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Confirmation_Start */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Return
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Return)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Return
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Return(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Return */

#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Start
#endif
#if defined(Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Start)
#undef Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Start
extern void Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Start(void);
#else
#define Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_DiagnosticService_ServiceRequestSupplierNotification_Indication_Start */

#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Return
#endif
#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Return)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Return
extern void Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Return(void);
#else
#define Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Return */

#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Start
#endif
#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Start)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Start
extern void Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Start(void);
#else
#define Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_WdgMTest_RE_WdgMTestGlobalMode_Start */

#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Return
#endif
#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Return)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Return
extern void Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Return(void);
#else
#define Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Return() ((void)(0))
#endif /* Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Return */

#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Start
#endif
#if defined(Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Start)
#undef Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Start
extern void Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Start(void);
#else
#define Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Start() ((void)(0))
#endif /* Rte_Runnable_SWC_WdgMTest_RE_WdgMTest_Start */

#if defined(Rte_Runnable_StbM_StbM_BusGetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_BusGetCurrentTime_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_BusGetCurrentTime_Return)
#undef Rte_Runnable_StbM_StbM_BusGetCurrentTime_Return
extern void Rte_Runnable_StbM_StbM_BusGetCurrentTime_Return(void);
#else
#define Rte_Runnable_StbM_StbM_BusGetCurrentTime_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_BusGetCurrentTime_Return */

#if defined(Rte_Runnable_StbM_StbM_BusGetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_BusGetCurrentTime_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_BusGetCurrentTime_Start)
#undef Rte_Runnable_StbM_StbM_BusGetCurrentTime_Start
extern void Rte_Runnable_StbM_StbM_BusGetCurrentTime_Start(void);
#else
#define Rte_Runnable_StbM_StbM_BusGetCurrentTime_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_BusGetCurrentTime_Start */

#if defined(Rte_Runnable_StbM_StbM_BusSetGlobalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_BusSetGlobalTime_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_BusSetGlobalTime_Return)
#undef Rte_Runnable_StbM_StbM_BusSetGlobalTime_Return
extern void Rte_Runnable_StbM_StbM_BusSetGlobalTime_Return(void);
#else
#define Rte_Runnable_StbM_StbM_BusSetGlobalTime_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_BusSetGlobalTime_Return */

#if defined(Rte_Runnable_StbM_StbM_BusSetGlobalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_BusSetGlobalTime_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_BusSetGlobalTime_Start)
#undef Rte_Runnable_StbM_StbM_BusSetGlobalTime_Start
extern void Rte_Runnable_StbM_StbM_BusSetGlobalTime_Start(void);
#else
#define Rte_Runnable_StbM_StbM_BusSetGlobalTime_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_BusSetGlobalTime_Start */

#if defined(Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Return)
#undef Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Return
extern void Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Return */

#if defined(Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Start)
#undef Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Start
extern void Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetCurrentTimeExtended_Start */

#if defined(Rte_Runnable_StbM_StbM_GetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetCurrentTime_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetCurrentTime_Return)
#undef Rte_Runnable_StbM_StbM_GetCurrentTime_Return
extern void Rte_Runnable_StbM_StbM_GetCurrentTime_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetCurrentTime_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetCurrentTime_Return */

#if defined(Rte_Runnable_StbM_StbM_GetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetCurrentTime_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetCurrentTime_Start)
#undef Rte_Runnable_StbM_StbM_GetCurrentTime_Start
extern void Rte_Runnable_StbM_StbM_GetCurrentTime_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetCurrentTime_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetCurrentTime_Start */

#if defined(Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Return)
#undef Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Return
extern void Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Return */

#if defined(Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Start)
#undef Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Start
extern void Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetCurrentVirtualLocalTime_Start */

#if defined(Rte_Runnable_StbM_StbM_GetMasterConfig_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetMasterConfig_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetMasterConfig_Return)
#undef Rte_Runnable_StbM_StbM_GetMasterConfig_Return
extern void Rte_Runnable_StbM_StbM_GetMasterConfig_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetMasterConfig_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetMasterConfig_Return */

#if defined(Rte_Runnable_StbM_StbM_GetMasterConfig_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetMasterConfig_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetMasterConfig_Start)
#undef Rte_Runnable_StbM_StbM_GetMasterConfig_Start
extern void Rte_Runnable_StbM_StbM_GetMasterConfig_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetMasterConfig_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetMasterConfig_Start */

#if defined(Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Return)
#undef Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Return
extern void Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Return */

#if defined(Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Start)
#undef Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Start
extern void Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetOffsetTimeRecordHead_Start */

#if defined(Rte_Runnable_StbM_StbM_GetOffset_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetOffset_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetOffset_Return)
#undef Rte_Runnable_StbM_StbM_GetOffset_Return
extern void Rte_Runnable_StbM_StbM_GetOffset_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetOffset_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetOffset_Return */

#if defined(Rte_Runnable_StbM_StbM_GetOffset_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetOffset_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetOffset_Start)
#undef Rte_Runnable_StbM_StbM_GetOffset_Start
extern void Rte_Runnable_StbM_StbM_GetOffset_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetOffset_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetOffset_Start */

#if defined(Rte_Runnable_StbM_StbM_GetRateDeviation_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetRateDeviation_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetRateDeviation_Return)
#undef Rte_Runnable_StbM_StbM_GetRateDeviation_Return
extern void Rte_Runnable_StbM_StbM_GetRateDeviation_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetRateDeviation_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetRateDeviation_Return */

#if defined(Rte_Runnable_StbM_StbM_GetRateDeviation_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetRateDeviation_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetRateDeviation_Start)
#undef Rte_Runnable_StbM_StbM_GetRateDeviation_Start
extern void Rte_Runnable_StbM_StbM_GetRateDeviation_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetRateDeviation_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetRateDeviation_Start */

#if defined(Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Return)
#undef Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Return
extern void Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Return */

#if defined(Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Start)
#undef Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Start
extern void Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetSyncTimeRecordHead_Start */

#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Return)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Return
extern void Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Return */

#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Start)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Start
extern void Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetTimeBaseStatus_Start */

#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Return)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Return
extern void Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Return */

#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Start)
#undef Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Start
extern void Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetTimeBaseUpdateCounter_Start */

#if defined(Rte_Runnable_StbM_StbM_GetTimeLeap_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetTimeLeap_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_GetTimeLeap_Return)
#undef Rte_Runnable_StbM_StbM_GetTimeLeap_Return
extern void Rte_Runnable_StbM_StbM_GetTimeLeap_Return(void);
#else
#define Rte_Runnable_StbM_StbM_GetTimeLeap_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetTimeLeap_Return */

#if defined(Rte_Runnable_StbM_StbM_GetTimeLeap_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_GetTimeLeap_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_GetTimeLeap_Start)
#undef Rte_Runnable_StbM_StbM_GetTimeLeap_Start
extern void Rte_Runnable_StbM_StbM_GetTimeLeap_Start(void);
#else
#define Rte_Runnable_StbM_StbM_GetTimeLeap_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_GetTimeLeap_Start */

#if defined(Rte_Runnable_StbM_StbM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_MainFunction_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_MainFunction_Return)
#undef Rte_Runnable_StbM_StbM_MainFunction_Return
extern void Rte_Runnable_StbM_StbM_MainFunction_Return(void);
#else
#define Rte_Runnable_StbM_StbM_MainFunction_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_MainFunction_Return */

#if defined(Rte_Runnable_StbM_StbM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_MainFunction_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_MainFunction_Start)
#undef Rte_Runnable_StbM_StbM_MainFunction_Start
extern void Rte_Runnable_StbM_StbM_MainFunction_Start(void);
#else
#define Rte_Runnable_StbM_StbM_MainFunction_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_MainFunction_Start */

#if defined(Rte_Runnable_StbM_StbM_Required_Ports_Call_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_Required_Ports_Call_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_Required_Ports_Call_Return)
#undef Rte_Runnable_StbM_StbM_Required_Ports_Call_Return
extern void Rte_Runnable_StbM_StbM_Required_Ports_Call_Return(void);
#else
#define Rte_Runnable_StbM_StbM_Required_Ports_Call_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_Required_Ports_Call_Return */

#if defined(Rte_Runnable_StbM_StbM_Required_Ports_Call_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_Required_Ports_Call_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_Required_Ports_Call_Start)
#undef Rte_Runnable_StbM_StbM_Required_Ports_Call_Start
extern void Rte_Runnable_StbM_StbM_Required_Ports_Call_Start(void);
#else
#define Rte_Runnable_StbM_StbM_Required_Ports_Call_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_Required_Ports_Call_Start */

#if defined(Rte_Runnable_StbM_StbM_SetGlobalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetGlobalTime_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_SetGlobalTime_Return)
#undef Rte_Runnable_StbM_StbM_SetGlobalTime_Return
extern void Rte_Runnable_StbM_StbM_SetGlobalTime_Return(void);
#else
#define Rte_Runnable_StbM_StbM_SetGlobalTime_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetGlobalTime_Return */

#if defined(Rte_Runnable_StbM_StbM_SetGlobalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetGlobalTime_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_SetGlobalTime_Start)
#undef Rte_Runnable_StbM_StbM_SetGlobalTime_Start
extern void Rte_Runnable_StbM_StbM_SetGlobalTime_Start(void);
#else
#define Rte_Runnable_StbM_StbM_SetGlobalTime_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetGlobalTime_Start */

#if defined(Rte_Runnable_StbM_StbM_SetOffset_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetOffset_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_SetOffset_Return)
#undef Rte_Runnable_StbM_StbM_SetOffset_Return
extern void Rte_Runnable_StbM_StbM_SetOffset_Return(void);
#else
#define Rte_Runnable_StbM_StbM_SetOffset_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetOffset_Return */

#if defined(Rte_Runnable_StbM_StbM_SetOffset_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetOffset_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_SetOffset_Start)
#undef Rte_Runnable_StbM_StbM_SetOffset_Start
extern void Rte_Runnable_StbM_StbM_SetOffset_Start(void);
#else
#define Rte_Runnable_StbM_StbM_SetOffset_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetOffset_Start */

#if defined(Rte_Runnable_StbM_StbM_SetRateCorrection_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetRateCorrection_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_SetRateCorrection_Return)
#undef Rte_Runnable_StbM_StbM_SetRateCorrection_Return
extern void Rte_Runnable_StbM_StbM_SetRateCorrection_Return(void);
#else
#define Rte_Runnable_StbM_StbM_SetRateCorrection_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetRateCorrection_Return */

#if defined(Rte_Runnable_StbM_StbM_SetRateCorrection_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetRateCorrection_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_SetRateCorrection_Start)
#undef Rte_Runnable_StbM_StbM_SetRateCorrection_Start
extern void Rte_Runnable_StbM_StbM_SetRateCorrection_Start(void);
#else
#define Rte_Runnable_StbM_StbM_SetRateCorrection_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetRateCorrection_Start */

#if defined(Rte_Runnable_StbM_StbM_SetUserData_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetUserData_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_SetUserData_Return)
#undef Rte_Runnable_StbM_StbM_SetUserData_Return
extern void Rte_Runnable_StbM_StbM_SetUserData_Return(void);
#else
#define Rte_Runnable_StbM_StbM_SetUserData_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetUserData_Return */

#if defined(Rte_Runnable_StbM_StbM_SetUserData_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_SetUserData_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_SetUserData_Start)
#undef Rte_Runnable_StbM_StbM_SetUserData_Start
extern void Rte_Runnable_StbM_StbM_SetUserData_Start(void);
#else
#define Rte_Runnable_StbM_StbM_SetUserData_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_SetUserData_Start */

#if defined(Rte_Runnable_StbM_StbM_StartTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_StartTimer_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_StartTimer_Return)
#undef Rte_Runnable_StbM_StbM_StartTimer_Return
extern void Rte_Runnable_StbM_StbM_StartTimer_Return(void);
#else
#define Rte_Runnable_StbM_StbM_StartTimer_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_StartTimer_Return */

#if defined(Rte_Runnable_StbM_StbM_StartTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_StartTimer_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_StartTimer_Start)
#undef Rte_Runnable_StbM_StbM_StartTimer_Start
extern void Rte_Runnable_StbM_StbM_StartTimer_Start(void);
#else
#define Rte_Runnable_StbM_StbM_StartTimer_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_StartTimer_Start */

#if defined(Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Return)
#undef Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Return
extern void Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Return(void);
#else
#define Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Return */

#if defined(Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Start)
#undef Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Start
extern void Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Start(void);
#else
#define Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_TriggerTimeTransmission_Start */

#if defined(Rte_Runnable_StbM_StbM_UpdateGlobalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_UpdateGlobalTime_Return
#endif
#if defined(Rte_Runnable_StbM_StbM_UpdateGlobalTime_Return)
#undef Rte_Runnable_StbM_StbM_UpdateGlobalTime_Return
extern void Rte_Runnable_StbM_StbM_UpdateGlobalTime_Return(void);
#else
#define Rte_Runnable_StbM_StbM_UpdateGlobalTime_Return() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_UpdateGlobalTime_Return */

#if defined(Rte_Runnable_StbM_StbM_UpdateGlobalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_StbM_StbM_UpdateGlobalTime_Start
#endif
#if defined(Rte_Runnable_StbM_StbM_UpdateGlobalTime_Start)
#undef Rte_Runnable_StbM_StbM_UpdateGlobalTime_Start
extern void Rte_Runnable_StbM_StbM_UpdateGlobalTime_Start(void);
#else
#define Rte_Runnable_StbM_StbM_UpdateGlobalTime_Start() ((void)(0))
#endif /* Rte_Runnable_StbM_StbM_UpdateGlobalTime_Start */

#if defined(Rte_Runnable_WdgM_WdgM_CheckpointReached_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_CheckpointReached_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_CheckpointReached_Return)
#undef Rte_Runnable_WdgM_WdgM_CheckpointReached_Return
extern void Rte_Runnable_WdgM_WdgM_CheckpointReached_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_CheckpointReached_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_CheckpointReached_Return */

#if defined(Rte_Runnable_WdgM_WdgM_CheckpointReached_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_CheckpointReached_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_CheckpointReached_Start)
#undef Rte_Runnable_WdgM_WdgM_CheckpointReached_Start
extern void Rte_Runnable_WdgM_WdgM_CheckpointReached_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_CheckpointReached_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_CheckpointReached_Start */

#if defined(Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Return)
#undef Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Return
extern void Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Return */

#if defined(Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Start)
#undef Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Start
extern void Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetFirstExpiredSEID_Start */

#if defined(Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Return)
#undef Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Return
extern void Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Return */

#if defined(Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Start)
#undef Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Start
extern void Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetGlobalStatus_Start */

#if defined(Rte_Runnable_WdgM_WdgM_GetLocalStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetLocalStatus_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetLocalStatus_Return)
#undef Rte_Runnable_WdgM_WdgM_GetLocalStatus_Return
extern void Rte_Runnable_WdgM_WdgM_GetLocalStatus_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetLocalStatus_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetLocalStatus_Return */

#if defined(Rte_Runnable_WdgM_WdgM_GetLocalStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetLocalStatus_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetLocalStatus_Start)
#undef Rte_Runnable_WdgM_WdgM_GetLocalStatus_Start
extern void Rte_Runnable_WdgM_WdgM_GetLocalStatus_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetLocalStatus_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetLocalStatus_Start */

#if defined(Rte_Runnable_WdgM_WdgM_GetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetMode_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetMode_Return)
#undef Rte_Runnable_WdgM_WdgM_GetMode_Return
extern void Rte_Runnable_WdgM_WdgM_GetMode_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetMode_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetMode_Return */

#if defined(Rte_Runnable_WdgM_WdgM_GetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_GetMode_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_GetMode_Start)
#undef Rte_Runnable_WdgM_WdgM_GetMode_Start
extern void Rte_Runnable_WdgM_WdgM_GetMode_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_GetMode_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_GetMode_Start */

#if defined(Rte_Runnable_WdgM_WdgM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_MainFunction_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_MainFunction_Return)
#undef Rte_Runnable_WdgM_WdgM_MainFunction_Return
extern void Rte_Runnable_WdgM_WdgM_MainFunction_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_MainFunction_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_MainFunction_Return */

#if defined(Rte_Runnable_WdgM_WdgM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_MainFunction_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_MainFunction_Start)
#undef Rte_Runnable_WdgM_WdgM_MainFunction_Start
extern void Rte_Runnable_WdgM_WdgM_MainFunction_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_MainFunction_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_MainFunction_Start */

#if defined(Rte_Runnable_WdgM_WdgM_PerformReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_PerformReset_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_PerformReset_Return)
#undef Rte_Runnable_WdgM_WdgM_PerformReset_Return
extern void Rte_Runnable_WdgM_WdgM_PerformReset_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_PerformReset_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_PerformReset_Return */

#if defined(Rte_Runnable_WdgM_WdgM_PerformReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_PerformReset_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_PerformReset_Start)
#undef Rte_Runnable_WdgM_WdgM_PerformReset_Start
extern void Rte_Runnable_WdgM_WdgM_PerformReset_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_PerformReset_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_PerformReset_Start */

#if defined(Rte_Runnable_WdgM_WdgM_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_SetMode_Return
#endif
#if defined(Rte_Runnable_WdgM_WdgM_SetMode_Return)
#undef Rte_Runnable_WdgM_WdgM_SetMode_Return
extern void Rte_Runnable_WdgM_WdgM_SetMode_Return(void);
#else
#define Rte_Runnable_WdgM_WdgM_SetMode_Return() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_SetMode_Return */

#if defined(Rte_Runnable_WdgM_WdgM_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Runnable_WdgM_WdgM_SetMode_Start
#endif
#if defined(Rte_Runnable_WdgM_WdgM_SetMode_Start)
#undef Rte_Runnable_WdgM_WdgM_SetMode_Start
extern void Rte_Runnable_WdgM_WdgM_SetMode_Start(void);
#else
#define Rte_Runnable_WdgM_WdgM_SetMode_Start() ((void)(0))
#endif /* Rte_Runnable_WdgM_WdgM_SetMode_Start */

#if defined(Rte_StartHook_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_StartHook_Return
#endif
#if defined(Rte_StartHook_Return)
#undef Rte_StartHook_Return
extern void Rte_StartHook_Return(void);
#else
#define Rte_StartHook_Return() ((void)(0))
#endif /* Rte_StartHook_Return */

#if defined(Rte_StartHook_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_StartHook_Start
#endif
#if defined(Rte_StartHook_Start)
#undef Rte_StartHook_Start
extern void Rte_StartHook_Start(void);
#else
#define Rte_StartHook_Start() ((void)(0))
#endif /* Rte_StartHook_Start */

#if defined(Rte_StopHook_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_StopHook_Return
#endif
#if defined(Rte_StopHook_Return)
#undef Rte_StopHook_Return
extern void Rte_StopHook_Return(void);
#else
#define Rte_StopHook_Return() ((void)(0))
#endif /* Rte_StopHook_Return */

#if defined(Rte_StopHook_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_StopHook_Start
#endif
#if defined(Rte_StopHook_Start)
#undef Rte_StopHook_Start
extern void Rte_StopHook_Start(void);
#else
#define Rte_StopHook_Start() ((void)(0))
#endif /* Rte_StopHook_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMBORState_FD_CAN1_CanSMBORState_FD_CAN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_CanSMState_FD_CAN1_CanSMState_FD_CAN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_FD_CAN1_ComMMode_FD_CAN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN1_ComMMode_LIN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_LIN2_ComMMode_LIN2_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_ComMMode_PNC32_ComMMode_PNC32_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Dcm_CommunicationControlModeSwitchInterface_ComMChannel_FD_CAN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ControlDTCSettingModeSwitchInterface_Dcm_ControlDTCSettingModeSwitchInterface_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_DiagnosticSessionControlModeSwitchInterface_Dcm_DiagnosticSessionControlModeSwitchInterface_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_EcuResetModeSwitchInterface_Dcm_EcuResetModeSwitchInterface_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Dcm_ModeRapidPowerShutDownModeSwitchInterface_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_InitState_InitState_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN1_LinSchedule_LIN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMSchedule_LIN2_LinSchedule_LIN2_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN1_LinSMState_LIN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_LinSMState_LIN2_LinSMState_LIN2_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_FD_CAN1_PNC32_PduGroupRx_FD_CAN1_PNC32_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN1_PduGroupRx_LIN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupRx_LIN2_PduGroupRx_LIN2_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_FD_CAN1_PNC32_PduGroupTx_FD_CAN1_PNC32_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN1_PduGroupTx_LIN1_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_PduGroupTx_LIN2_PduGroupTx_LIN2_Start */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Return
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Return)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Return
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Return */

#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Start
#endif
#if defined(Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Start)
#undef Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Start
extern void Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_BswM_Partition_Main_modeSwitchPort_WakeupEvent_WakeupEvent_Start */

#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Return
#endif
#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Return)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Return
extern void Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Return(CONST(ComM_ModeType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Return */

#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Start
#endif
#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Start)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Start
extern void Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Start(CONST(ComM_ModeType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_ComM_UM_ComMUser_LIN1_currentMode_Start */

#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Return
#endif
#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Return)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Return
extern void Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Return(CONST(ComM_ModeType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Return */

#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Start
#endif
#if defined(Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Start)
#undef Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Start
extern void Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Start(CONST(ComM_ModeType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_ComM_UM_ComMUser_LIN2_currentMode_Start */

#if defined(Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Return
#endif
#if defined(Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Return)
#undef Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Return
extern void Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Return(CONST(ComM_ModeType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Return */

#if defined(Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Start
#endif
#if defined(Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Start)
#undef Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Start
extern void Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Start(CONST(ComM_ModeType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_ComM_UM_ComMUser_PNC32_currentMode_Start */

#if defined(Rte_SwitchHook_EcuM_currentMode_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_EcuM_currentMode_currentMode_Return
#endif
#if defined(Rte_SwitchHook_EcuM_currentMode_currentMode_Return)
#undef Rte_SwitchHook_EcuM_currentMode_currentMode_Return
extern void Rte_SwitchHook_EcuM_currentMode_currentMode_Return(CONST(EcuM_StateType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_EcuM_currentMode_currentMode_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_EcuM_currentMode_currentMode_Return */

#if defined(Rte_SwitchHook_EcuM_currentMode_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_EcuM_currentMode_currentMode_Start
#endif
#if defined(Rte_SwitchHook_EcuM_currentMode_currentMode_Start)
#undef Rte_SwitchHook_EcuM_currentMode_currentMode_Start
extern void Rte_SwitchHook_EcuM_currentMode_currentMode_Start(CONST(EcuM_StateType, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_EcuM_currentMode_currentMode_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_EcuM_currentMode_currentMode_Start */

#if defined(Rte_SwitchHook_WdgM_globalMode_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_WdgM_globalMode_currentMode_Return
#endif
#if defined(Rte_SwitchHook_WdgM_globalMode_currentMode_Return)
#undef Rte_SwitchHook_WdgM_globalMode_currentMode_Return
extern void Rte_SwitchHook_WdgM_globalMode_currentMode_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_WdgM_globalMode_currentMode_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_WdgM_globalMode_currentMode_Return */

#if defined(Rte_SwitchHook_WdgM_globalMode_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_WdgM_globalMode_currentMode_Start
#endif
#if defined(Rte_SwitchHook_WdgM_globalMode_currentMode_Start)
#undef Rte_SwitchHook_WdgM_globalMode_currentMode_Start
extern void Rte_SwitchHook_WdgM_globalMode_currentMode_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_WdgM_globalMode_currentMode_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_WdgM_globalMode_currentMode_Start */

#if defined(Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Return
#endif
#if defined(Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Return)
#undef Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Return
extern void Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Return(Data) ((void)(0))
#endif /* Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Return */

#if defined(Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Start
#endif
#if defined(Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Start)
#undef Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Start
extern void Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Start(Data) ((void)(0))
#endif /* Rte_SwitchHook_WdgM_mode_SE_Init_currentMode_Start */

#if defined(Rte_Task_Activate) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Activate
#endif
#if defined(Rte_Task_Activate)
#undef Rte_Task_Activate
extern void Rte_Task_Activate(TaskType task);
#else
#define Rte_Task_Activate(task) ((void)(0))
#endif /* Rte_Task_Activate */

#if defined(Rte_Task_Dispatch) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Dispatch
#endif
#if defined(Rte_Task_Dispatch)
#undef Rte_Task_Dispatch
extern void Rte_Task_Dispatch(TaskType task);
#else
#define Rte_Task_Dispatch(task) ((void)(0))
#endif /* Rte_Task_Dispatch */

#if defined(Rte_Task_SetEvent) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_SetEvent
#endif
#if defined(Rte_Task_SetEvent)
#undef Rte_Task_SetEvent
extern void Rte_Task_SetEvent(TaskType task, EventMaskType ev);
#else
#define Rte_Task_SetEvent(task, ev) ((void)(0))
#endif /* Rte_Task_SetEvent */

#if defined(Rte_Task_Terminate) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Terminate
#endif
#if defined(Rte_Task_Terminate)
#undef Rte_Task_Terminate
extern void Rte_Task_Terminate(TaskType task);
#else
#define Rte_Task_Terminate(task) ((void)(0))
#endif /* Rte_Task_Terminate */

#if defined(Rte_Task_WaitEvent) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEvent
#endif
#if defined(Rte_Task_WaitEvent)
#undef Rte_Task_WaitEvent
extern void Rte_Task_WaitEvent(TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEvent(task, ev) ((void)(0))
#endif /* Rte_Task_WaitEvent */

#if defined(Rte_Task_WaitEventRet) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEventRet
#endif
#if defined(Rte_Task_WaitEventRet)
#undef Rte_Task_WaitEventRet
extern void Rte_Task_WaitEventRet(TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEventRet(task, ev) ((void)(0))
#endif /* Rte_Task_WaitEventRet */

#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Return
#endif
#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Return)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Return
extern void Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Return(Data) ((void)(0))
#endif /* Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Return */

#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Start
#endif
#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Start)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Start
extern void Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Start(Data) ((void)(0))
#endif /* Rte_WriteHook_App_Lin_LIN1_P_SR_LIN1_SCHEDULE_CHANGE_LinSchedule_LIN1_Start */

#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Return
#endif
#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Return)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Return
extern void Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Return(Data) ((void)(0))
#endif /* Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Return */

#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Start
#endif
#if defined(Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Start)
#undef Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Start
extern void Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Start(Data) ((void)(0))
#endif /* Rte_WriteHook_App_Lin_LIN1_P_SR_LIN2_SCHEDULE_CHANGE_LinSchedule_LIN2_Start */

#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return
#endif
#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return
extern void Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return(Data) ((void)(0))
#endif /* Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Return */

#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start
#endif
#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start
extern void Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start(Data) ((void)(0))
#endif /* Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN1_ComMMode_LIN1_Start */

#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return
#endif
#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return
extern void Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return(Data) ((void)(0))
#endif /* Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Return */

#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start
#endif
#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start
extern void Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start(Data) ((void)(0))
#endif /* Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_LIN2_ComMMode_LIN2_Start */

#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return
#endif
#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return
extern void Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return(Data) ((void)(0))
#endif /* Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Return */

#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start
#endif
#if defined(Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start)
#undef Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start
extern void Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start(Data) ((void)(0))
#endif /* Rte_WriteHook_SWC_AppMode_modeRequestPort_ComMMode_PNC32_ComMMode_PNC32_Start */

#if defined(Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Return
#endif
#if defined(Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Return)
#undef Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Return
extern void Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Return(CONST(StbM_TimeBaseNotificationType, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Return(Data) ((void)(0))
#endif /* Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Return */

#if defined(Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Start
#endif
#if defined(Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Start)
#undef Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Start
extern void Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Start(CONST(StbM_TimeBaseNotificationType, RTE_APPL_CONST) Data);
#else
#define Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Start(Data) ((void)(0))
#endif /* Rte_WriteHook_StbM_GlobalTime_StatusEvent_Client0_eventNotification_Start */

#if defined(SchM_DeinitHook_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_DeinitHook_Return
#endif
#if defined(SchM_DeinitHook_Return)
#undef SchM_DeinitHook_Return
extern void SchM_DeinitHook_Return(void);
#else
#define SchM_DeinitHook_Return() ((void)(0))
#endif /* SchM_DeinitHook_Return */

#if defined(SchM_DeinitHook_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_DeinitHook_Start
#endif
#if defined(SchM_DeinitHook_Start)
#undef SchM_DeinitHook_Start
extern void SchM_DeinitHook_Start(void);
#else
#define SchM_DeinitHook_Start() ((void)(0))
#endif /* SchM_DeinitHook_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_101_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_102_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_103_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_28_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_32_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_33_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_34_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_35_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_36_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_37_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_38_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_39_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_40_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_41_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_42_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_43_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_44_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_45_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_46_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_47_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_48_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_49_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_50_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_51_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_54_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_55_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_56_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_57_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_58_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_59_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_60_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_61_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_62_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_63_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_64_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_65_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_66_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_67_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_68_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_69_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_70_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_71_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_72_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_73_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_74_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_75_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_76_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_77_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_78_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_79_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_80_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_81_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_82_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_83_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_84_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_85_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_86_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_87_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_88_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_89_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_90_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_91_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_92_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_95_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_96_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_97_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_98_Start */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Return
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Return)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Return
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Return(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Return() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Return */

#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Start
#endif
#if defined(SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Start)
#undef SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Start
extern void SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Start(void);
#else
#define SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Start() ((void)(0))
#endif /* SchM_EnterHook_Adc_ADC_EXCLUSIVE_AREA_99_Start */

#if defined(SchM_EnterHook_BswM_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_BswM_DATA_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_BswM_DATA_PROTECTION_Return)
#undef SchM_EnterHook_BswM_DATA_PROTECTION_Return
extern void SchM_EnterHook_BswM_DATA_PROTECTION_Return(void);
#else
#define SchM_EnterHook_BswM_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_BswM_DATA_PROTECTION_Return */

#if defined(SchM_EnterHook_BswM_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_BswM_DATA_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_BswM_DATA_PROTECTION_Start)
#undef SchM_EnterHook_BswM_DATA_PROTECTION_Start
extern void SchM_EnterHook_BswM_DATA_PROTECTION_Start(void);
#else
#define SchM_EnterHook_BswM_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_BswM_DATA_PROTECTION_Start */

#if defined(SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Return)
#undef SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Return
extern void SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Return(void);
#else
#define SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Return */

#if defined(SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Start)
#undef SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Start
extern void SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Start(void);
#else
#define SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_BswM_RULEPREVRESULT_PROTECTION_Start */

#if defined(SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Return)
#undef SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Return
extern void SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Start)
#undef SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Start
extern void SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_BswM_RULESTATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_CanCM_MAIN_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanCM_MAIN_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanCM_MAIN_PROTECTION_Return)
#undef SchM_EnterHook_CanCM_MAIN_PROTECTION_Return
extern void SchM_EnterHook_CanCM_MAIN_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanCM_MAIN_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanCM_MAIN_PROTECTION_Return */

#if defined(SchM_EnterHook_CanCM_MAIN_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanCM_MAIN_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanCM_MAIN_PROTECTION_Start)
#undef SchM_EnterHook_CanCM_MAIN_PROTECTION_Start
extern void SchM_EnterHook_CanCM_MAIN_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanCM_MAIN_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanCM_MAIN_PROTECTION_Start */

#if defined(SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Return
extern void SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Start
extern void SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanIf_MODE_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Return)
#undef SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Return
extern void SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Return */

#if defined(SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Start)
#undef SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Start
extern void SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanIf_RX_DATA_PROTECTION_Start */

#if defined(SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return)
#undef SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return
extern void SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start)
#undef SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start
extern void SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Return)
#undef SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Return
extern void SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Return */

#if defined(SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Start)
#undef SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Start
extern void SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanIf_TX_DYNCANID_PROTECTION_Start */

#if defined(SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return)
#undef SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return
extern void SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start)
#undef SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start
extern void SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Return)
#undef SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Return
extern void SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Return */

#if defined(SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Start)
#undef SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Start
extern void SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanIf_TX_QUEUE_PROTECTION_Start */

#if defined(SchM_EnterHook_CanNm_INTERNAL_STATUS_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanNm_INTERNAL_STATUS_Return
#endif
#if defined(SchM_EnterHook_CanNm_INTERNAL_STATUS_Return)
#undef SchM_EnterHook_CanNm_INTERNAL_STATUS_Return
extern void SchM_EnterHook_CanNm_INTERNAL_STATUS_Return(void);
#else
#define SchM_EnterHook_CanNm_INTERNAL_STATUS_Return() ((void)(0))
#endif /* SchM_EnterHook_CanNm_INTERNAL_STATUS_Return */

#if defined(SchM_EnterHook_CanNm_INTERNAL_STATUS_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanNm_INTERNAL_STATUS_Start
#endif
#if defined(SchM_EnterHook_CanNm_INTERNAL_STATUS_Start)
#undef SchM_EnterHook_CanNm_INTERNAL_STATUS_Start
extern void SchM_EnterHook_CanNm_INTERNAL_STATUS_Start(void);
#else
#define SchM_EnterHook_CanNm_INTERNAL_STATUS_Start() ((void)(0))
#endif /* SchM_EnterHook_CanNm_INTERNAL_STATUS_Start */

#if defined(SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Return
extern void SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Start
extern void SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanSM_BUSOFF_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Return
extern void SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Start
extern void SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanSM_MODE_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_CanTp_TIMER_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanTp_TIMER_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_CanTp_TIMER_PROTECTION_Return)
#undef SchM_EnterHook_CanTp_TIMER_PROTECTION_Return
extern void SchM_EnterHook_CanTp_TIMER_PROTECTION_Return(void);
#else
#define SchM_EnterHook_CanTp_TIMER_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_CanTp_TIMER_PROTECTION_Return */

#if defined(SchM_EnterHook_CanTp_TIMER_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanTp_TIMER_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_CanTp_TIMER_PROTECTION_Start)
#undef SchM_EnterHook_CanTp_TIMER_PROTECTION_Start
extern void SchM_EnterHook_CanTp_TIMER_PROTECTION_Start(void);
#else
#define SchM_EnterHook_CanTp_TIMER_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_CanTp_TIMER_PROTECTION_Start */

#if defined(SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return)
#undef SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return
extern void SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start)
#undef SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start
extern void SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start)
#undef SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start
extern void SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_EnterHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Return)
#undef SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Return
extern void SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Return(void);
#else
#define SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Return */

#if defined(SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Start)
#undef SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Start
extern void SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Start(void);
#else
#define SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_CURRENT_MODE_PROTECTION_Start */

#if defined(SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return)
#undef SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return
extern void SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return(void);
#else
#define SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return */

#if defined(SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start)
#undef SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start
extern void SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start(void);
#else
#define SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start */

#if defined(SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Return
#endif
#if defined(SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Return)
#undef SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Return
extern void SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Return(void);
#else
#define SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Return */

#if defined(SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Start
#endif
#if defined(SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Start)
#undef SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Start
extern void SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Start(void);
#else
#define SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_ECUM_WAKEUP_IND_Start */

#if defined(SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Return)
#undef SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Return
extern void SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Return(void);
#else
#define SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Return */

#if defined(SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Start)
#undef SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Start
extern void SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Start(void);
#else
#define SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_INHIBIT_CNT_PROTECTION_Start */

#if defined(SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Return)
#undef SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Return
extern void SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Return(void);
#else
#define SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Return */

#if defined(SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Start)
#undef SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Start
extern void SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Start(void);
#else
#define SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_NM_INDICATION_PROTECTION_Start */

#if defined(SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Return
#endif
#if defined(SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Return)
#undef SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Return
extern void SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Return(void);
#else
#define SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Return */

#if defined(SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Start
#endif
#if defined(SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Start)
#undef SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Start
extern void SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Start(void);
#else
#define SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_PNC_PREPARE_TIMER_Start */

#if defined(SchM_EnterHook_ComM_PNC_WAKEUP_IND_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_PNC_WAKEUP_IND_Return
#endif
#if defined(SchM_EnterHook_ComM_PNC_WAKEUP_IND_Return)
#undef SchM_EnterHook_ComM_PNC_WAKEUP_IND_Return
extern void SchM_EnterHook_ComM_PNC_WAKEUP_IND_Return(void);
#else
#define SchM_EnterHook_ComM_PNC_WAKEUP_IND_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_PNC_WAKEUP_IND_Return */

#if defined(SchM_EnterHook_ComM_PNC_WAKEUP_IND_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_PNC_WAKEUP_IND_Start
#endif
#if defined(SchM_EnterHook_ComM_PNC_WAKEUP_IND_Start)
#undef SchM_EnterHook_ComM_PNC_WAKEUP_IND_Start
extern void SchM_EnterHook_ComM_PNC_WAKEUP_IND_Start(void);
#else
#define SchM_EnterHook_ComM_PNC_WAKEUP_IND_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_PNC_WAKEUP_IND_Start */

#if defined(SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Return)
#undef SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Return
extern void SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Return(void);
#else
#define SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Return */

#if defined(SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Start)
#undef SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Start
extern void SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Start(void);
#else
#define SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_ComM_REQ_MODECNT_PROTECTION_Start */

#if defined(SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Return)
#undef SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Return
extern void SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Return */

#if defined(SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Start)
#undef SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Start
extern void SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_IPDU_COUNTER_PROTECTION_Start */

#if defined(SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return
extern void SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start
extern void SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_DM_STS_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_FIFO_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_GW_STS_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_SIG_DATA_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Return)
#undef SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Return
extern void SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Return */

#if defined(SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Start)
#undef SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Start
extern void SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_IPDU_DATA_PROTECTION_Start */

#if defined(SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_MDT_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return
extern void SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start
extern void SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return)
#undef SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return
extern void SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return */

#if defined(SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start)
#undef SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start
extern void SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Return)
#undef SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Return
extern void SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Return */

#if defined(SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Start)
#undef SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Start
extern void SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Csm_GLOBALVAR_PROTECTION_Start */

#if defined(SchM_EnterHook_Dcm_DATA_UPDATE_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_DATA_UPDATE_Return
#endif
#if defined(SchM_EnterHook_Dcm_DATA_UPDATE_Return)
#undef SchM_EnterHook_Dcm_DATA_UPDATE_Return
extern void SchM_EnterHook_Dcm_DATA_UPDATE_Return(void);
#else
#define SchM_EnterHook_Dcm_DATA_UPDATE_Return() ((void)(0))
#endif /* SchM_EnterHook_Dcm_DATA_UPDATE_Return */

#if defined(SchM_EnterHook_Dcm_DATA_UPDATE_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_DATA_UPDATE_Start
#endif
#if defined(SchM_EnterHook_Dcm_DATA_UPDATE_Start)
#undef SchM_EnterHook_Dcm_DATA_UPDATE_Start
extern void SchM_EnterHook_Dcm_DATA_UPDATE_Start(void);
#else
#define SchM_EnterHook_Dcm_DATA_UPDATE_Start() ((void)(0))
#endif /* SchM_EnterHook_Dcm_DATA_UPDATE_Start */

#if defined(SchM_EnterHook_Dcm_ProtclProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_ProtclProtection_Return
#endif
#if defined(SchM_EnterHook_Dcm_ProtclProtection_Return)
#undef SchM_EnterHook_Dcm_ProtclProtection_Return
extern void SchM_EnterHook_Dcm_ProtclProtection_Return(void);
#else
#define SchM_EnterHook_Dcm_ProtclProtection_Return() ((void)(0))
#endif /* SchM_EnterHook_Dcm_ProtclProtection_Return */

#if defined(SchM_EnterHook_Dcm_ProtclProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_ProtclProtection_Start
#endif
#if defined(SchM_EnterHook_Dcm_ProtclProtection_Start)
#undef SchM_EnterHook_Dcm_ProtclProtection_Start
extern void SchM_EnterHook_Dcm_ProtclProtection_Start(void);
#else
#define SchM_EnterHook_Dcm_ProtclProtection_Start() ((void)(0))
#endif /* SchM_EnterHook_Dcm_ProtclProtection_Start */

#if defined(SchM_EnterHook_Dcm_RxLengthProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_RxLengthProtection_Return
#endif
#if defined(SchM_EnterHook_Dcm_RxLengthProtection_Return)
#undef SchM_EnterHook_Dcm_RxLengthProtection_Return
extern void SchM_EnterHook_Dcm_RxLengthProtection_Return(void);
#else
#define SchM_EnterHook_Dcm_RxLengthProtection_Return() ((void)(0))
#endif /* SchM_EnterHook_Dcm_RxLengthProtection_Return */

#if defined(SchM_EnterHook_Dcm_RxLengthProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_RxLengthProtection_Start
#endif
#if defined(SchM_EnterHook_Dcm_RxLengthProtection_Start)
#undef SchM_EnterHook_Dcm_RxLengthProtection_Start
extern void SchM_EnterHook_Dcm_RxLengthProtection_Start(void);
#else
#define SchM_EnterHook_Dcm_RxLengthProtection_Start() ((void)(0))
#endif /* SchM_EnterHook_Dcm_RxLengthProtection_Start */

#if defined(SchM_EnterHook_Dcm_RxPduIdProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_RxPduIdProtection_Return
#endif
#if defined(SchM_EnterHook_Dcm_RxPduIdProtection_Return)
#undef SchM_EnterHook_Dcm_RxPduIdProtection_Return
extern void SchM_EnterHook_Dcm_RxPduIdProtection_Return(void);
#else
#define SchM_EnterHook_Dcm_RxPduIdProtection_Return() ((void)(0))
#endif /* SchM_EnterHook_Dcm_RxPduIdProtection_Return */

#if defined(SchM_EnterHook_Dcm_RxPduIdProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_RxPduIdProtection_Start
#endif
#if defined(SchM_EnterHook_Dcm_RxPduIdProtection_Start)
#undef SchM_EnterHook_Dcm_RxPduIdProtection_Start
extern void SchM_EnterHook_Dcm_RxPduIdProtection_Start(void);
#else
#define SchM_EnterHook_Dcm_RxPduIdProtection_Start() ((void)(0))
#endif /* SchM_EnterHook_Dcm_RxPduIdProtection_Start */

#if defined(SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return)
#undef SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return
extern void SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start)
#undef SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start
extern void SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Dcm_TimerProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_TimerProtection_Return
#endif
#if defined(SchM_EnterHook_Dcm_TimerProtection_Return)
#undef SchM_EnterHook_Dcm_TimerProtection_Return
extern void SchM_EnterHook_Dcm_TimerProtection_Return(void);
#else
#define SchM_EnterHook_Dcm_TimerProtection_Return() ((void)(0))
#endif /* SchM_EnterHook_Dcm_TimerProtection_Return */

#if defined(SchM_EnterHook_Dcm_TimerProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dcm_TimerProtection_Start
#endif
#if defined(SchM_EnterHook_Dcm_TimerProtection_Start)
#undef SchM_EnterHook_Dcm_TimerProtection_Start
extern void SchM_EnterHook_Dcm_TimerProtection_Start(void);
#else
#define SchM_EnterHook_Dcm_TimerProtection_Start() ((void)(0))
#endif /* SchM_EnterHook_Dcm_TimerProtection_Start */

#if defined(SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Return
#endif
#if defined(SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Return)
#undef SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Return
extern void SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Return(void);
#else
#define SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Return */

#if defined(SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Start
#endif
#if defined(SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Start)
#undef SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Start
extern void SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Start(void);
#else
#define SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_CAPTURE_OBD_DATA_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Return)
#undef SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Return
extern void SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Start)
#undef SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Start
extern void SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_BUFFER_PROTECTION_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Return)
#undef SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Return
extern void SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Start)
#undef SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Start
extern void SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_DATA_PROTECTION_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return)
#undef SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return
extern void SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start)
#undef SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start
extern void SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Return)
#undef SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Return
extern void SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Start)
#undef SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Start
extern void SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_NVDATA_PROTECTION_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Return)
#undef SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Return
extern void SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Start)
#undef SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Start
extern void SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_OCCTIME_PROTECTION_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Return)
#undef SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Return
extern void SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Start)
#undef SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Start
extern void SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_OCC_PROTECTION_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Return)
#undef SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Return
extern void SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Start)
#undef SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Start
extern void SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_RECORD_PROTECTION_Start */

#if defined(SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Return
extern void SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Start
extern void SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Dem_REQUEST_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_Det_RAM_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Det_RAM_DATA_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_Det_RAM_DATA_PROTECTION_Return)
#undef SchM_EnterHook_Det_RAM_DATA_PROTECTION_Return
extern void SchM_EnterHook_Det_RAM_DATA_PROTECTION_Return(void);
#else
#define SchM_EnterHook_Det_RAM_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_Det_RAM_DATA_PROTECTION_Return */

#if defined(SchM_EnterHook_Det_RAM_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Det_RAM_DATA_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_Det_RAM_DATA_PROTECTION_Start)
#undef SchM_EnterHook_Det_RAM_DATA_PROTECTION_Start
extern void SchM_EnterHook_Det_RAM_DATA_PROTECTION_Start(void);
#else
#define SchM_EnterHook_Det_RAM_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_Det_RAM_DATA_PROTECTION_Start */

#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Dio_DIO_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Return)
#undef SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Return
extern void SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Return(void);
#else
#define SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Return */

#if defined(SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Start)
#undef SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Start
extern void SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Start(void);
#else
#define SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_EcuM_ALARM_TIME_PROTECTION_Start */

#if defined(SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Return)
#undef SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Return
extern void SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Return(void);
#else
#define SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Return */

#if defined(SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Start)
#undef SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Start
extern void SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Start(void);
#else
#define SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_EcuM_BOOT_TARGET_PROTECTION_Start */

#if defined(SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Return
#endif
#if defined(SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Return)
#undef SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Return
extern void SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Return(void);
#else
#define SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Return() ((void)(0))
#endif /* SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Return */

#if defined(SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Start
#endif
#if defined(SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Start)
#undef SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Start
extern void SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Start(void);
#else
#define SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Start() ((void)(0))
#endif /* SchM_EnterHook_EcuM_SHUTDOWN_CAUSE_Start */

#if defined(SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return)
#undef SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return
extern void SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return(void);
#else
#define SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return */

#if defined(SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start)
#undef SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start
extern void SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start(void);
#else
#define SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start */

#if defined(SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return)
#undef SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return
extern void SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return(void);
#else
#define SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return */

#if defined(SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start)
#undef SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start
extern void SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start(void);
#else
#define SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start */

#if defined(SchM_EnterHook_EcuM_STATE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_STATE_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_EcuM_STATE_PROTECTION_Return)
#undef SchM_EnterHook_EcuM_STATE_PROTECTION_Return
extern void SchM_EnterHook_EcuM_STATE_PROTECTION_Return(void);
#else
#define SchM_EnterHook_EcuM_STATE_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_EcuM_STATE_PROTECTION_Return */

#if defined(SchM_EnterHook_EcuM_STATE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_STATE_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_EcuM_STATE_PROTECTION_Start)
#undef SchM_EnterHook_EcuM_STATE_PROTECTION_Start
extern void SchM_EnterHook_EcuM_STATE_PROTECTION_Start(void);
#else
#define SchM_EnterHook_EcuM_STATE_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_EcuM_STATE_PROTECTION_Start */

#if defined(SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Return
extern void SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Start
extern void SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_EcuM_WAKEUP_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Fee_FEE_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Return)
#undef SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Return
extern void SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Return(void);
#else
#define SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Return */

#if defined(SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Start)
#undef SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Start
extern void SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Start(void);
#else
#define SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_FiM_REQUEST_EVENTID_PROTECTION_Start */

#if defined(SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Return)
#undef SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Return
extern void SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Return(void);
#else
#define SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Return */

#if defined(SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Start)
#undef SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Start
extern void SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Start(void);
#else
#define SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_FiM_REQUEST_FID_PROTECTION_Start */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Return)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Return
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Start)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Start
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Return)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Return
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Start)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Start
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Return)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Return
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Start)
#undef SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Start
extern void SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_EnterHook_Fls_FLS_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return */

#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start
#endif
#if defined(SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start)
#undef SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start
extern void SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start(void);
#else
#define SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start() ((void)(0))
#endif /* SchM_EnterHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_46_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_47_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_48_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_49_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_50_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_51_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_52_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_53_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_57_Start */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Return
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Return)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Return
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Return(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Return() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Return */

#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Start
#endif
#if defined(SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Start)
#undef SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Start
extern void SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Start(void);
#else
#define SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Start() ((void)(0))
#endif /* SchM_EnterHook_Icu_ICU_EXCLUSIVE_AREA_58_Start */

#if defined(SchM_EnterHook_IoHwAb_IoHwAbProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_IoHwAb_IoHwAbProtection_Return
#endif
#if defined(SchM_EnterHook_IoHwAb_IoHwAbProtection_Return)
#undef SchM_EnterHook_IoHwAb_IoHwAbProtection_Return
extern void SchM_EnterHook_IoHwAb_IoHwAbProtection_Return(void);
#else
#define SchM_EnterHook_IoHwAb_IoHwAbProtection_Return() ((void)(0))
#endif /* SchM_EnterHook_IoHwAb_IoHwAbProtection_Return */

#if defined(SchM_EnterHook_IoHwAb_IoHwAbProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_IoHwAb_IoHwAbProtection_Start
#endif
#if defined(SchM_EnterHook_IoHwAb_IoHwAbProtection_Start)
#undef SchM_EnterHook_IoHwAb_IoHwAbProtection_Start
extern void SchM_EnterHook_IoHwAb_IoHwAbProtection_Start(void);
#else
#define SchM_EnterHook_IoHwAb_IoHwAbProtection_Start() ((void)(0))
#endif /* SchM_EnterHook_IoHwAb_IoHwAbProtection_Start */

#if defined(SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Return)
#undef SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Return
extern void SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Return(void);
#else
#define SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Return */

#if defined(SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Start)
#undef SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Start
extern void SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Start(void);
#else
#define SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_KeyM_GLOBALVAR_PROTECTION_Start */

#if defined(SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Return
extern void SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Start
extern void SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_LinIf_CHANNEL_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return
extern void SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start
extern void SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Return
extern void SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Start
extern void SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_LinIf_SPORADIC_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_LinIf_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_LinIf_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_LinIf_STATUS_PROTECTION_Return
extern void SchM_EnterHook_LinIf_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_LinIf_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_LinIf_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_LinIf_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_LinIf_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_LinIf_STATUS_PROTECTION_Start
extern void SchM_EnterHook_LinIf_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_LinIf_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_LinIf_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return)
#undef SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return
extern void SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return(void);
#else
#define SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return */

#if defined(SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start)
#undef SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start
extern void SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start(void);
#else
#define SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start */

#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return
#endif
#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return
extern void SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return(void);
#else
#define SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return() ((void)(0))
#endif /* SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return */

#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start
#endif
#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start
extern void SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start(void);
#else
#define SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start() ((void)(0))
#endif /* SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start */

#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return
#endif
#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return
extern void SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return(void);
#else
#define SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return() ((void)(0))
#endif /* SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return */

#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start
#endif
#if defined(SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start)
#undef SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start
extern void SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start(void);
#else
#define SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start() ((void)(0))
#endif /* SchM_EnterHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start */

#if defined(SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return)
#undef SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return
extern void SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return(void);
#else
#define SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return */

#if defined(SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start)
#undef SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start
extern void SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start(void);
#else
#define SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start)
#undef SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start
extern void SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_EnterHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return */

#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start
#endif
#if defined(SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start)
#undef SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start
extern void SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start(void);
#else
#define SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start */

#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_NvM_RAM_INDEX_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_NvM_RAM_INDEX_Return
#endif
#if defined(SchM_EnterHook_NvM_RAM_INDEX_Return)
#undef SchM_EnterHook_NvM_RAM_INDEX_Return
extern void SchM_EnterHook_NvM_RAM_INDEX_Return(void);
#else
#define SchM_EnterHook_NvM_RAM_INDEX_Return() ((void)(0))
#endif /* SchM_EnterHook_NvM_RAM_INDEX_Return */

#if defined(SchM_EnterHook_NvM_RAM_INDEX_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_NvM_RAM_INDEX_Start
#endif
#if defined(SchM_EnterHook_NvM_RAM_INDEX_Start)
#undef SchM_EnterHook_NvM_RAM_INDEX_Start
extern void SchM_EnterHook_NvM_RAM_INDEX_Start(void);
#else
#define SchM_EnterHook_NvM_RAM_INDEX_Start() ((void)(0))
#endif /* SchM_EnterHook_NvM_RAM_INDEX_Start */

#if defined(SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Return)
#undef SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Return
extern void SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Start)
#undef SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Start
extern void SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_NvM_RAM_STATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return)
#undef SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return
extern void SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start)
#undef SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start
extern void SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return)
#undef SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return
extern void SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start)
#undef SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start
extern void SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return)
#undef SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return
extern void SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start)
#undef SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start
extern void SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Return)
#undef SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Return
extern void SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Start)
#undef SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Start
extern void SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_PduR_MULTICAST_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return)
#undef SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return
extern void SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start)
#undef SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start
extern void SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Return
#endif
#if defined(SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Return)
#undef SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Return
extern void SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Return(void);
#else
#define SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Return */

#if defined(SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Start
#endif
#if defined(SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Start)
#undef SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Start
extern void SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Start(void);
#else
#define SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_PduR_TP_TX_PROTECTION_AREA_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Port_PORT_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return */

#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start
#endif
#if defined(SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start)
#undef SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start
extern void SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start(void);
#else
#define SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start() ((void)(0))
#endif /* SchM_EnterHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Return)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Return
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Start)
#undef SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Start
extern void SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_EnterHook_Spi_SPI_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Return)
#undef SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Return
extern void SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Return(void);
#else
#define SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Return */

#if defined(SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Start)
#undef SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Start
extern void SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Start(void);
#else
#define SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_StbM_RAM_DATA_PROTECTION_Start */

#if defined(SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return)
#undef SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return
extern void SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return(void);
#else
#define SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return */

#if defined(SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start)
#undef SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start
extern void SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start(void);
#else
#define SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start */

#if defined(SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return
#endif
#if defined(SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return)
#undef SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return
extern void SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return(void);
#else
#define SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return */

#if defined(SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start
#endif
#if defined(SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start)
#undef SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start
extern void SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start(void);
#else
#define SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_EnterHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start)
#undef SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start
extern void SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return
#endif
#if defined(SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return)
#undef SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return
extern void SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return(void);
#else
#define SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return() ((void)(0))
#endif /* SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return */

#if defined(SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start
#endif
#if defined(SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start)
#undef SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start
extern void SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start(void);
#else
#define SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start() ((void)(0))
#endif /* SchM_EnterHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_101_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_102_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_103_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_28_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_32_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_33_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_34_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_35_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_36_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_37_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_38_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_39_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_40_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_41_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_42_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_43_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_44_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_45_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_46_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_47_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_48_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_49_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_50_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_51_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_54_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_55_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_56_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_57_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_58_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_59_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_60_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_61_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_62_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_63_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_64_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_65_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_66_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_67_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_68_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_69_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_70_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_71_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_72_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_73_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_74_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_75_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_76_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_77_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_78_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_79_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_80_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_81_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_82_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_83_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_84_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_85_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_86_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_87_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_88_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_89_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_90_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_91_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_92_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_95_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_96_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_97_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_98_Start */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Return
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Return)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Return
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Return(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Return() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Return */

#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Start
#endif
#if defined(SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Start)
#undef SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Start
extern void SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Start(void);
#else
#define SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Start() ((void)(0))
#endif /* SchM_ExitHook_Adc_ADC_EXCLUSIVE_AREA_99_Start */

#if defined(SchM_ExitHook_BswM_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_BswM_DATA_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_BswM_DATA_PROTECTION_Return)
#undef SchM_ExitHook_BswM_DATA_PROTECTION_Return
extern void SchM_ExitHook_BswM_DATA_PROTECTION_Return(void);
#else
#define SchM_ExitHook_BswM_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_BswM_DATA_PROTECTION_Return */

#if defined(SchM_ExitHook_BswM_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_BswM_DATA_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_BswM_DATA_PROTECTION_Start)
#undef SchM_ExitHook_BswM_DATA_PROTECTION_Start
extern void SchM_ExitHook_BswM_DATA_PROTECTION_Start(void);
#else
#define SchM_ExitHook_BswM_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_BswM_DATA_PROTECTION_Start */

#if defined(SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Return)
#undef SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Return
extern void SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Return(void);
#else
#define SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Return */

#if defined(SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Start)
#undef SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Start
extern void SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Start(void);
#else
#define SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_BswM_RULEPREVRESULT_PROTECTION_Start */

#if defined(SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Return)
#undef SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Return
extern void SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Start)
#undef SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Start
extern void SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_BswM_RULESTATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_CanCM_MAIN_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanCM_MAIN_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanCM_MAIN_PROTECTION_Return)
#undef SchM_ExitHook_CanCM_MAIN_PROTECTION_Return
extern void SchM_ExitHook_CanCM_MAIN_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanCM_MAIN_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanCM_MAIN_PROTECTION_Return */

#if defined(SchM_ExitHook_CanCM_MAIN_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanCM_MAIN_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanCM_MAIN_PROTECTION_Start)
#undef SchM_ExitHook_CanCM_MAIN_PROTECTION_Start
extern void SchM_ExitHook_CanCM_MAIN_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanCM_MAIN_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanCM_MAIN_PROTECTION_Start */

#if defined(SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Return
extern void SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Start
extern void SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanIf_MODE_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Return)
#undef SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Return
extern void SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Return */

#if defined(SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Start)
#undef SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Start
extern void SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanIf_RX_DATA_PROTECTION_Start */

#if defined(SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return)
#undef SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return
extern void SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start)
#undef SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start
extern void SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanIf_RX_NOTIFSTATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Return)
#undef SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Return
extern void SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Return */

#if defined(SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Start)
#undef SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Start
extern void SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanIf_TX_DYNCANID_PROTECTION_Start */

#if defined(SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return)
#undef SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return
extern void SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start)
#undef SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start
extern void SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanIf_TX_NOTIFSTATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Return)
#undef SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Return
extern void SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Return */

#if defined(SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Start)
#undef SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Start
extern void SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanIf_TX_QUEUE_PROTECTION_Start */

#if defined(SchM_ExitHook_CanNm_INTERNAL_STATUS_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanNm_INTERNAL_STATUS_Return
#endif
#if defined(SchM_ExitHook_CanNm_INTERNAL_STATUS_Return)
#undef SchM_ExitHook_CanNm_INTERNAL_STATUS_Return
extern void SchM_ExitHook_CanNm_INTERNAL_STATUS_Return(void);
#else
#define SchM_ExitHook_CanNm_INTERNAL_STATUS_Return() ((void)(0))
#endif /* SchM_ExitHook_CanNm_INTERNAL_STATUS_Return */

#if defined(SchM_ExitHook_CanNm_INTERNAL_STATUS_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanNm_INTERNAL_STATUS_Start
#endif
#if defined(SchM_ExitHook_CanNm_INTERNAL_STATUS_Start)
#undef SchM_ExitHook_CanNm_INTERNAL_STATUS_Start
extern void SchM_ExitHook_CanNm_INTERNAL_STATUS_Start(void);
#else
#define SchM_ExitHook_CanNm_INTERNAL_STATUS_Start() ((void)(0))
#endif /* SchM_ExitHook_CanNm_INTERNAL_STATUS_Start */

#if defined(SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Return
extern void SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Start
extern void SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanSM_BUSOFF_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Return
extern void SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Start
extern void SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanSM_MODE_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_CanTp_TIMER_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanTp_TIMER_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_CanTp_TIMER_PROTECTION_Return)
#undef SchM_ExitHook_CanTp_TIMER_PROTECTION_Return
extern void SchM_ExitHook_CanTp_TIMER_PROTECTION_Return(void);
#else
#define SchM_ExitHook_CanTp_TIMER_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_CanTp_TIMER_PROTECTION_Return */

#if defined(SchM_ExitHook_CanTp_TIMER_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanTp_TIMER_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_CanTp_TIMER_PROTECTION_Start)
#undef SchM_ExitHook_CanTp_TIMER_PROTECTION_Start
extern void SchM_ExitHook_CanTp_TIMER_PROTECTION_Start(void);
#else
#define SchM_ExitHook_CanTp_TIMER_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_CanTp_TIMER_PROTECTION_Start */

#if defined(SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return)
#undef SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return
extern void SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start)
#undef SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start
extern void SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_CanTrcv_INTERRUPT_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start)
#undef SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start
extern void SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_ExitHook_Can_43_FLEXCAN_CAN_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Return)
#undef SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Return
extern void SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Return(void);
#else
#define SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Return */

#if defined(SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Start)
#undef SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Start
extern void SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Start(void);
#else
#define SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_CURRENT_MODE_PROTECTION_Start */

#if defined(SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return)
#undef SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return
extern void SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return(void);
#else
#define SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Return */

#if defined(SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start)
#undef SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start
extern void SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start(void);
#else
#define SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_DCM_DIAGNOSTIC_PROTECTION_Start */

#if defined(SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Return
#endif
#if defined(SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Return)
#undef SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Return
extern void SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Return(void);
#else
#define SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Return */

#if defined(SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Start
#endif
#if defined(SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Start)
#undef SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Start
extern void SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Start(void);
#else
#define SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_ECUM_WAKEUP_IND_Start */

#if defined(SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Return)
#undef SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Return
extern void SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Return(void);
#else
#define SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Return */

#if defined(SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Start)
#undef SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Start
extern void SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Start(void);
#else
#define SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_INHIBIT_CNT_PROTECTION_Start */

#if defined(SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Return)
#undef SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Return
extern void SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Return(void);
#else
#define SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Return */

#if defined(SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Start)
#undef SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Start
extern void SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Start(void);
#else
#define SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_NM_INDICATION_PROTECTION_Start */

#if defined(SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Return
#endif
#if defined(SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Return)
#undef SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Return
extern void SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Return(void);
#else
#define SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Return */

#if defined(SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Start
#endif
#if defined(SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Start)
#undef SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Start
extern void SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Start(void);
#else
#define SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_PNC_PREPARE_TIMER_Start */

#if defined(SchM_ExitHook_ComM_PNC_WAKEUP_IND_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_PNC_WAKEUP_IND_Return
#endif
#if defined(SchM_ExitHook_ComM_PNC_WAKEUP_IND_Return)
#undef SchM_ExitHook_ComM_PNC_WAKEUP_IND_Return
extern void SchM_ExitHook_ComM_PNC_WAKEUP_IND_Return(void);
#else
#define SchM_ExitHook_ComM_PNC_WAKEUP_IND_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_PNC_WAKEUP_IND_Return */

#if defined(SchM_ExitHook_ComM_PNC_WAKEUP_IND_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_PNC_WAKEUP_IND_Start
#endif
#if defined(SchM_ExitHook_ComM_PNC_WAKEUP_IND_Start)
#undef SchM_ExitHook_ComM_PNC_WAKEUP_IND_Start
extern void SchM_ExitHook_ComM_PNC_WAKEUP_IND_Start(void);
#else
#define SchM_ExitHook_ComM_PNC_WAKEUP_IND_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_PNC_WAKEUP_IND_Start */

#if defined(SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Return)
#undef SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Return
extern void SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Return(void);
#else
#define SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Return */

#if defined(SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Start)
#undef SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Start
extern void SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Start(void);
#else
#define SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_ComM_REQ_MODECNT_PROTECTION_Start */

#if defined(SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Return)
#undef SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Return
extern void SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Return */

#if defined(SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Start)
#undef SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Start
extern void SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_IPDU_COUNTER_PROTECTION_Start */

#if defined(SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return
extern void SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start
extern void SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_IPDU_GROUP_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_DM_STS_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_EXT_SIG_DATA_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_FIFO_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_GW_STS_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_IPDU_DATA_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_RX_IPDU_STS_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_SIG_DATA_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_EXT_SIG_DATA_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_IPDU_BUFFER_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Return)
#undef SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Return
extern void SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Return */

#if defined(SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Start)
#undef SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Start
extern void SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_IPDU_DATA_PROTECTION_Start */

#if defined(SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_IPDU_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_MDT_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return
extern void SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start
extern void SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Com_TX_TMS_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return)
#undef SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return
extern void SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Return */

#if defined(SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start)
#undef SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start
extern void SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_76_HaeModule_GLOBALVAR_PROTECTION_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Crypto_CRYPTO_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Return)
#undef SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Return
extern void SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Return */

#if defined(SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Start)
#undef SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Start
extern void SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Csm_GLOBALVAR_PROTECTION_Start */

#if defined(SchM_ExitHook_Dcm_DATA_UPDATE_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_DATA_UPDATE_Return
#endif
#if defined(SchM_ExitHook_Dcm_DATA_UPDATE_Return)
#undef SchM_ExitHook_Dcm_DATA_UPDATE_Return
extern void SchM_ExitHook_Dcm_DATA_UPDATE_Return(void);
#else
#define SchM_ExitHook_Dcm_DATA_UPDATE_Return() ((void)(0))
#endif /* SchM_ExitHook_Dcm_DATA_UPDATE_Return */

#if defined(SchM_ExitHook_Dcm_DATA_UPDATE_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_DATA_UPDATE_Start
#endif
#if defined(SchM_ExitHook_Dcm_DATA_UPDATE_Start)
#undef SchM_ExitHook_Dcm_DATA_UPDATE_Start
extern void SchM_ExitHook_Dcm_DATA_UPDATE_Start(void);
#else
#define SchM_ExitHook_Dcm_DATA_UPDATE_Start() ((void)(0))
#endif /* SchM_ExitHook_Dcm_DATA_UPDATE_Start */

#if defined(SchM_ExitHook_Dcm_ProtclProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_ProtclProtection_Return
#endif
#if defined(SchM_ExitHook_Dcm_ProtclProtection_Return)
#undef SchM_ExitHook_Dcm_ProtclProtection_Return
extern void SchM_ExitHook_Dcm_ProtclProtection_Return(void);
#else
#define SchM_ExitHook_Dcm_ProtclProtection_Return() ((void)(0))
#endif /* SchM_ExitHook_Dcm_ProtclProtection_Return */

#if defined(SchM_ExitHook_Dcm_ProtclProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_ProtclProtection_Start
#endif
#if defined(SchM_ExitHook_Dcm_ProtclProtection_Start)
#undef SchM_ExitHook_Dcm_ProtclProtection_Start
extern void SchM_ExitHook_Dcm_ProtclProtection_Start(void);
#else
#define SchM_ExitHook_Dcm_ProtclProtection_Start() ((void)(0))
#endif /* SchM_ExitHook_Dcm_ProtclProtection_Start */

#if defined(SchM_ExitHook_Dcm_RxLengthProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_RxLengthProtection_Return
#endif
#if defined(SchM_ExitHook_Dcm_RxLengthProtection_Return)
#undef SchM_ExitHook_Dcm_RxLengthProtection_Return
extern void SchM_ExitHook_Dcm_RxLengthProtection_Return(void);
#else
#define SchM_ExitHook_Dcm_RxLengthProtection_Return() ((void)(0))
#endif /* SchM_ExitHook_Dcm_RxLengthProtection_Return */

#if defined(SchM_ExitHook_Dcm_RxLengthProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_RxLengthProtection_Start
#endif
#if defined(SchM_ExitHook_Dcm_RxLengthProtection_Start)
#undef SchM_ExitHook_Dcm_RxLengthProtection_Start
extern void SchM_ExitHook_Dcm_RxLengthProtection_Start(void);
#else
#define SchM_ExitHook_Dcm_RxLengthProtection_Start() ((void)(0))
#endif /* SchM_ExitHook_Dcm_RxLengthProtection_Start */

#if defined(SchM_ExitHook_Dcm_RxPduIdProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_RxPduIdProtection_Return
#endif
#if defined(SchM_ExitHook_Dcm_RxPduIdProtection_Return)
#undef SchM_ExitHook_Dcm_RxPduIdProtection_Return
extern void SchM_ExitHook_Dcm_RxPduIdProtection_Return(void);
#else
#define SchM_ExitHook_Dcm_RxPduIdProtection_Return() ((void)(0))
#endif /* SchM_ExitHook_Dcm_RxPduIdProtection_Return */

#if defined(SchM_ExitHook_Dcm_RxPduIdProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_RxPduIdProtection_Start
#endif
#if defined(SchM_ExitHook_Dcm_RxPduIdProtection_Start)
#undef SchM_ExitHook_Dcm_RxPduIdProtection_Start
extern void SchM_ExitHook_Dcm_RxPduIdProtection_Start(void);
#else
#define SchM_ExitHook_Dcm_RxPduIdProtection_Start() ((void)(0))
#endif /* SchM_ExitHook_Dcm_RxPduIdProtection_Start */

#if defined(SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return)
#undef SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return
extern void SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start)
#undef SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start
extern void SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Dcm_SIGNAL_DATA_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Dcm_TimerProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_TimerProtection_Return
#endif
#if defined(SchM_ExitHook_Dcm_TimerProtection_Return)
#undef SchM_ExitHook_Dcm_TimerProtection_Return
extern void SchM_ExitHook_Dcm_TimerProtection_Return(void);
#else
#define SchM_ExitHook_Dcm_TimerProtection_Return() ((void)(0))
#endif /* SchM_ExitHook_Dcm_TimerProtection_Return */

#if defined(SchM_ExitHook_Dcm_TimerProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dcm_TimerProtection_Start
#endif
#if defined(SchM_ExitHook_Dcm_TimerProtection_Start)
#undef SchM_ExitHook_Dcm_TimerProtection_Start
extern void SchM_ExitHook_Dcm_TimerProtection_Start(void);
#else
#define SchM_ExitHook_Dcm_TimerProtection_Start() ((void)(0))
#endif /* SchM_ExitHook_Dcm_TimerProtection_Start */

#if defined(SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Return
#endif
#if defined(SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Return)
#undef SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Return
extern void SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Return(void);
#else
#define SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Return */

#if defined(SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Start
#endif
#if defined(SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Start)
#undef SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Start
extern void SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Start(void);
#else
#define SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_CAPTURE_OBD_DATA_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Return)
#undef SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Return
extern void SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Start)
#undef SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Start
extern void SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_BUFFER_PROTECTION_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Return)
#undef SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Return
extern void SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Start)
#undef SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Start
extern void SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_DATA_PROTECTION_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return)
#undef SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return
extern void SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start)
#undef SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start
extern void SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_DEBOUNCETIMEBASED_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Return)
#undef SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Return
extern void SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Start)
#undef SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Start
extern void SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_NVDATA_PROTECTION_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Return)
#undef SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Return
extern void SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Start)
#undef SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Start
extern void SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_OCCTIME_PROTECTION_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Return)
#undef SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Return
extern void SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Start)
#undef SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Start
extern void SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_OCC_PROTECTION_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Return)
#undef SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Return
extern void SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Start)
#undef SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Start
extern void SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_RECORD_PROTECTION_Start */

#if defined(SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Return
extern void SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Start
extern void SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Dem_REQUEST_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_Det_RAM_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Det_RAM_DATA_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_Det_RAM_DATA_PROTECTION_Return)
#undef SchM_ExitHook_Det_RAM_DATA_PROTECTION_Return
extern void SchM_ExitHook_Det_RAM_DATA_PROTECTION_Return(void);
#else
#define SchM_ExitHook_Det_RAM_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_Det_RAM_DATA_PROTECTION_Return */

#if defined(SchM_ExitHook_Det_RAM_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Det_RAM_DATA_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_Det_RAM_DATA_PROTECTION_Start)
#undef SchM_ExitHook_Det_RAM_DATA_PROTECTION_Start
extern void SchM_ExitHook_Det_RAM_DATA_PROTECTION_Start(void);
#else
#define SchM_ExitHook_Det_RAM_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_Det_RAM_DATA_PROTECTION_Start */

#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Dio_DIO_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Return)
#undef SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Return
extern void SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Return(void);
#else
#define SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Return */

#if defined(SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Start)
#undef SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Start
extern void SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Start(void);
#else
#define SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_EcuM_ALARM_TIME_PROTECTION_Start */

#if defined(SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Return)
#undef SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Return
extern void SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Return(void);
#else
#define SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Return */

#if defined(SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Start)
#undef SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Start
extern void SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Start(void);
#else
#define SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_EcuM_BOOT_TARGET_PROTECTION_Start */

#if defined(SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Return
#endif
#if defined(SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Return)
#undef SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Return
extern void SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Return(void);
#else
#define SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Return() ((void)(0))
#endif /* SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Return */

#if defined(SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Start
#endif
#if defined(SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Start)
#undef SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Start
extern void SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Start(void);
#else
#define SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Start() ((void)(0))
#endif /* SchM_ExitHook_EcuM_SHUTDOWN_CAUSE_Start */

#if defined(SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return)
#undef SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return
extern void SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return(void);
#else
#define SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Return */

#if defined(SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start)
#undef SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start
extern void SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start(void);
#else
#define SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_EcuM_SHUTDOWN_OR_SLEEP_FLAG_PROTECTION_Start */

#if defined(SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return)
#undef SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return
extern void SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return(void);
#else
#define SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Return */

#if defined(SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start)
#undef SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start
extern void SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start(void);
#else
#define SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_EcuM_SHUTDOWN_TARGET_PROTECTION_Start */

#if defined(SchM_ExitHook_EcuM_STATE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_STATE_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_EcuM_STATE_PROTECTION_Return)
#undef SchM_ExitHook_EcuM_STATE_PROTECTION_Return
extern void SchM_ExitHook_EcuM_STATE_PROTECTION_Return(void);
#else
#define SchM_ExitHook_EcuM_STATE_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_EcuM_STATE_PROTECTION_Return */

#if defined(SchM_ExitHook_EcuM_STATE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_STATE_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_EcuM_STATE_PROTECTION_Start)
#undef SchM_ExitHook_EcuM_STATE_PROTECTION_Start
extern void SchM_ExitHook_EcuM_STATE_PROTECTION_Start(void);
#else
#define SchM_ExitHook_EcuM_STATE_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_EcuM_STATE_PROTECTION_Start */

#if defined(SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Return
extern void SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Start
extern void SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_EcuM_WAKEUP_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Fee_FEE_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Return)
#undef SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Return
extern void SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Return(void);
#else
#define SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Return */

#if defined(SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Start)
#undef SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Start
extern void SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Start(void);
#else
#define SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_FiM_REQUEST_EVENTID_PROTECTION_Start */

#if defined(SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Return)
#undef SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Return
extern void SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Return(void);
#else
#define SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Return */

#if defined(SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Start)
#undef SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Start
extern void SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Start(void);
#else
#define SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_FiM_REQUEST_FID_PROTECTION_Start */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Return)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Return
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Start)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Start
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Return)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Return
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Start)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Start
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Return)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Return
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Start)
#undef SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Start
extern void SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_ExitHook_Fls_FLS_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_35_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_36_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_38_Start */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Return */

#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start
#endif
#if defined(SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start)
#undef SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start
extern void SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start(void);
#else
#define SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start() ((void)(0))
#endif /* SchM_ExitHook_Gpt_GPT_EXCLUSIVE_AREA_39_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_46_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_47_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_48_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_49_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_50_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_51_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_52_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_53_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_57_Start */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Return
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Return)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Return
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Return(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Return() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Return */

#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Start
#endif
#if defined(SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Start)
#undef SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Start
extern void SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Start(void);
#else
#define SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Start() ((void)(0))
#endif /* SchM_ExitHook_Icu_ICU_EXCLUSIVE_AREA_58_Start */

#if defined(SchM_ExitHook_IoHwAb_IoHwAbProtection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_IoHwAb_IoHwAbProtection_Return
#endif
#if defined(SchM_ExitHook_IoHwAb_IoHwAbProtection_Return)
#undef SchM_ExitHook_IoHwAb_IoHwAbProtection_Return
extern void SchM_ExitHook_IoHwAb_IoHwAbProtection_Return(void);
#else
#define SchM_ExitHook_IoHwAb_IoHwAbProtection_Return() ((void)(0))
#endif /* SchM_ExitHook_IoHwAb_IoHwAbProtection_Return */

#if defined(SchM_ExitHook_IoHwAb_IoHwAbProtection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_IoHwAb_IoHwAbProtection_Start
#endif
#if defined(SchM_ExitHook_IoHwAb_IoHwAbProtection_Start)
#undef SchM_ExitHook_IoHwAb_IoHwAbProtection_Start
extern void SchM_ExitHook_IoHwAb_IoHwAbProtection_Start(void);
#else
#define SchM_ExitHook_IoHwAb_IoHwAbProtection_Start() ((void)(0))
#endif /* SchM_ExitHook_IoHwAb_IoHwAbProtection_Start */

#if defined(SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Return)
#undef SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Return
extern void SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Return(void);
#else
#define SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Return */

#if defined(SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Start)
#undef SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Start
extern void SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Start(void);
#else
#define SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_KeyM_GLOBALVAR_PROTECTION_Start */

#if defined(SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Return
extern void SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Start
extern void SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_LinIf_CHANNEL_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return
extern void SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start
extern void SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_LinIf_SLEEP_REQUEST_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Return
extern void SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Start
extern void SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_LinIf_SPORADIC_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_LinIf_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_LinIf_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_LinIf_STATUS_PROTECTION_Return
extern void SchM_ExitHook_LinIf_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_LinIf_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_LinIf_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_LinIf_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_LinIf_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_LinIf_STATUS_PROTECTION_Start
extern void SchM_ExitHook_LinIf_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_LinIf_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_LinIf_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return)
#undef SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return
extern void SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return(void);
#else
#define SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Return */

#if defined(SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start)
#undef SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start
extern void SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start(void);
#else
#define SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_LinIf_WAKEUP_CONFCOUNT_PROTECTION_Start */

#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return
#endif
#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return
extern void SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return(void);
#else
#define SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return() ((void)(0))
#endif /* SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Return */

#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start
#endif
#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start
extern void SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start(void);
#else
#define SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start() ((void)(0))
#endif /* SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_0_Start */

#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return
#endif
#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return
extern void SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return(void);
#else
#define SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return() ((void)(0))
#endif /* SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Return */

#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start
#endif
#if defined(SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start)
#undef SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start
extern void SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start(void);
#else
#define SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start() ((void)(0))
#endif /* SchM_ExitHook_LinSM_CHANNEL_STATUS_PROTECTION_1_Start */

#if defined(SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return)
#undef SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return
extern void SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return(void);
#else
#define SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Return */

#if defined(SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start)
#undef SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start
extern void SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start(void);
#else
#define SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_LinTrcv_DIO_READ_WRITE_PROTECTION_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start)
#undef SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start
extern void SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_ExitHook_Lin_43_LPUART_FLEXIO_LIN_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_28_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_32_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_33_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_34_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_35_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_36_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_37_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_38_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_39_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_40_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_41_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_42_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_43_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_44_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_45_Start */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Return */

#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start
#endif
#if defined(SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start)
#undef SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start
extern void SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start(void);
#else
#define SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcl_MCL_EXCLUSIVE_AREA_46_Start */

#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Mcu_MCU_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_NvM_RAM_INDEX_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_NvM_RAM_INDEX_Return
#endif
#if defined(SchM_ExitHook_NvM_RAM_INDEX_Return)
#undef SchM_ExitHook_NvM_RAM_INDEX_Return
extern void SchM_ExitHook_NvM_RAM_INDEX_Return(void);
#else
#define SchM_ExitHook_NvM_RAM_INDEX_Return() ((void)(0))
#endif /* SchM_ExitHook_NvM_RAM_INDEX_Return */

#if defined(SchM_ExitHook_NvM_RAM_INDEX_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_NvM_RAM_INDEX_Start
#endif
#if defined(SchM_ExitHook_NvM_RAM_INDEX_Start)
#undef SchM_ExitHook_NvM_RAM_INDEX_Start
extern void SchM_ExitHook_NvM_RAM_INDEX_Start(void);
#else
#define SchM_ExitHook_NvM_RAM_INDEX_Start() ((void)(0))
#endif /* SchM_ExitHook_NvM_RAM_INDEX_Start */

#if defined(SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Return)
#undef SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Return
extern void SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Start)
#undef SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Start
extern void SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_NvM_RAM_STATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return)
#undef SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return
extern void SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start)
#undef SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start
extern void SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_PduR_DATA_BUFFER_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return)
#undef SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return
extern void SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start)
#undef SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start
extern void SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_PduR_FIFO_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return)
#undef SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return
extern void SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start)
#undef SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start
extern void SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_PduR_GROUP_STATUS_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Return)
#undef SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Return
extern void SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Start)
#undef SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Start
extern void SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_PduR_MULTICAST_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return)
#undef SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return
extern void SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start)
#undef SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start
extern void SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_PduR_TP_GATEWAY_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Return
#endif
#if defined(SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Return)
#undef SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Return
extern void SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Return(void);
#else
#define SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Return */

#if defined(SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Start
#endif
#if defined(SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Start)
#undef SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Start
extern void SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Start(void);
#else
#define SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_PduR_TP_TX_PROTECTION_AREA_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Port_PORT_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_19_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_20_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_21_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_22_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_23_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_24_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_25_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_26_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_27_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_28_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_29_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_30_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_31_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_32_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_33_Start */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Return */

#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start
#endif
#if defined(SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start)
#undef SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start
extern void SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start(void);
#else
#define SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start() ((void)(0))
#endif /* SchM_ExitHook_Pwm_PWM_EXCLUSIVE_AREA_34_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_12_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_13_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_14_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_15_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_16_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_17_Start */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Return
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Return)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Return
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Return(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Return() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Return */

#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Start
#endif
#if defined(SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Start)
#undef SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Start
extern void SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Start(void);
#else
#define SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Start() ((void)(0))
#endif /* SchM_ExitHook_Spi_SPI_EXCLUSIVE_AREA_18_Start */

#if defined(SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Return)
#undef SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Return
extern void SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Return(void);
#else
#define SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Return */

#if defined(SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Start)
#undef SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Start
extern void SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Start(void);
#else
#define SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_StbM_RAM_DATA_PROTECTION_Start */

#if defined(SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return)
#undef SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return
extern void SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return(void);
#else
#define SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Return */

#if defined(SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start)
#undef SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start
extern void SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start(void);
#else
#define SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_WdgM_FIRSTEXPIREDSEID_MULTICORE_PROTECTION_Start */

#if defined(SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return
#endif
#if defined(SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return)
#undef SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return
extern void SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return(void);
#else
#define SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return() ((void)(0))
#endif /* SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Return */

#if defined(SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start
#endif
#if defined(SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start)
#undef SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start
extern void SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start(void);
#else
#define SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start() ((void)(0))
#endif /* SchM_ExitHook_WdgM_GLOBALSUPVSNSTATUS_PROTECTION_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_00_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_01_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_02_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_03_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_04_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_05_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_06_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_07_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_08_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_09_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_10_Start */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Return */

#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start
#endif
#if defined(SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start)
#undef SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start
extern void SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start(void);
#else
#define SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_43_Instance0_WDG_EXCLUSIVE_AREA_11_Start */

#if defined(SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return
#endif
#if defined(SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return)
#undef SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return
extern void SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return(void);
#else
#define SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return() ((void)(0))
#endif /* SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Return */

#if defined(SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start
#endif
#if defined(SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start)
#undef SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start
extern void SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start(void);
#else
#define SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start() ((void)(0))
#endif /* SchM_ExitHook_Wdg_76_Acw_76_Acw_WDG_EXCLUSIVE_AREA_Start */

#if defined(SchM_InitHook_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_InitHook_Return
#endif
#if defined(SchM_InitHook_Return)
#undef SchM_InitHook_Return
extern void SchM_InitHook_Return(void);
#else
#define SchM_InitHook_Return() ((void)(0))
#endif /* SchM_InitHook_Return */

#if defined(SchM_InitHook_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_InitHook_Start
#endif
#if defined(SchM_InitHook_Start)
#undef SchM_InitHook_Start
extern void SchM_InitHook_Start(void);
#else
#define SchM_InitHook_Start() ((void)(0))
#endif /* SchM_InitHook_Start */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Return
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Return)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Return
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Return */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Start
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Start)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Start
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmCommunicationControl_FD_CAN1_Start */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Return
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Return)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Return
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Return */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Start
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Start)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Start
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmControlDTCSetting_Start */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Return
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Return)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Return
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Return */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Start
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Start)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Start
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmDiagnosticSessionControl_Start */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Return
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Return)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Return
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Return */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Start
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Start)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Start
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmEcuReset_Start */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Return
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Return)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Return
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Return(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Return */

#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Start
#endif
#if defined(SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Start)
#undef SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Start
extern void SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Start(P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_BswM_modeNotificationPort_DcmModeRapidPowerShutDown_Start */

#if defined(SchM_ModeHook_CanCM_CanCM_EM_R_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_CanCM_CanCM_EM_R_Return
#endif
#if defined(SchM_ModeHook_CanCM_CanCM_EM_R_Return)
#undef SchM_ModeHook_CanCM_CanCM_EM_R_Return
extern void SchM_ModeHook_CanCM_CanCM_EM_R_Return(void);
#else
#define SchM_ModeHook_CanCM_CanCM_EM_R_Return() ((void)(0))
#endif /* SchM_ModeHook_CanCM_CanCM_EM_R_Return */

#if defined(SchM_ModeHook_CanCM_CanCM_EM_R_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_CanCM_CanCM_EM_R_Start
#endif
#if defined(SchM_ModeHook_CanCM_CanCM_EM_R_Start)
#undef SchM_ModeHook_CanCM_CanCM_EM_R_Start
extern void SchM_ModeHook_CanCM_CanCM_EM_R_Start(void);
#else
#define SchM_ModeHook_CanCM_CanCM_EM_R_Start() ((void)(0))
#endif /* SchM_ModeHook_CanCM_CanCM_EM_R_Start */

#if defined(SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Return
#endif
#if defined(SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Return)
#undef SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Return
extern void SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Return(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Return */

#if defined(SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Start
#endif
#if defined(SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Start)
#undef SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Start
extern void SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Start(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_Csm_modeNotificationPort_CsmEcuShutdown_Start */

#if defined(SchM_ModeHook_Dcm_DcmApplicationUpdated_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmApplicationUpdated_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmApplicationUpdated_Return)
#undef SchM_ModeHook_Dcm_DcmApplicationUpdated_Return
extern void SchM_ModeHook_Dcm_DcmApplicationUpdated_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmApplicationUpdated_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmApplicationUpdated_Return */

#if defined(SchM_ModeHook_Dcm_DcmApplicationUpdated_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmApplicationUpdated_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmApplicationUpdated_Start)
#undef SchM_ModeHook_Dcm_DcmApplicationUpdated_Start
extern void SchM_ModeHook_Dcm_DcmApplicationUpdated_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmApplicationUpdated_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmApplicationUpdated_Start */

#if defined(SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return)
#undef SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return
extern void SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return */

#if defined(SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start)
#undef SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start
extern void SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start */

#if defined(SchM_ModeHook_Dcm_DcmControlDTCSetting_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmControlDTCSetting_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmControlDTCSetting_Return)
#undef SchM_ModeHook_Dcm_DcmControlDTCSetting_Return
extern void SchM_ModeHook_Dcm_DcmControlDTCSetting_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmControlDTCSetting_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmControlDTCSetting_Return */

#if defined(SchM_ModeHook_Dcm_DcmControlDTCSetting_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmControlDTCSetting_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmControlDTCSetting_Start)
#undef SchM_ModeHook_Dcm_DcmControlDTCSetting_Start
extern void SchM_ModeHook_Dcm_DcmControlDTCSetting_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmControlDTCSetting_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmControlDTCSetting_Start */

#if defined(SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Return)
#undef SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Return
extern void SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Return */

#if defined(SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Start)
#undef SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Start
extern void SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmDiagnosticSessionControl_Start */

#if defined(SchM_ModeHook_Dcm_DcmEcuReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmEcuReset_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmEcuReset_Return)
#undef SchM_ModeHook_Dcm_DcmEcuReset_Return
extern void SchM_ModeHook_Dcm_DcmEcuReset_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmEcuReset_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmEcuReset_Return */

#if defined(SchM_ModeHook_Dcm_DcmEcuReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmEcuReset_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmEcuReset_Start)
#undef SchM_ModeHook_Dcm_DcmEcuReset_Start
extern void SchM_ModeHook_Dcm_DcmEcuReset_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmEcuReset_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmEcuReset_Start */

#if defined(SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Return)
#undef SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Return
extern void SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Return */

#if defined(SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Start)
#undef SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Start
extern void SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmModeRapidPowerShutDown_Start */

#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return
extern void SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return */

#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start
extern void SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start */

#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return
extern void SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return */

#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start)
#undef SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start
extern void SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start */

#if defined(SchM_ModeHook_Dcm_DcmSecurityAccess_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmSecurityAccess_Return
#endif
#if defined(SchM_ModeHook_Dcm_DcmSecurityAccess_Return)
#undef SchM_ModeHook_Dcm_DcmSecurityAccess_Return
extern void SchM_ModeHook_Dcm_DcmSecurityAccess_Return(void);
#else
#define SchM_ModeHook_Dcm_DcmSecurityAccess_Return() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmSecurityAccess_Return */

#if defined(SchM_ModeHook_Dcm_DcmSecurityAccess_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_Dcm_DcmSecurityAccess_Start
#endif
#if defined(SchM_ModeHook_Dcm_DcmSecurityAccess_Start)
#undef SchM_ModeHook_Dcm_DcmSecurityAccess_Start
extern void SchM_ModeHook_Dcm_DcmSecurityAccess_Start(void);
#else
#define SchM_ModeHook_Dcm_DcmSecurityAccess_Start() ((void)(0))
#endif /* SchM_ModeHook_Dcm_DcmSecurityAccess_Start */

#if defined(SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Return
#endif
#if defined(SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Return)
#undef SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Return
extern void SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Return(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Return */

#if defined(SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Start
#endif
#if defined(SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Start)
#undef SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Start
extern void SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Start(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_KeyM_modeNotificationPort_KeyMEcuShutdown_Start */

#if defined(SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Return
#endif
#if defined(SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Return)
#undef SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Return
extern void SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Return(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Return(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Return */

#if defined(SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Start
#endif
#if defined(SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Start)
#undef SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Start
extern void SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Start(P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) previousMode, P2VAR(EcuM_StateType, AUTOMATIC, RTE_APPL_DATA) nextMode);
#else
#define SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Start(previousMode, nextMode) ((void)(0))
#endif /* SchM_ModeHook_WdgM_modeNotificationPort_EcuMode_Start */

#if defined(SchM_Schedulable_Adc_ApplyCalibration_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ApplyCalibration_Return
#endif
#if defined(SchM_Schedulable_Adc_ApplyCalibration_Return)
#undef SchM_Schedulable_Adc_ApplyCalibration_Return
extern void SchM_Schedulable_Adc_ApplyCalibration_Return(void);
#else
#define SchM_Schedulable_Adc_ApplyCalibration_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_ApplyCalibration_Return */

#if defined(SchM_Schedulable_Adc_ApplyCalibration_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ApplyCalibration_Start
#endif
#if defined(SchM_Schedulable_Adc_ApplyCalibration_Start)
#undef SchM_Schedulable_Adc_ApplyCalibration_Start
extern void SchM_Schedulable_Adc_ApplyCalibration_Start(void);
#else
#define SchM_Schedulable_Adc_ApplyCalibration_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_ApplyCalibration_Start */

#if defined(SchM_Schedulable_Adc_Bctu_0_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Bctu_0_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Bctu_0_Isr_Return)
#undef SchM_Schedulable_Adc_Bctu_0_Isr_Return
extern void SchM_Schedulable_Adc_Bctu_0_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Bctu_0_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Bctu_0_Isr_Return */

#if defined(SchM_Schedulable_Adc_Bctu_0_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Bctu_0_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Bctu_0_Isr_Start)
#undef SchM_Schedulable_Adc_Bctu_0_Isr_Start
extern void SchM_Schedulable_Adc_Bctu_0_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Bctu_0_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Bctu_0_Isr_Start */

#if defined(SchM_Schedulable_Adc_Bctu_1_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Bctu_1_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Bctu_1_Isr_Return)
#undef SchM_Schedulable_Adc_Bctu_1_Isr_Return
extern void SchM_Schedulable_Adc_Bctu_1_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Bctu_1_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Bctu_1_Isr_Return */

#if defined(SchM_Schedulable_Adc_Bctu_1_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Bctu_1_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Bctu_1_Isr_Start)
#undef SchM_Schedulable_Adc_Bctu_1_Isr_Start
extern void SchM_Schedulable_Adc_Bctu_1_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Bctu_1_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Bctu_1_Isr_Start */

#if defined(SchM_Schedulable_Adc_Calibrate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Calibrate_Return
#endif
#if defined(SchM_Schedulable_Adc_Calibrate_Return)
#undef SchM_Schedulable_Adc_Calibrate_Return
extern void SchM_Schedulable_Adc_Calibrate_Return(void);
#else
#define SchM_Schedulable_Adc_Calibrate_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Calibrate_Return */

#if defined(SchM_Schedulable_Adc_Calibrate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Calibrate_Start
#endif
#if defined(SchM_Schedulable_Adc_Calibrate_Start)
#undef SchM_Schedulable_Adc_Calibrate_Start
extern void SchM_Schedulable_Adc_Calibrate_Start(void);
#else
#define SchM_Schedulable_Adc_Calibrate_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Calibrate_Start */

#if defined(SchM_Schedulable_Adc_ConfigureThreshold_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ConfigureThreshold_Return
#endif
#if defined(SchM_Schedulable_Adc_ConfigureThreshold_Return)
#undef SchM_Schedulable_Adc_ConfigureThreshold_Return
extern void SchM_Schedulable_Adc_ConfigureThreshold_Return(void);
#else
#define SchM_Schedulable_Adc_ConfigureThreshold_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_ConfigureThreshold_Return */

#if defined(SchM_Schedulable_Adc_ConfigureThreshold_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ConfigureThreshold_Start
#endif
#if defined(SchM_Schedulable_Adc_ConfigureThreshold_Start)
#undef SchM_Schedulable_Adc_ConfigureThreshold_Start
extern void SchM_Schedulable_Adc_ConfigureThreshold_Start(void);
#else
#define SchM_Schedulable_Adc_ConfigureThreshold_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_ConfigureThreshold_Start */

#if defined(SchM_Schedulable_Adc_CtuDisableHwTrigger_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuDisableHwTrigger_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuDisableHwTrigger_Return)
#undef SchM_Schedulable_Adc_CtuDisableHwTrigger_Return
extern void SchM_Schedulable_Adc_CtuDisableHwTrigger_Return(void);
#else
#define SchM_Schedulable_Adc_CtuDisableHwTrigger_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuDisableHwTrigger_Return */

#if defined(SchM_Schedulable_Adc_CtuDisableHwTrigger_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuDisableHwTrigger_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuDisableHwTrigger_Start)
#undef SchM_Schedulable_Adc_CtuDisableHwTrigger_Start
extern void SchM_Schedulable_Adc_CtuDisableHwTrigger_Start(void);
#else
#define SchM_Schedulable_Adc_CtuDisableHwTrigger_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuDisableHwTrigger_Start */

#if defined(SchM_Schedulable_Adc_CtuDisableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuDisableNotification_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuDisableNotification_Return)
#undef SchM_Schedulable_Adc_CtuDisableNotification_Return
extern void SchM_Schedulable_Adc_CtuDisableNotification_Return(void);
#else
#define SchM_Schedulable_Adc_CtuDisableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuDisableNotification_Return */

#if defined(SchM_Schedulable_Adc_CtuDisableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuDisableNotification_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuDisableNotification_Start)
#undef SchM_Schedulable_Adc_CtuDisableNotification_Start
extern void SchM_Schedulable_Adc_CtuDisableNotification_Start(void);
#else
#define SchM_Schedulable_Adc_CtuDisableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuDisableNotification_Start */

#if defined(SchM_Schedulable_Adc_CtuEnableHwTrigger_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuEnableHwTrigger_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuEnableHwTrigger_Return)
#undef SchM_Schedulable_Adc_CtuEnableHwTrigger_Return
extern void SchM_Schedulable_Adc_CtuEnableHwTrigger_Return(void);
#else
#define SchM_Schedulable_Adc_CtuEnableHwTrigger_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuEnableHwTrigger_Return */

#if defined(SchM_Schedulable_Adc_CtuEnableHwTrigger_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuEnableHwTrigger_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuEnableHwTrigger_Start)
#undef SchM_Schedulable_Adc_CtuEnableHwTrigger_Start
extern void SchM_Schedulable_Adc_CtuEnableHwTrigger_Start(void);
#else
#define SchM_Schedulable_Adc_CtuEnableHwTrigger_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuEnableHwTrigger_Start */

#if defined(SchM_Schedulable_Adc_CtuEnableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuEnableNotification_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuEnableNotification_Return)
#undef SchM_Schedulable_Adc_CtuEnableNotification_Return
extern void SchM_Schedulable_Adc_CtuEnableNotification_Return(void);
#else
#define SchM_Schedulable_Adc_CtuEnableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuEnableNotification_Return */

#if defined(SchM_Schedulable_Adc_CtuEnableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuEnableNotification_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuEnableNotification_Start)
#undef SchM_Schedulable_Adc_CtuEnableNotification_Start
extern void SchM_Schedulable_Adc_CtuEnableNotification_Start(void);
#else
#define SchM_Schedulable_Adc_CtuEnableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuEnableNotification_Start */

#if defined(SchM_Schedulable_Adc_CtuReadConvData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadConvData_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuReadConvData_Return)
#undef SchM_Schedulable_Adc_CtuReadConvData_Return
extern void SchM_Schedulable_Adc_CtuReadConvData_Return(void);
#else
#define SchM_Schedulable_Adc_CtuReadConvData_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadConvData_Return */

#if defined(SchM_Schedulable_Adc_CtuReadConvData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadConvData_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuReadConvData_Start)
#undef SchM_Schedulable_Adc_CtuReadConvData_Start
extern void SchM_Schedulable_Adc_CtuReadConvData_Start(void);
#else
#define SchM_Schedulable_Adc_CtuReadConvData_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadConvData_Start */

#if defined(SchM_Schedulable_Adc_CtuReadConvResult_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadConvResult_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuReadConvResult_Return)
#undef SchM_Schedulable_Adc_CtuReadConvResult_Return
extern void SchM_Schedulable_Adc_CtuReadConvResult_Return(void);
#else
#define SchM_Schedulable_Adc_CtuReadConvResult_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadConvResult_Return */

#if defined(SchM_Schedulable_Adc_CtuReadConvResult_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadConvResult_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuReadConvResult_Start)
#undef SchM_Schedulable_Adc_CtuReadConvResult_Start
extern void SchM_Schedulable_Adc_CtuReadConvResult_Start(void);
#else
#define SchM_Schedulable_Adc_CtuReadConvResult_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadConvResult_Start */

#if defined(SchM_Schedulable_Adc_CtuReadFifoData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadFifoData_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuReadFifoData_Return)
#undef SchM_Schedulable_Adc_CtuReadFifoData_Return
extern void SchM_Schedulable_Adc_CtuReadFifoData_Return(void);
#else
#define SchM_Schedulable_Adc_CtuReadFifoData_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadFifoData_Return */

#if defined(SchM_Schedulable_Adc_CtuReadFifoData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadFifoData_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuReadFifoData_Start)
#undef SchM_Schedulable_Adc_CtuReadFifoData_Start
extern void SchM_Schedulable_Adc_CtuReadFifoData_Start(void);
#else
#define SchM_Schedulable_Adc_CtuReadFifoData_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadFifoData_Start */

#if defined(SchM_Schedulable_Adc_CtuReadFifoResult_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadFifoResult_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuReadFifoResult_Return)
#undef SchM_Schedulable_Adc_CtuReadFifoResult_Return
extern void SchM_Schedulable_Adc_CtuReadFifoResult_Return(void);
#else
#define SchM_Schedulable_Adc_CtuReadFifoResult_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadFifoResult_Return */

#if defined(SchM_Schedulable_Adc_CtuReadFifoResult_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuReadFifoResult_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuReadFifoResult_Start)
#undef SchM_Schedulable_Adc_CtuReadFifoResult_Start
extern void SchM_Schedulable_Adc_CtuReadFifoResult_Start(void);
#else
#define SchM_Schedulable_Adc_CtuReadFifoResult_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuReadFifoResult_Start */

#if defined(SchM_Schedulable_Adc_CtuSetFifoWatermark_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetFifoWatermark_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuSetFifoWatermark_Return)
#undef SchM_Schedulable_Adc_CtuSetFifoWatermark_Return
extern void SchM_Schedulable_Adc_CtuSetFifoWatermark_Return(void);
#else
#define SchM_Schedulable_Adc_CtuSetFifoWatermark_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetFifoWatermark_Return */

#if defined(SchM_Schedulable_Adc_CtuSetFifoWatermark_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetFifoWatermark_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuSetFifoWatermark_Start)
#undef SchM_Schedulable_Adc_CtuSetFifoWatermark_Start
extern void SchM_Schedulable_Adc_CtuSetFifoWatermark_Start(void);
#else
#define SchM_Schedulable_Adc_CtuSetFifoWatermark_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetFifoWatermark_Start */

#if defined(SchM_Schedulable_Adc_CtuSetListPointer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetListPointer_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuSetListPointer_Return)
#undef SchM_Schedulable_Adc_CtuSetListPointer_Return
extern void SchM_Schedulable_Adc_CtuSetListPointer_Return(void);
#else
#define SchM_Schedulable_Adc_CtuSetListPointer_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetListPointer_Return */

#if defined(SchM_Schedulable_Adc_CtuSetListPointer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetListPointer_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuSetListPointer_Start)
#undef SchM_Schedulable_Adc_CtuSetListPointer_Start
extern void SchM_Schedulable_Adc_CtuSetListPointer_Start(void);
#else
#define SchM_Schedulable_Adc_CtuSetListPointer_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetListPointer_Start */

#if defined(SchM_Schedulable_Adc_CtuSetList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetList_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuSetList_Return)
#undef SchM_Schedulable_Adc_CtuSetList_Return
extern void SchM_Schedulable_Adc_CtuSetList_Return(void);
#else
#define SchM_Schedulable_Adc_CtuSetList_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetList_Return */

#if defined(SchM_Schedulable_Adc_CtuSetList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetList_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuSetList_Start)
#undef SchM_Schedulable_Adc_CtuSetList_Start
extern void SchM_Schedulable_Adc_CtuSetList_Start(void);
#else
#define SchM_Schedulable_Adc_CtuSetList_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetList_Start */

#if defined(SchM_Schedulable_Adc_CtuSetPowerMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetPowerMode_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuSetPowerMode_Return)
#undef SchM_Schedulable_Adc_CtuSetPowerMode_Return
extern void SchM_Schedulable_Adc_CtuSetPowerMode_Return(void);
#else
#define SchM_Schedulable_Adc_CtuSetPowerMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetPowerMode_Return */

#if defined(SchM_Schedulable_Adc_CtuSetPowerMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetPowerMode_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuSetPowerMode_Start)
#undef SchM_Schedulable_Adc_CtuSetPowerMode_Start
extern void SchM_Schedulable_Adc_CtuSetPowerMode_Start(void);
#else
#define SchM_Schedulable_Adc_CtuSetPowerMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetPowerMode_Start */

#if defined(SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Return)
#undef SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Return
extern void SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Return(void);
#else
#define SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Return */

#if defined(SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Start)
#undef SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Start
extern void SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Start(void);
#else
#define SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetTriggerAdcCmdAddress_Start */

#if defined(SchM_Schedulable_Adc_CtuSetTriggerCompare_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetTriggerCompare_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuSetTriggerCompare_Return)
#undef SchM_Schedulable_Adc_CtuSetTriggerCompare_Return
extern void SchM_Schedulable_Adc_CtuSetTriggerCompare_Return(void);
#else
#define SchM_Schedulable_Adc_CtuSetTriggerCompare_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetTriggerCompare_Return */

#if defined(SchM_Schedulable_Adc_CtuSetTriggerCompare_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetTriggerCompare_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuSetTriggerCompare_Start)
#undef SchM_Schedulable_Adc_CtuSetTriggerCompare_Start
extern void SchM_Schedulable_Adc_CtuSetTriggerCompare_Start(void);
#else
#define SchM_Schedulable_Adc_CtuSetTriggerCompare_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetTriggerCompare_Start */

#if defined(SchM_Schedulable_Adc_CtuSetTriggerEnable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetTriggerEnable_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuSetTriggerEnable_Return)
#undef SchM_Schedulable_Adc_CtuSetTriggerEnable_Return
extern void SchM_Schedulable_Adc_CtuSetTriggerEnable_Return(void);
#else
#define SchM_Schedulable_Adc_CtuSetTriggerEnable_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetTriggerEnable_Return */

#if defined(SchM_Schedulable_Adc_CtuSetTriggerEnable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuSetTriggerEnable_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuSetTriggerEnable_Start)
#undef SchM_Schedulable_Adc_CtuSetTriggerEnable_Start
extern void SchM_Schedulable_Adc_CtuSetTriggerEnable_Start(void);
#else
#define SchM_Schedulable_Adc_CtuSetTriggerEnable_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuSetTriggerEnable_Start */

#if defined(SchM_Schedulable_Adc_CtuStartConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuStartConversion_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuStartConversion_Return)
#undef SchM_Schedulable_Adc_CtuStartConversion_Return
extern void SchM_Schedulable_Adc_CtuStartConversion_Return(void);
#else
#define SchM_Schedulable_Adc_CtuStartConversion_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuStartConversion_Return */

#if defined(SchM_Schedulable_Adc_CtuStartConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuStartConversion_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuStartConversion_Start)
#undef SchM_Schedulable_Adc_CtuStartConversion_Start
extern void SchM_Schedulable_Adc_CtuStartConversion_Start(void);
#else
#define SchM_Schedulable_Adc_CtuStartConversion_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuStartConversion_Start */

#if defined(SchM_Schedulable_Adc_CtuStopLoopConversions_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuStopLoopConversions_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuStopLoopConversions_Return)
#undef SchM_Schedulable_Adc_CtuStopLoopConversions_Return
extern void SchM_Schedulable_Adc_CtuStopLoopConversions_Return(void);
#else
#define SchM_Schedulable_Adc_CtuStopLoopConversions_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuStopLoopConversions_Return */

#if defined(SchM_Schedulable_Adc_CtuStopLoopConversions_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuStopLoopConversions_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuStopLoopConversions_Start)
#undef SchM_Schedulable_Adc_CtuStopLoopConversions_Start
extern void SchM_Schedulable_Adc_CtuStopLoopConversions_Start(void);
#else
#define SchM_Schedulable_Adc_CtuStopLoopConversions_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuStopLoopConversions_Start */

#if defined(SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Return
#endif
#if defined(SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Return)
#undef SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Return
extern void SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Return(void);
#else
#define SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Return */

#if defined(SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Start
#endif
#if defined(SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Start)
#undef SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Start
extern void SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Start(void);
#else
#define SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_CtuWriteTriggerEnableMask_Start */

#if defined(SchM_Schedulable_Adc_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DeInit_Return
#endif
#if defined(SchM_Schedulable_Adc_DeInit_Return)
#undef SchM_Schedulable_Adc_DeInit_Return
extern void SchM_Schedulable_Adc_DeInit_Return(void);
#else
#define SchM_Schedulable_Adc_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_DeInit_Return */

#if defined(SchM_Schedulable_Adc_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DeInit_Start
#endif
#if defined(SchM_Schedulable_Adc_DeInit_Start)
#undef SchM_Schedulable_Adc_DeInit_Start
extern void SchM_Schedulable_Adc_DeInit_Start(void);
#else
#define SchM_Schedulable_Adc_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_DeInit_Start */

#if defined(SchM_Schedulable_Adc_DisableCTUTrigger_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableCTUTrigger_Return
#endif
#if defined(SchM_Schedulable_Adc_DisableCTUTrigger_Return)
#undef SchM_Schedulable_Adc_DisableCTUTrigger_Return
extern void SchM_Schedulable_Adc_DisableCTUTrigger_Return(void);
#else
#define SchM_Schedulable_Adc_DisableCTUTrigger_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableCTUTrigger_Return */

#if defined(SchM_Schedulable_Adc_DisableCTUTrigger_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableCTUTrigger_Start
#endif
#if defined(SchM_Schedulable_Adc_DisableCTUTrigger_Start)
#undef SchM_Schedulable_Adc_DisableCTUTrigger_Start
extern void SchM_Schedulable_Adc_DisableCTUTrigger_Start(void);
#else
#define SchM_Schedulable_Adc_DisableCTUTrigger_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableCTUTrigger_Start */

#if defined(SchM_Schedulable_Adc_DisableChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableChannel_Return
#endif
#if defined(SchM_Schedulable_Adc_DisableChannel_Return)
#undef SchM_Schedulable_Adc_DisableChannel_Return
extern void SchM_Schedulable_Adc_DisableChannel_Return(void);
#else
#define SchM_Schedulable_Adc_DisableChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableChannel_Return */

#if defined(SchM_Schedulable_Adc_DisableChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableChannel_Start
#endif
#if defined(SchM_Schedulable_Adc_DisableChannel_Start)
#undef SchM_Schedulable_Adc_DisableChannel_Start
extern void SchM_Schedulable_Adc_DisableChannel_Start(void);
#else
#define SchM_Schedulable_Adc_DisableChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableChannel_Start */

#if defined(SchM_Schedulable_Adc_DisableCtuControlMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableCtuControlMode_Return
#endif
#if defined(SchM_Schedulable_Adc_DisableCtuControlMode_Return)
#undef SchM_Schedulable_Adc_DisableCtuControlMode_Return
extern void SchM_Schedulable_Adc_DisableCtuControlMode_Return(void);
#else
#define SchM_Schedulable_Adc_DisableCtuControlMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableCtuControlMode_Return */

#if defined(SchM_Schedulable_Adc_DisableCtuControlMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableCtuControlMode_Start
#endif
#if defined(SchM_Schedulable_Adc_DisableCtuControlMode_Start)
#undef SchM_Schedulable_Adc_DisableCtuControlMode_Start
extern void SchM_Schedulable_Adc_DisableCtuControlMode_Start(void);
#else
#define SchM_Schedulable_Adc_DisableCtuControlMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableCtuControlMode_Start */

#if defined(SchM_Schedulable_Adc_DisableGroupNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableGroupNotification_Return
#endif
#if defined(SchM_Schedulable_Adc_DisableGroupNotification_Return)
#undef SchM_Schedulable_Adc_DisableGroupNotification_Return
extern void SchM_Schedulable_Adc_DisableGroupNotification_Return(void);
#else
#define SchM_Schedulable_Adc_DisableGroupNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableGroupNotification_Return */

#if defined(SchM_Schedulable_Adc_DisableGroupNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableGroupNotification_Start
#endif
#if defined(SchM_Schedulable_Adc_DisableGroupNotification_Start)
#undef SchM_Schedulable_Adc_DisableGroupNotification_Start
extern void SchM_Schedulable_Adc_DisableGroupNotification_Start(void);
#else
#define SchM_Schedulable_Adc_DisableGroupNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableGroupNotification_Start */

#if defined(SchM_Schedulable_Adc_DisableHardwareTrigger_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableHardwareTrigger_Return
#endif
#if defined(SchM_Schedulable_Adc_DisableHardwareTrigger_Return)
#undef SchM_Schedulable_Adc_DisableHardwareTrigger_Return
extern void SchM_Schedulable_Adc_DisableHardwareTrigger_Return(void);
#else
#define SchM_Schedulable_Adc_DisableHardwareTrigger_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableHardwareTrigger_Return */

#if defined(SchM_Schedulable_Adc_DisableHardwareTrigger_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableHardwareTrigger_Start
#endif
#if defined(SchM_Schedulable_Adc_DisableHardwareTrigger_Start)
#undef SchM_Schedulable_Adc_DisableHardwareTrigger_Start
extern void SchM_Schedulable_Adc_DisableHardwareTrigger_Start(void);
#else
#define SchM_Schedulable_Adc_DisableHardwareTrigger_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableHardwareTrigger_Start */

#if defined(SchM_Schedulable_Adc_DisableWdgNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableWdgNotification_Return
#endif
#if defined(SchM_Schedulable_Adc_DisableWdgNotification_Return)
#undef SchM_Schedulable_Adc_DisableWdgNotification_Return
extern void SchM_Schedulable_Adc_DisableWdgNotification_Return(void);
#else
#define SchM_Schedulable_Adc_DisableWdgNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableWdgNotification_Return */

#if defined(SchM_Schedulable_Adc_DisableWdgNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_DisableWdgNotification_Start
#endif
#if defined(SchM_Schedulable_Adc_DisableWdgNotification_Start)
#undef SchM_Schedulable_Adc_DisableWdgNotification_Start
extern void SchM_Schedulable_Adc_DisableWdgNotification_Start(void);
#else
#define SchM_Schedulable_Adc_DisableWdgNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_DisableWdgNotification_Start */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Return)
#undef SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Return
extern void SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Return */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Start)
#undef SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Start
extern void SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_0_Isr_Start */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Return)
#undef SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Return
extern void SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Return */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Start)
#undef SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Start
extern void SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_1_Isr_Start */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Return)
#undef SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Return
extern void SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Return */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Start)
#undef SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Start
extern void SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_2_Isr_Start */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Return)
#undef SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Return
extern void SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Return */

#if defined(SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Start)
#undef SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Start
extern void SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Dspss_Thread_3_Isr_Start */

#if defined(SchM_Schedulable_Adc_EnableCTUTrigger_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableCTUTrigger_Return
#endif
#if defined(SchM_Schedulable_Adc_EnableCTUTrigger_Return)
#undef SchM_Schedulable_Adc_EnableCTUTrigger_Return
extern void SchM_Schedulable_Adc_EnableCTUTrigger_Return(void);
#else
#define SchM_Schedulable_Adc_EnableCTUTrigger_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableCTUTrigger_Return */

#if defined(SchM_Schedulable_Adc_EnableCTUTrigger_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableCTUTrigger_Start
#endif
#if defined(SchM_Schedulable_Adc_EnableCTUTrigger_Start)
#undef SchM_Schedulable_Adc_EnableCTUTrigger_Start
extern void SchM_Schedulable_Adc_EnableCTUTrigger_Start(void);
#else
#define SchM_Schedulable_Adc_EnableCTUTrigger_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableCTUTrigger_Start */

#if defined(SchM_Schedulable_Adc_EnableChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableChannel_Return
#endif
#if defined(SchM_Schedulable_Adc_EnableChannel_Return)
#undef SchM_Schedulable_Adc_EnableChannel_Return
extern void SchM_Schedulable_Adc_EnableChannel_Return(void);
#else
#define SchM_Schedulable_Adc_EnableChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableChannel_Return */

#if defined(SchM_Schedulable_Adc_EnableChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableChannel_Start
#endif
#if defined(SchM_Schedulable_Adc_EnableChannel_Start)
#undef SchM_Schedulable_Adc_EnableChannel_Start
extern void SchM_Schedulable_Adc_EnableChannel_Start(void);
#else
#define SchM_Schedulable_Adc_EnableChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableChannel_Start */

#if defined(SchM_Schedulable_Adc_EnableCtuControlMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableCtuControlMode_Return
#endif
#if defined(SchM_Schedulable_Adc_EnableCtuControlMode_Return)
#undef SchM_Schedulable_Adc_EnableCtuControlMode_Return
extern void SchM_Schedulable_Adc_EnableCtuControlMode_Return(void);
#else
#define SchM_Schedulable_Adc_EnableCtuControlMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableCtuControlMode_Return */

#if defined(SchM_Schedulable_Adc_EnableCtuControlMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableCtuControlMode_Start
#endif
#if defined(SchM_Schedulable_Adc_EnableCtuControlMode_Start)
#undef SchM_Schedulable_Adc_EnableCtuControlMode_Start
extern void SchM_Schedulable_Adc_EnableCtuControlMode_Start(void);
#else
#define SchM_Schedulable_Adc_EnableCtuControlMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableCtuControlMode_Start */

#if defined(SchM_Schedulable_Adc_EnableGroupNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableGroupNotification_Return
#endif
#if defined(SchM_Schedulable_Adc_EnableGroupNotification_Return)
#undef SchM_Schedulable_Adc_EnableGroupNotification_Return
extern void SchM_Schedulable_Adc_EnableGroupNotification_Return(void);
#else
#define SchM_Schedulable_Adc_EnableGroupNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableGroupNotification_Return */

#if defined(SchM_Schedulable_Adc_EnableGroupNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableGroupNotification_Start
#endif
#if defined(SchM_Schedulable_Adc_EnableGroupNotification_Start)
#undef SchM_Schedulable_Adc_EnableGroupNotification_Start
extern void SchM_Schedulable_Adc_EnableGroupNotification_Start(void);
#else
#define SchM_Schedulable_Adc_EnableGroupNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableGroupNotification_Start */

#if defined(SchM_Schedulable_Adc_EnableHardwareTrigger_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableHardwareTrigger_Return
#endif
#if defined(SchM_Schedulable_Adc_EnableHardwareTrigger_Return)
#undef SchM_Schedulable_Adc_EnableHardwareTrigger_Return
extern void SchM_Schedulable_Adc_EnableHardwareTrigger_Return(void);
#else
#define SchM_Schedulable_Adc_EnableHardwareTrigger_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableHardwareTrigger_Return */

#if defined(SchM_Schedulable_Adc_EnableHardwareTrigger_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableHardwareTrigger_Start
#endif
#if defined(SchM_Schedulable_Adc_EnableHardwareTrigger_Start)
#undef SchM_Schedulable_Adc_EnableHardwareTrigger_Start
extern void SchM_Schedulable_Adc_EnableHardwareTrigger_Start(void);
#else
#define SchM_Schedulable_Adc_EnableHardwareTrigger_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableHardwareTrigger_Start */

#if defined(SchM_Schedulable_Adc_EnableWdgNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableWdgNotification_Return
#endif
#if defined(SchM_Schedulable_Adc_EnableWdgNotification_Return)
#undef SchM_Schedulable_Adc_EnableWdgNotification_Return
extern void SchM_Schedulable_Adc_EnableWdgNotification_Return(void);
#else
#define SchM_Schedulable_Adc_EnableWdgNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableWdgNotification_Return */

#if defined(SchM_Schedulable_Adc_EnableWdgNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_EnableWdgNotification_Start
#endif
#if defined(SchM_Schedulable_Adc_EnableWdgNotification_Start)
#undef SchM_Schedulable_Adc_EnableWdgNotification_Start
extern void SchM_Schedulable_Adc_EnableWdgNotification_Start(void);
#else
#define SchM_Schedulable_Adc_EnableWdgNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_EnableWdgNotification_Start */

#if defined(SchM_Schedulable_Adc_GetCurrentPowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetCurrentPowerState_Return
#endif
#if defined(SchM_Schedulable_Adc_GetCurrentPowerState_Return)
#undef SchM_Schedulable_Adc_GetCurrentPowerState_Return
extern void SchM_Schedulable_Adc_GetCurrentPowerState_Return(void);
#else
#define SchM_Schedulable_Adc_GetCurrentPowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetCurrentPowerState_Return */

#if defined(SchM_Schedulable_Adc_GetCurrentPowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetCurrentPowerState_Start
#endif
#if defined(SchM_Schedulable_Adc_GetCurrentPowerState_Start)
#undef SchM_Schedulable_Adc_GetCurrentPowerState_Start
extern void SchM_Schedulable_Adc_GetCurrentPowerState_Start(void);
#else
#define SchM_Schedulable_Adc_GetCurrentPowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetCurrentPowerState_Start */

#if defined(SchM_Schedulable_Adc_GetGroupStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetGroupStatus_Return
#endif
#if defined(SchM_Schedulable_Adc_GetGroupStatus_Return)
#undef SchM_Schedulable_Adc_GetGroupStatus_Return
extern void SchM_Schedulable_Adc_GetGroupStatus_Return(void);
#else
#define SchM_Schedulable_Adc_GetGroupStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetGroupStatus_Return */

#if defined(SchM_Schedulable_Adc_GetGroupStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetGroupStatus_Start
#endif
#if defined(SchM_Schedulable_Adc_GetGroupStatus_Start)
#undef SchM_Schedulable_Adc_GetGroupStatus_Start
extern void SchM_Schedulable_Adc_GetGroupStatus_Start(void);
#else
#define SchM_Schedulable_Adc_GetGroupStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetGroupStatus_Start */

#if defined(SchM_Schedulable_Adc_GetInjectedConversionStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetInjectedConversionStatus_Return
#endif
#if defined(SchM_Schedulable_Adc_GetInjectedConversionStatus_Return)
#undef SchM_Schedulable_Adc_GetInjectedConversionStatus_Return
extern void SchM_Schedulable_Adc_GetInjectedConversionStatus_Return(void);
#else
#define SchM_Schedulable_Adc_GetInjectedConversionStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetInjectedConversionStatus_Return */

#if defined(SchM_Schedulable_Adc_GetInjectedConversionStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetInjectedConversionStatus_Start
#endif
#if defined(SchM_Schedulable_Adc_GetInjectedConversionStatus_Start)
#undef SchM_Schedulable_Adc_GetInjectedConversionStatus_Start
extern void SchM_Schedulable_Adc_GetInjectedConversionStatus_Start(void);
#else
#define SchM_Schedulable_Adc_GetInjectedConversionStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetInjectedConversionStatus_Start */

#if defined(SchM_Schedulable_Adc_GetStreamLastPointer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetStreamLastPointer_Return
#endif
#if defined(SchM_Schedulable_Adc_GetStreamLastPointer_Return)
#undef SchM_Schedulable_Adc_GetStreamLastPointer_Return
extern void SchM_Schedulable_Adc_GetStreamLastPointer_Return(void);
#else
#define SchM_Schedulable_Adc_GetStreamLastPointer_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetStreamLastPointer_Return */

#if defined(SchM_Schedulable_Adc_GetStreamLastPointer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetStreamLastPointer_Start
#endif
#if defined(SchM_Schedulable_Adc_GetStreamLastPointer_Start)
#undef SchM_Schedulable_Adc_GetStreamLastPointer_Start
extern void SchM_Schedulable_Adc_GetStreamLastPointer_Start(void);
#else
#define SchM_Schedulable_Adc_GetStreamLastPointer_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetStreamLastPointer_Start */

#if defined(SchM_Schedulable_Adc_GetTargetPowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetTargetPowerState_Return
#endif
#if defined(SchM_Schedulable_Adc_GetTargetPowerState_Return)
#undef SchM_Schedulable_Adc_GetTargetPowerState_Return
extern void SchM_Schedulable_Adc_GetTargetPowerState_Return(void);
#else
#define SchM_Schedulable_Adc_GetTargetPowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetTargetPowerState_Return */

#if defined(SchM_Schedulable_Adc_GetTargetPowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetTargetPowerState_Start
#endif
#if defined(SchM_Schedulable_Adc_GetTargetPowerState_Start)
#undef SchM_Schedulable_Adc_GetTargetPowerState_Start
extern void SchM_Schedulable_Adc_GetTargetPowerState_Start(void);
#else
#define SchM_Schedulable_Adc_GetTargetPowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetTargetPowerState_Start */

#if defined(SchM_Schedulable_Adc_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Adc_GetVersionInfo_Return)
#undef SchM_Schedulable_Adc_GetVersionInfo_Return
extern void SchM_Schedulable_Adc_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Adc_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Adc_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Adc_GetVersionInfo_Start)
#undef SchM_Schedulable_Adc_GetVersionInfo_Start
extern void SchM_Schedulable_Adc_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Adc_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Adc_HwResultReadGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_HwResultReadGroup_Return
#endif
#if defined(SchM_Schedulable_Adc_HwResultReadGroup_Return)
#undef SchM_Schedulable_Adc_HwResultReadGroup_Return
extern void SchM_Schedulable_Adc_HwResultReadGroup_Return(void);
#else
#define SchM_Schedulable_Adc_HwResultReadGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_HwResultReadGroup_Return */

#if defined(SchM_Schedulable_Adc_HwResultReadGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_HwResultReadGroup_Start
#endif
#if defined(SchM_Schedulable_Adc_HwResultReadGroup_Start)
#undef SchM_Schedulable_Adc_HwResultReadGroup_Start
extern void SchM_Schedulable_Adc_HwResultReadGroup_Start(void);
#else
#define SchM_Schedulable_Adc_HwResultReadGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_HwResultReadGroup_Start */

#if defined(SchM_Schedulable_Adc_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Init_Return
#endif
#if defined(SchM_Schedulable_Adc_Init_Return)
#undef SchM_Schedulable_Adc_Init_Return
extern void SchM_Schedulable_Adc_Init_Return(void);
#else
#define SchM_Schedulable_Adc_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Init_Return */

#if defined(SchM_Schedulable_Adc_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Init_Start
#endif
#if defined(SchM_Schedulable_Adc_Init_Start)
#undef SchM_Schedulable_Adc_Init_Start
extern void SchM_Schedulable_Adc_Init_Start(void);
#else
#define SchM_Schedulable_Adc_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Init_Start */

#if defined(SchM_Schedulable_Adc_Main_PowerTransitionManager_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Main_PowerTransitionManager_Return
#endif
#if defined(SchM_Schedulable_Adc_Main_PowerTransitionManager_Return)
#undef SchM_Schedulable_Adc_Main_PowerTransitionManager_Return
extern void SchM_Schedulable_Adc_Main_PowerTransitionManager_Return(void);
#else
#define SchM_Schedulable_Adc_Main_PowerTransitionManager_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Main_PowerTransitionManager_Return */

#if defined(SchM_Schedulable_Adc_Main_PowerTransitionManager_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Main_PowerTransitionManager_Start
#endif
#if defined(SchM_Schedulable_Adc_Main_PowerTransitionManager_Start)
#undef SchM_Schedulable_Adc_Main_PowerTransitionManager_Start
extern void SchM_Schedulable_Adc_Main_PowerTransitionManager_Start(void);
#else
#define SchM_Schedulable_Adc_Main_PowerTransitionManager_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Main_PowerTransitionManager_Start */

#if defined(SchM_Schedulable_Adc_PreparePowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_PreparePowerState_Return
#endif
#if defined(SchM_Schedulable_Adc_PreparePowerState_Return)
#undef SchM_Schedulable_Adc_PreparePowerState_Return
extern void SchM_Schedulable_Adc_PreparePowerState_Return(void);
#else
#define SchM_Schedulable_Adc_PreparePowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_PreparePowerState_Return */

#if defined(SchM_Schedulable_Adc_PreparePowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_PreparePowerState_Start
#endif
#if defined(SchM_Schedulable_Adc_PreparePowerState_Start)
#undef SchM_Schedulable_Adc_PreparePowerState_Start
extern void SchM_Schedulable_Adc_PreparePowerState_Start(void);
#else
#define SchM_Schedulable_Adc_PreparePowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_PreparePowerState_Start */

#if defined(SchM_Schedulable_Adc_ReadGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ReadGroup_Return
#endif
#if defined(SchM_Schedulable_Adc_ReadGroup_Return)
#undef SchM_Schedulable_Adc_ReadGroup_Return
extern void SchM_Schedulable_Adc_ReadGroup_Return(void);
#else
#define SchM_Schedulable_Adc_ReadGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_ReadGroup_Return */

#if defined(SchM_Schedulable_Adc_ReadGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ReadGroup_Start
#endif
#if defined(SchM_Schedulable_Adc_ReadGroup_Start)
#undef SchM_Schedulable_Adc_ReadGroup_Start
extern void SchM_Schedulable_Adc_ReadGroup_Start(void);
#else
#define SchM_Schedulable_Adc_ReadGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_ReadGroup_Start */

#if defined(SchM_Schedulable_Adc_ReadRawData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ReadRawData_Return
#endif
#if defined(SchM_Schedulable_Adc_ReadRawData_Return)
#undef SchM_Schedulable_Adc_ReadRawData_Return
extern void SchM_Schedulable_Adc_ReadRawData_Return(void);
#else
#define SchM_Schedulable_Adc_ReadRawData_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_ReadRawData_Return */

#if defined(SchM_Schedulable_Adc_ReadRawData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_ReadRawData_Start
#endif
#if defined(SchM_Schedulable_Adc_ReadRawData_Start)
#undef SchM_Schedulable_Adc_ReadRawData_Start
extern void SchM_Schedulable_Adc_ReadRawData_Start(void);
#else
#define SchM_Schedulable_Adc_ReadRawData_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_ReadRawData_Start */

#if defined(SchM_Schedulable_Adc_Sar_0_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_0_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_0_Isr_Return)
#undef SchM_Schedulable_Adc_Sar_0_Isr_Return
extern void SchM_Schedulable_Adc_Sar_0_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_0_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_0_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sar_0_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_0_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_0_Isr_Start)
#undef SchM_Schedulable_Adc_Sar_0_Isr_Start
extern void SchM_Schedulable_Adc_Sar_0_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_0_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_0_Isr_Start */

#if defined(SchM_Schedulable_Adc_Sar_1_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_1_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_1_Isr_Return)
#undef SchM_Schedulable_Adc_Sar_1_Isr_Return
extern void SchM_Schedulable_Adc_Sar_1_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_1_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_1_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sar_1_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_1_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_1_Isr_Start)
#undef SchM_Schedulable_Adc_Sar_1_Isr_Start
extern void SchM_Schedulable_Adc_Sar_1_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_1_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_1_Isr_Start */

#if defined(SchM_Schedulable_Adc_Sar_2_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_2_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_2_Isr_Return)
#undef SchM_Schedulable_Adc_Sar_2_Isr_Return
extern void SchM_Schedulable_Adc_Sar_2_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_2_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_2_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sar_2_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_2_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_2_Isr_Start)
#undef SchM_Schedulable_Adc_Sar_2_Isr_Start
extern void SchM_Schedulable_Adc_Sar_2_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_2_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_2_Isr_Start */

#if defined(SchM_Schedulable_Adc_Sar_3_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_3_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_3_Isr_Return)
#undef SchM_Schedulable_Adc_Sar_3_Isr_Return
extern void SchM_Schedulable_Adc_Sar_3_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_3_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_3_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sar_3_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_3_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_3_Isr_Start)
#undef SchM_Schedulable_Adc_Sar_3_Isr_Start
extern void SchM_Schedulable_Adc_Sar_3_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_3_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_3_Isr_Start */

#if defined(SchM_Schedulable_Adc_Sar_4_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_4_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_4_Isr_Return)
#undef SchM_Schedulable_Adc_Sar_4_Isr_Return
extern void SchM_Schedulable_Adc_Sar_4_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_4_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_4_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sar_4_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_4_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_4_Isr_Start)
#undef SchM_Schedulable_Adc_Sar_4_Isr_Start
extern void SchM_Schedulable_Adc_Sar_4_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_4_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_4_Isr_Start */

#if defined(SchM_Schedulable_Adc_Sar_5_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_5_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_5_Isr_Return)
#undef SchM_Schedulable_Adc_Sar_5_Isr_Return
extern void SchM_Schedulable_Adc_Sar_5_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_5_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_5_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sar_5_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_5_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_5_Isr_Start)
#undef SchM_Schedulable_Adc_Sar_5_Isr_Start
extern void SchM_Schedulable_Adc_Sar_5_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_5_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_5_Isr_Start */

#if defined(SchM_Schedulable_Adc_Sar_6_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_6_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_6_Isr_Return)
#undef SchM_Schedulable_Adc_Sar_6_Isr_Return
extern void SchM_Schedulable_Adc_Sar_6_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_6_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_6_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sar_6_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_6_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_6_Isr_Start)
#undef SchM_Schedulable_Adc_Sar_6_Isr_Start
extern void SchM_Schedulable_Adc_Sar_6_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_6_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_6_Isr_Start */

#if defined(SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Return)
#undef SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Return
extern void SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Return */

#if defined(SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Start)
#undef SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Start
extern void SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_AbortConversion_Start */

#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Return)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Return
extern void SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Return */

#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Start)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Start
extern void SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_DisableChannelPresampling_Start */

#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Return)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Return
extern void SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Return */

#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Start)
#undef SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Start
extern void SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_DisableChannel_Start */

#if defined(SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Return)
#undef SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Return
extern void SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Return */

#if defined(SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Start)
#undef SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Start
extern void SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_DisablePresampleConversion_Start */

#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Return)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Return
extern void SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Return */

#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Start)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Start
extern void SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_EnableChannelPresampling_Start */

#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Return)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Return
extern void SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Return */

#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Start)
#undef SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Start
extern void SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_EnableChannel_Start */

#if defined(SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Return
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Return)
#undef SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Return
extern void SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Return(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Return */

#if defined(SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Start
#endif
#if defined(SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Start)
#undef SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Start
extern void SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Start(void);
#else
#define SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sar_Ip_EnablePresampleConversion_Start */

#if defined(SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Return
#endif
#if defined(SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Return)
#undef SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Return
extern void SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Return(void);
#else
#define SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Return */

#if defined(SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Start
#endif
#if defined(SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Start)
#undef SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Start
extern void SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Start(void);
#else
#define SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sdadc_Ip_DisableWraparound_Start */

#if defined(SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Return
#endif
#if defined(SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Return)
#undef SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Return
extern void SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Return(void);
#else
#define SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Return */

#if defined(SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Start
#endif
#if defined(SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Start)
#undef SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Start
extern void SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Start(void);
#else
#define SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sdadc_Ip_EnableWraparound_Start */

#if defined(SchM_Schedulable_Adc_Sdadc_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sdadc_Isr_Return
#endif
#if defined(SchM_Schedulable_Adc_Sdadc_Isr_Return)
#undef SchM_Schedulable_Adc_Sdadc_Isr_Return
extern void SchM_Schedulable_Adc_Sdadc_Isr_Return(void);
#else
#define SchM_Schedulable_Adc_Sdadc_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sdadc_Isr_Return */

#if defined(SchM_Schedulable_Adc_Sdadc_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_Sdadc_Isr_Start
#endif
#if defined(SchM_Schedulable_Adc_Sdadc_Isr_Start)
#undef SchM_Schedulable_Adc_Sdadc_Isr_Start
extern void SchM_Schedulable_Adc_Sdadc_Isr_Start(void);
#else
#define SchM_Schedulable_Adc_Sdadc_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_Sdadc_Isr_Start */

#if defined(SchM_Schedulable_Adc_SelfTest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SelfTest_Return
#endif
#if defined(SchM_Schedulable_Adc_SelfTest_Return)
#undef SchM_Schedulable_Adc_SelfTest_Return
extern void SchM_Schedulable_Adc_SelfTest_Return(void);
#else
#define SchM_Schedulable_Adc_SelfTest_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_SelfTest_Return */

#if defined(SchM_Schedulable_Adc_SelfTest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SelfTest_Start
#endif
#if defined(SchM_Schedulable_Adc_SelfTest_Start)
#undef SchM_Schedulable_Adc_SelfTest_Start
extern void SchM_Schedulable_Adc_SelfTest_Start(void);
#else
#define SchM_Schedulable_Adc_SelfTest_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_SelfTest_Start */

#if defined(SchM_Schedulable_Adc_SetChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetChannel_Return
#endif
#if defined(SchM_Schedulable_Adc_SetChannel_Return)
#undef SchM_Schedulable_Adc_SetChannel_Return
extern void SchM_Schedulable_Adc_SetChannel_Return(void);
#else
#define SchM_Schedulable_Adc_SetChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetChannel_Return */

#if defined(SchM_Schedulable_Adc_SetChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetChannel_Start
#endif
#if defined(SchM_Schedulable_Adc_SetChannel_Start)
#undef SchM_Schedulable_Adc_SetChannel_Start
extern void SchM_Schedulable_Adc_SetChannel_Start(void);
#else
#define SchM_Schedulable_Adc_SetChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetChannel_Start */

#if defined(SchM_Schedulable_Adc_SetClockMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetClockMode_Return
#endif
#if defined(SchM_Schedulable_Adc_SetClockMode_Return)
#undef SchM_Schedulable_Adc_SetClockMode_Return
extern void SchM_Schedulable_Adc_SetClockMode_Return(void);
#else
#define SchM_Schedulable_Adc_SetClockMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetClockMode_Return */

#if defined(SchM_Schedulable_Adc_SetClockMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetClockMode_Start
#endif
#if defined(SchM_Schedulable_Adc_SetClockMode_Start)
#undef SchM_Schedulable_Adc_SetClockMode_Start
extern void SchM_Schedulable_Adc_SetClockMode_Start(void);
#else
#define SchM_Schedulable_Adc_SetClockMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetClockMode_Start */

#if defined(SchM_Schedulable_Adc_SetHwUnitPowerMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetHwUnitPowerMode_Return
#endif
#if defined(SchM_Schedulable_Adc_SetHwUnitPowerMode_Return)
#undef SchM_Schedulable_Adc_SetHwUnitPowerMode_Return
extern void SchM_Schedulable_Adc_SetHwUnitPowerMode_Return(void);
#else
#define SchM_Schedulable_Adc_SetHwUnitPowerMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetHwUnitPowerMode_Return */

#if defined(SchM_Schedulable_Adc_SetHwUnitPowerMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetHwUnitPowerMode_Start
#endif
#if defined(SchM_Schedulable_Adc_SetHwUnitPowerMode_Start)
#undef SchM_Schedulable_Adc_SetHwUnitPowerMode_Start
extern void SchM_Schedulable_Adc_SetHwUnitPowerMode_Start(void);
#else
#define SchM_Schedulable_Adc_SetHwUnitPowerMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetHwUnitPowerMode_Start */

#if defined(SchM_Schedulable_Adc_SetPowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetPowerState_Return
#endif
#if defined(SchM_Schedulable_Adc_SetPowerState_Return)
#undef SchM_Schedulable_Adc_SetPowerState_Return
extern void SchM_Schedulable_Adc_SetPowerState_Return(void);
#else
#define SchM_Schedulable_Adc_SetPowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetPowerState_Return */

#if defined(SchM_Schedulable_Adc_SetPowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetPowerState_Start
#endif
#if defined(SchM_Schedulable_Adc_SetPowerState_Start)
#undef SchM_Schedulable_Adc_SetPowerState_Start
extern void SchM_Schedulable_Adc_SetPowerState_Start(void);
#else
#define SchM_Schedulable_Adc_SetPowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetPowerState_Start */

#if defined(SchM_Schedulable_Adc_SetupResultBuffer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetupResultBuffer_Return
#endif
#if defined(SchM_Schedulable_Adc_SetupResultBuffer_Return)
#undef SchM_Schedulable_Adc_SetupResultBuffer_Return
extern void SchM_Schedulable_Adc_SetupResultBuffer_Return(void);
#else
#define SchM_Schedulable_Adc_SetupResultBuffer_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetupResultBuffer_Return */

#if defined(SchM_Schedulable_Adc_SetupResultBuffer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_SetupResultBuffer_Start
#endif
#if defined(SchM_Schedulable_Adc_SetupResultBuffer_Start)
#undef SchM_Schedulable_Adc_SetupResultBuffer_Start
extern void SchM_Schedulable_Adc_SetupResultBuffer_Start(void);
#else
#define SchM_Schedulable_Adc_SetupResultBuffer_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_SetupResultBuffer_Start */

#if defined(SchM_Schedulable_Adc_StartGroupConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_StartGroupConversion_Return
#endif
#if defined(SchM_Schedulable_Adc_StartGroupConversion_Return)
#undef SchM_Schedulable_Adc_StartGroupConversion_Return
extern void SchM_Schedulable_Adc_StartGroupConversion_Return(void);
#else
#define SchM_Schedulable_Adc_StartGroupConversion_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_StartGroupConversion_Return */

#if defined(SchM_Schedulable_Adc_StartGroupConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_StartGroupConversion_Start
#endif
#if defined(SchM_Schedulable_Adc_StartGroupConversion_Start)
#undef SchM_Schedulable_Adc_StartGroupConversion_Start
extern void SchM_Schedulable_Adc_StartGroupConversion_Start(void);
#else
#define SchM_Schedulable_Adc_StartGroupConversion_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_StartGroupConversion_Start */

#if defined(SchM_Schedulable_Adc_StopGroupConversion_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_StopGroupConversion_Return
#endif
#if defined(SchM_Schedulable_Adc_StopGroupConversion_Return)
#undef SchM_Schedulable_Adc_StopGroupConversion_Return
extern void SchM_Schedulable_Adc_StopGroupConversion_Return(void);
#else
#define SchM_Schedulable_Adc_StopGroupConversion_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_StopGroupConversion_Return */

#if defined(SchM_Schedulable_Adc_StopGroupConversion_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_StopGroupConversion_Start
#endif
#if defined(SchM_Schedulable_Adc_StopGroupConversion_Start)
#undef SchM_Schedulable_Adc_StopGroupConversion_Start
extern void SchM_Schedulable_Adc_StopGroupConversion_Start(void);
#else
#define SchM_Schedulable_Adc_StopGroupConversion_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_StopGroupConversion_Start */

#if defined(SchM_Schedulable_Adc_TempSenseCalculateTemp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_TempSenseCalculateTemp_Return
#endif
#if defined(SchM_Schedulable_Adc_TempSenseCalculateTemp_Return)
#undef SchM_Schedulable_Adc_TempSenseCalculateTemp_Return
extern void SchM_Schedulable_Adc_TempSenseCalculateTemp_Return(void);
#else
#define SchM_Schedulable_Adc_TempSenseCalculateTemp_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_TempSenseCalculateTemp_Return */

#if defined(SchM_Schedulable_Adc_TempSenseCalculateTemp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_TempSenseCalculateTemp_Start
#endif
#if defined(SchM_Schedulable_Adc_TempSenseCalculateTemp_Start)
#undef SchM_Schedulable_Adc_TempSenseCalculateTemp_Start
extern void SchM_Schedulable_Adc_TempSenseCalculateTemp_Start(void);
#else
#define SchM_Schedulable_Adc_TempSenseCalculateTemp_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_TempSenseCalculateTemp_Start */

#if defined(SchM_Schedulable_Adc_TempSenseGetTemp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_TempSenseGetTemp_Return
#endif
#if defined(SchM_Schedulable_Adc_TempSenseGetTemp_Return)
#undef SchM_Schedulable_Adc_TempSenseGetTemp_Return
extern void SchM_Schedulable_Adc_TempSenseGetTemp_Return(void);
#else
#define SchM_Schedulable_Adc_TempSenseGetTemp_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_TempSenseGetTemp_Return */

#if defined(SchM_Schedulable_Adc_TempSenseGetTemp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_TempSenseGetTemp_Start
#endif
#if defined(SchM_Schedulable_Adc_TempSenseGetTemp_Start)
#undef SchM_Schedulable_Adc_TempSenseGetTemp_Start
extern void SchM_Schedulable_Adc_TempSenseGetTemp_Start(void);
#else
#define SchM_Schedulable_Adc_TempSenseGetTemp_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_TempSenseGetTemp_Start */

#if defined(SchM_Schedulable_Adc_TempSenseSetPowerMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_TempSenseSetPowerMode_Return
#endif
#if defined(SchM_Schedulable_Adc_TempSenseSetPowerMode_Return)
#undef SchM_Schedulable_Adc_TempSenseSetPowerMode_Return
extern void SchM_Schedulable_Adc_TempSenseSetPowerMode_Return(void);
#else
#define SchM_Schedulable_Adc_TempSenseSetPowerMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Adc_TempSenseSetPowerMode_Return */

#if defined(SchM_Schedulable_Adc_TempSenseSetPowerMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Adc_TempSenseSetPowerMode_Start
#endif
#if defined(SchM_Schedulable_Adc_TempSenseSetPowerMode_Start)
#undef SchM_Schedulable_Adc_TempSenseSetPowerMode_Start
extern void SchM_Schedulable_Adc_TempSenseSetPowerMode_Start(void);
#else
#define SchM_Schedulable_Adc_TempSenseSetPowerMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Adc_TempSenseSetPowerMode_Start */

#if defined(SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Return
#endif
#if defined(SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Return)
#undef SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Return
extern void SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Return(void);
#else
#define SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Return() ((void)(0))
#endif /* SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Return */

#if defined(SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Start
#endif
#if defined(SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Start)
#undef SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Start
extern void SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Start(void);
#else
#define SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Start() ((void)(0))
#endif /* SchM_Schedulable_BswM_ActionList_SchMSwitch_CurrentMode_Start */

#if defined(SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Return
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Return)
#undef SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Return
extern void SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Return(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Return() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Return */

#if defined(SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Start
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Start)
#undef SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Start
extern void SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Start(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Start() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmCommunicationControl_FD_CAN1_Start */

#if defined(SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Return
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Return)
#undef SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Return
extern void SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Return(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Return() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Return */

#if defined(SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Start
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Start)
#undef SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Start
extern void SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Start(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Start() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmControlDTCSetting_Start */

#if defined(SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Return
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Return)
#undef SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Return
extern void SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Return(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Return() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Return */

#if defined(SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Start
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Start)
#undef SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Start
extern void SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Start(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Start() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmDiagnosticSessionControl_Start */

#if defined(SchM_Schedulable_BswM_Immediate_DcmEcuReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmEcuReset_Return
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmEcuReset_Return)
#undef SchM_Schedulable_BswM_Immediate_DcmEcuReset_Return
extern void SchM_Schedulable_BswM_Immediate_DcmEcuReset_Return(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmEcuReset_Return() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmEcuReset_Return */

#if defined(SchM_Schedulable_BswM_Immediate_DcmEcuReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmEcuReset_Start
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmEcuReset_Start)
#undef SchM_Schedulable_BswM_Immediate_DcmEcuReset_Start
extern void SchM_Schedulable_BswM_Immediate_DcmEcuReset_Start(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmEcuReset_Start() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmEcuReset_Start */

#if defined(SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Return
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Return)
#undef SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Return
extern void SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Return(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Return() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Return */

#if defined(SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Start
#endif
#if defined(SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Start)
#undef SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Start
extern void SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Start(void);
#else
#define SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Start() ((void)(0))
#endif /* SchM_Schedulable_BswM_Immediate_DcmModeRapidPowerShutDown_Start */

#if defined(SchM_Schedulable_BswM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_BswM_MainFunction_Return)
#undef SchM_Schedulable_BswM_MainFunction_Return
extern void SchM_Schedulable_BswM_MainFunction_Return(void);
#else
#define SchM_Schedulable_BswM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_BswM_MainFunction_Return */

#if defined(SchM_Schedulable_BswM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_BswM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_BswM_MainFunction_Start)
#undef SchM_Schedulable_BswM_MainFunction_Start
extern void SchM_Schedulable_BswM_MainFunction_Start(void);
#else
#define SchM_Schedulable_BswM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_BswM_MainFunction_Start */

#if defined(SchM_Schedulable_CanCM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanCM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_CanCM_MainFunction_Return)
#undef SchM_Schedulable_CanCM_MainFunction_Return
extern void SchM_Schedulable_CanCM_MainFunction_Return(void);
#else
#define SchM_Schedulable_CanCM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_CanCM_MainFunction_Return */

#if defined(SchM_Schedulable_CanCM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanCM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_CanCM_MainFunction_Start)
#undef SchM_Schedulable_CanCM_MainFunction_Start
extern void SchM_Schedulable_CanCM_MainFunction_Start(void);
#else
#define SchM_Schedulable_CanCM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_CanCM_MainFunction_Start */

#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Return
#endif
#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Return)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Return
extern void SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Return(void);
#else
#define SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Return */

#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Start
#endif
#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Start)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Start
extern void SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Start(void);
#else
#define SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_CheckTrcvWakeFlagIndication_Start */

#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Return
#endif
#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Return)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Return
extern void SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Return(void);
#else
#define SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Return */

#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Start
#endif
#if defined(SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Start)
#undef SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Start
extern void SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Start(void);
#else
#define SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_CheckTrcvWakeFlag_Start */

#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Return
#endif
#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Return)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Return
extern void SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Return(void);
#else
#define SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Return */

#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Start
#endif
#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Start)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Start
extern void SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Start(void);
#else
#define SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ClearTrcvWufFlagIndication_Start */

#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlag_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlag_Return
#endif
#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlag_Return)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlag_Return
extern void SchM_Schedulable_CanIf_ClearTrcvWufFlag_Return(void);
#else
#define SchM_Schedulable_CanIf_ClearTrcvWufFlag_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ClearTrcvWufFlag_Return */

#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlag_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlag_Start
#endif
#if defined(SchM_Schedulable_CanIf_ClearTrcvWufFlag_Start)
#undef SchM_Schedulable_CanIf_ClearTrcvWufFlag_Start
extern void SchM_Schedulable_CanIf_ClearTrcvWufFlag_Start(void);
#else
#define SchM_Schedulable_CanIf_ClearTrcvWufFlag_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ClearTrcvWufFlag_Start */

#if defined(SchM_Schedulable_CanIf_ConfirmPnAvailability_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ConfirmPnAvailability_Return
#endif
#if defined(SchM_Schedulable_CanIf_ConfirmPnAvailability_Return)
#undef SchM_Schedulable_CanIf_ConfirmPnAvailability_Return
extern void SchM_Schedulable_CanIf_ConfirmPnAvailability_Return(void);
#else
#define SchM_Schedulable_CanIf_ConfirmPnAvailability_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ConfirmPnAvailability_Return */

#if defined(SchM_Schedulable_CanIf_ConfirmPnAvailability_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ConfirmPnAvailability_Start
#endif
#if defined(SchM_Schedulable_CanIf_ConfirmPnAvailability_Start)
#undef SchM_Schedulable_CanIf_ConfirmPnAvailability_Start
extern void SchM_Schedulable_CanIf_ConfirmPnAvailability_Start(void);
#else
#define SchM_Schedulable_CanIf_ConfirmPnAvailability_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ConfirmPnAvailability_Start */

#if defined(SchM_Schedulable_CanIf_ControllerBusOff_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ControllerBusOff_Return
#endif
#if defined(SchM_Schedulable_CanIf_ControllerBusOff_Return)
#undef SchM_Schedulable_CanIf_ControllerBusOff_Return
extern void SchM_Schedulable_CanIf_ControllerBusOff_Return(void);
#else
#define SchM_Schedulable_CanIf_ControllerBusOff_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ControllerBusOff_Return */

#if defined(SchM_Schedulable_CanIf_ControllerBusOff_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ControllerBusOff_Start
#endif
#if defined(SchM_Schedulable_CanIf_ControllerBusOff_Start)
#undef SchM_Schedulable_CanIf_ControllerBusOff_Start
extern void SchM_Schedulable_CanIf_ControllerBusOff_Start(void);
#else
#define SchM_Schedulable_CanIf_ControllerBusOff_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ControllerBusOff_Start */

#if defined(SchM_Schedulable_CanIf_ControllerModeIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ControllerModeIndication_Return
#endif
#if defined(SchM_Schedulable_CanIf_ControllerModeIndication_Return)
#undef SchM_Schedulable_CanIf_ControllerModeIndication_Return
extern void SchM_Schedulable_CanIf_ControllerModeIndication_Return(void);
#else
#define SchM_Schedulable_CanIf_ControllerModeIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ControllerModeIndication_Return */

#if defined(SchM_Schedulable_CanIf_ControllerModeIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_ControllerModeIndication_Start
#endif
#if defined(SchM_Schedulable_CanIf_ControllerModeIndication_Start)
#undef SchM_Schedulable_CanIf_ControllerModeIndication_Start
extern void SchM_Schedulable_CanIf_ControllerModeIndication_Start(void);
#else
#define SchM_Schedulable_CanIf_ControllerModeIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_ControllerModeIndication_Start */

#if defined(SchM_Schedulable_CanIf_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_DeInit_Return
#endif
#if defined(SchM_Schedulable_CanIf_DeInit_Return)
#undef SchM_Schedulable_CanIf_DeInit_Return
extern void SchM_Schedulable_CanIf_DeInit_Return(void);
#else
#define SchM_Schedulable_CanIf_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_DeInit_Return */

#if defined(SchM_Schedulable_CanIf_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_DeInit_Start
#endif
#if defined(SchM_Schedulable_CanIf_DeInit_Start)
#undef SchM_Schedulable_CanIf_DeInit_Start
extern void SchM_Schedulable_CanIf_DeInit_Start(void);
#else
#define SchM_Schedulable_CanIf_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_DeInit_Start */

#if defined(SchM_Schedulable_CanIf_GetControllerErrorState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerErrorState_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerErrorState_Return)
#undef SchM_Schedulable_CanIf_GetControllerErrorState_Return
extern void SchM_Schedulable_CanIf_GetControllerErrorState_Return(void);
#else
#define SchM_Schedulable_CanIf_GetControllerErrorState_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerErrorState_Return */

#if defined(SchM_Schedulable_CanIf_GetControllerErrorState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerErrorState_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerErrorState_Start)
#undef SchM_Schedulable_CanIf_GetControllerErrorState_Start
extern void SchM_Schedulable_CanIf_GetControllerErrorState_Start(void);
#else
#define SchM_Schedulable_CanIf_GetControllerErrorState_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerErrorState_Start */

#if defined(SchM_Schedulable_CanIf_GetControllerMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerMode_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerMode_Return)
#undef SchM_Schedulable_CanIf_GetControllerMode_Return
extern void SchM_Schedulable_CanIf_GetControllerMode_Return(void);
#else
#define SchM_Schedulable_CanIf_GetControllerMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerMode_Return */

#if defined(SchM_Schedulable_CanIf_GetControllerMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerMode_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerMode_Start)
#undef SchM_Schedulable_CanIf_GetControllerMode_Start
extern void SchM_Schedulable_CanIf_GetControllerMode_Start(void);
#else
#define SchM_Schedulable_CanIf_GetControllerMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerMode_Start */

#if defined(SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Return)
#undef SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Return
extern void SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Return(void);
#else
#define SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Return */

#if defined(SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Start)
#undef SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Start
extern void SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Start(void);
#else
#define SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerRxErrorCounter_Start */

#if defined(SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Return)
#undef SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Return
extern void SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Return(void);
#else
#define SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Return */

#if defined(SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Start)
#undef SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Start
extern void SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Start(void);
#else
#define SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetControllerTxErrorCounter_Start */

#if defined(SchM_Schedulable_CanIf_GetPduMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetPduMode_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetPduMode_Return)
#undef SchM_Schedulable_CanIf_GetPduMode_Return
extern void SchM_Schedulable_CanIf_GetPduMode_Return(void);
#else
#define SchM_Schedulable_CanIf_GetPduMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetPduMode_Return */

#if defined(SchM_Schedulable_CanIf_GetPduMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetPduMode_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetPduMode_Start)
#undef SchM_Schedulable_CanIf_GetPduMode_Start
extern void SchM_Schedulable_CanIf_GetPduMode_Start(void);
#else
#define SchM_Schedulable_CanIf_GetPduMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetPduMode_Start */

#if defined(SchM_Schedulable_CanIf_GetTrcvMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetTrcvMode_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetTrcvMode_Return)
#undef SchM_Schedulable_CanIf_GetTrcvMode_Return
extern void SchM_Schedulable_CanIf_GetTrcvMode_Return(void);
#else
#define SchM_Schedulable_CanIf_GetTrcvMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetTrcvMode_Return */

#if defined(SchM_Schedulable_CanIf_GetTrcvMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetTrcvMode_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetTrcvMode_Start)
#undef SchM_Schedulable_CanIf_GetTrcvMode_Start
extern void SchM_Schedulable_CanIf_GetTrcvMode_Start(void);
#else
#define SchM_Schedulable_CanIf_GetTrcvMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetTrcvMode_Start */

#if defined(SchM_Schedulable_CanIf_GetTxConfirmationState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetTxConfirmationState_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetTxConfirmationState_Return)
#undef SchM_Schedulable_CanIf_GetTxConfirmationState_Return
extern void SchM_Schedulable_CanIf_GetTxConfirmationState_Return(void);
#else
#define SchM_Schedulable_CanIf_GetTxConfirmationState_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetTxConfirmationState_Return */

#if defined(SchM_Schedulable_CanIf_GetTxConfirmationState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetTxConfirmationState_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetTxConfirmationState_Start)
#undef SchM_Schedulable_CanIf_GetTxConfirmationState_Start
extern void SchM_Schedulable_CanIf_GetTxConfirmationState_Start(void);
#else
#define SchM_Schedulable_CanIf_GetTxConfirmationState_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetTxConfirmationState_Start */

#if defined(SchM_Schedulable_CanIf_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_CanIf_GetVersionInfo_Return)
#undef SchM_Schedulable_CanIf_GetVersionInfo_Return
extern void SchM_Schedulable_CanIf_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_CanIf_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetVersionInfo_Return */

#if defined(SchM_Schedulable_CanIf_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_CanIf_GetVersionInfo_Start)
#undef SchM_Schedulable_CanIf_GetVersionInfo_Start
extern void SchM_Schedulable_CanIf_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_CanIf_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_GetVersionInfo_Start */

#if defined(SchM_Schedulable_CanIf_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_Init_Return
#endif
#if defined(SchM_Schedulable_CanIf_Init_Return)
#undef SchM_Schedulable_CanIf_Init_Return
extern void SchM_Schedulable_CanIf_Init_Return(void);
#else
#define SchM_Schedulable_CanIf_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_Init_Return */

#if defined(SchM_Schedulable_CanIf_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_Init_Start
#endif
#if defined(SchM_Schedulable_CanIf_Init_Start)
#undef SchM_Schedulable_CanIf_Init_Start
extern void SchM_Schedulable_CanIf_Init_Start(void);
#else
#define SchM_Schedulable_CanIf_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_Init_Start */

#if defined(SchM_Schedulable_CanIf_RxIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_RxIndication_Return
#endif
#if defined(SchM_Schedulable_CanIf_RxIndication_Return)
#undef SchM_Schedulable_CanIf_RxIndication_Return
extern void SchM_Schedulable_CanIf_RxIndication_Return(void);
#else
#define SchM_Schedulable_CanIf_RxIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_RxIndication_Return */

#if defined(SchM_Schedulable_CanIf_RxIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_RxIndication_Start
#endif
#if defined(SchM_Schedulable_CanIf_RxIndication_Start)
#undef SchM_Schedulable_CanIf_RxIndication_Start
extern void SchM_Schedulable_CanIf_RxIndication_Start(void);
#else
#define SchM_Schedulable_CanIf_RxIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_RxIndication_Start */

#if defined(SchM_Schedulable_CanIf_SetControllerMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_SetControllerMode_Return
#endif
#if defined(SchM_Schedulable_CanIf_SetControllerMode_Return)
#undef SchM_Schedulable_CanIf_SetControllerMode_Return
extern void SchM_Schedulable_CanIf_SetControllerMode_Return(void);
#else
#define SchM_Schedulable_CanIf_SetControllerMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_SetControllerMode_Return */

#if defined(SchM_Schedulable_CanIf_SetControllerMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_SetControllerMode_Start
#endif
#if defined(SchM_Schedulable_CanIf_SetControllerMode_Start)
#undef SchM_Schedulable_CanIf_SetControllerMode_Start
extern void SchM_Schedulable_CanIf_SetControllerMode_Start(void);
#else
#define SchM_Schedulable_CanIf_SetControllerMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_SetControllerMode_Start */

#if defined(SchM_Schedulable_CanIf_SetPduMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_SetPduMode_Return
#endif
#if defined(SchM_Schedulable_CanIf_SetPduMode_Return)
#undef SchM_Schedulable_CanIf_SetPduMode_Return
extern void SchM_Schedulable_CanIf_SetPduMode_Return(void);
#else
#define SchM_Schedulable_CanIf_SetPduMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_SetPduMode_Return */

#if defined(SchM_Schedulable_CanIf_SetPduMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_SetPduMode_Start
#endif
#if defined(SchM_Schedulable_CanIf_SetPduMode_Start)
#undef SchM_Schedulable_CanIf_SetPduMode_Start
extern void SchM_Schedulable_CanIf_SetPduMode_Start(void);
#else
#define SchM_Schedulable_CanIf_SetPduMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_SetPduMode_Start */

#if defined(SchM_Schedulable_CanIf_SetTrcvMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_SetTrcvMode_Return
#endif
#if defined(SchM_Schedulable_CanIf_SetTrcvMode_Return)
#undef SchM_Schedulable_CanIf_SetTrcvMode_Return
extern void SchM_Schedulable_CanIf_SetTrcvMode_Return(void);
#else
#define SchM_Schedulable_CanIf_SetTrcvMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_SetTrcvMode_Return */

#if defined(SchM_Schedulable_CanIf_SetTrcvMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_SetTrcvMode_Start
#endif
#if defined(SchM_Schedulable_CanIf_SetTrcvMode_Start)
#undef SchM_Schedulable_CanIf_SetTrcvMode_Start
extern void SchM_Schedulable_CanIf_SetTrcvMode_Start(void);
#else
#define SchM_Schedulable_CanIf_SetTrcvMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_SetTrcvMode_Start */

#if defined(SchM_Schedulable_CanIf_Transmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_Transmit_Return
#endif
#if defined(SchM_Schedulable_CanIf_Transmit_Return)
#undef SchM_Schedulable_CanIf_Transmit_Return
extern void SchM_Schedulable_CanIf_Transmit_Return(void);
#else
#define SchM_Schedulable_CanIf_Transmit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_Transmit_Return */

#if defined(SchM_Schedulable_CanIf_Transmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_Transmit_Start
#endif
#if defined(SchM_Schedulable_CanIf_Transmit_Start)
#undef SchM_Schedulable_CanIf_Transmit_Start
extern void SchM_Schedulable_CanIf_Transmit_Start(void);
#else
#define SchM_Schedulable_CanIf_Transmit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_Transmit_Start */

#if defined(SchM_Schedulable_CanIf_TrcvModeIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_TrcvModeIndication_Return
#endif
#if defined(SchM_Schedulable_CanIf_TrcvModeIndication_Return)
#undef SchM_Schedulable_CanIf_TrcvModeIndication_Return
extern void SchM_Schedulable_CanIf_TrcvModeIndication_Return(void);
#else
#define SchM_Schedulable_CanIf_TrcvModeIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_TrcvModeIndication_Return */

#if defined(SchM_Schedulable_CanIf_TrcvModeIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_TrcvModeIndication_Start
#endif
#if defined(SchM_Schedulable_CanIf_TrcvModeIndication_Start)
#undef SchM_Schedulable_CanIf_TrcvModeIndication_Start
extern void SchM_Schedulable_CanIf_TrcvModeIndication_Start(void);
#else
#define SchM_Schedulable_CanIf_TrcvModeIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_TrcvModeIndication_Start */

#if defined(SchM_Schedulable_CanIf_TriggerTransmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_TriggerTransmit_Return
#endif
#if defined(SchM_Schedulable_CanIf_TriggerTransmit_Return)
#undef SchM_Schedulable_CanIf_TriggerTransmit_Return
extern void SchM_Schedulable_CanIf_TriggerTransmit_Return(void);
#else
#define SchM_Schedulable_CanIf_TriggerTransmit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_TriggerTransmit_Return */

#if defined(SchM_Schedulable_CanIf_TriggerTransmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_TriggerTransmit_Start
#endif
#if defined(SchM_Schedulable_CanIf_TriggerTransmit_Start)
#undef SchM_Schedulable_CanIf_TriggerTransmit_Start
extern void SchM_Schedulable_CanIf_TriggerTransmit_Start(void);
#else
#define SchM_Schedulable_CanIf_TriggerTransmit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_TriggerTransmit_Start */

#if defined(SchM_Schedulable_CanIf_TxConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_TxConfirmation_Return
#endif
#if defined(SchM_Schedulable_CanIf_TxConfirmation_Return)
#undef SchM_Schedulable_CanIf_TxConfirmation_Return
extern void SchM_Schedulable_CanIf_TxConfirmation_Return(void);
#else
#define SchM_Schedulable_CanIf_TxConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_CanIf_TxConfirmation_Return */

#if defined(SchM_Schedulable_CanIf_TxConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanIf_TxConfirmation_Start
#endif
#if defined(SchM_Schedulable_CanIf_TxConfirmation_Start)
#undef SchM_Schedulable_CanIf_TxConfirmation_Start
extern void SchM_Schedulable_CanIf_TxConfirmation_Start(void);
#else
#define SchM_Schedulable_CanIf_TxConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_CanIf_TxConfirmation_Start */

#if defined(SchM_Schedulable_CanNm_ConfirmPnAvailability_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_ConfirmPnAvailability_Return
#endif
#if defined(SchM_Schedulable_CanNm_ConfirmPnAvailability_Return)
#undef SchM_Schedulable_CanNm_ConfirmPnAvailability_Return
extern void SchM_Schedulable_CanNm_ConfirmPnAvailability_Return(void);
#else
#define SchM_Schedulable_CanNm_ConfirmPnAvailability_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_ConfirmPnAvailability_Return */

#if defined(SchM_Schedulable_CanNm_ConfirmPnAvailability_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_ConfirmPnAvailability_Start
#endif
#if defined(SchM_Schedulable_CanNm_ConfirmPnAvailability_Start)
#undef SchM_Schedulable_CanNm_ConfirmPnAvailability_Start
extern void SchM_Schedulable_CanNm_ConfirmPnAvailability_Start(void);
#else
#define SchM_Schedulable_CanNm_ConfirmPnAvailability_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_ConfirmPnAvailability_Start */

#if defined(SchM_Schedulable_CanNm_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_DeInit_Return
#endif
#if defined(SchM_Schedulable_CanNm_DeInit_Return)
#undef SchM_Schedulable_CanNm_DeInit_Return
extern void SchM_Schedulable_CanNm_DeInit_Return(void);
#else
#define SchM_Schedulable_CanNm_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_DeInit_Return */

#if defined(SchM_Schedulable_CanNm_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_DeInit_Start
#endif
#if defined(SchM_Schedulable_CanNm_DeInit_Start)
#undef SchM_Schedulable_CanNm_DeInit_Start
extern void SchM_Schedulable_CanNm_DeInit_Start(void);
#else
#define SchM_Schedulable_CanNm_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_DeInit_Start */

#if defined(SchM_Schedulable_CanNm_DisableCommunication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_DisableCommunication_Return
#endif
#if defined(SchM_Schedulable_CanNm_DisableCommunication_Return)
#undef SchM_Schedulable_CanNm_DisableCommunication_Return
extern void SchM_Schedulable_CanNm_DisableCommunication_Return(void);
#else
#define SchM_Schedulable_CanNm_DisableCommunication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_DisableCommunication_Return */

#if defined(SchM_Schedulable_CanNm_DisableCommunication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_DisableCommunication_Start
#endif
#if defined(SchM_Schedulable_CanNm_DisableCommunication_Start)
#undef SchM_Schedulable_CanNm_DisableCommunication_Start
extern void SchM_Schedulable_CanNm_DisableCommunication_Start(void);
#else
#define SchM_Schedulable_CanNm_DisableCommunication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_DisableCommunication_Start */

#if defined(SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Return
#endif
#if defined(SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Return)
#undef SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Return
extern void SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Return(void);
#else
#define SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Return */

#if defined(SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Start
#endif
#if defined(SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Start)
#undef SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Start
extern void SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Start(void);
#else
#define SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_DisableCommunication_TimerisNotStopped_Start */

#if defined(SchM_Schedulable_CanNm_EnableCommunication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_EnableCommunication_Return
#endif
#if defined(SchM_Schedulable_CanNm_EnableCommunication_Return)
#undef SchM_Schedulable_CanNm_EnableCommunication_Return
extern void SchM_Schedulable_CanNm_EnableCommunication_Return(void);
#else
#define SchM_Schedulable_CanNm_EnableCommunication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_EnableCommunication_Return */

#if defined(SchM_Schedulable_CanNm_EnableCommunication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_EnableCommunication_Start
#endif
#if defined(SchM_Schedulable_CanNm_EnableCommunication_Start)
#undef SchM_Schedulable_CanNm_EnableCommunication_Start
extern void SchM_Schedulable_CanNm_EnableCommunication_Start(void);
#else
#define SchM_Schedulable_CanNm_EnableCommunication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_EnableCommunication_Start */

#if defined(SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Return
#endif
#if defined(SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Return)
#undef SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Return
extern void SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Return(void);
#else
#define SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Return */

#if defined(SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Start
#endif
#if defined(SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Start)
#undef SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Start
extern void SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Start(void);
#else
#define SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_EnableCommunication_TimerisNotStarted_Start */

#if defined(SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Return
#endif
#if defined(SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Return)
#undef SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Return
extern void SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Return(void);
#else
#define SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Return */

#if defined(SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Start
#endif
#if defined(SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Start)
#undef SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Start
extern void SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Start(void);
#else
#define SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetLocalNodeIdentifier_Start */

#if defined(SchM_Schedulable_CanNm_GetNodeIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetNodeIdentifier_Return
#endif
#if defined(SchM_Schedulable_CanNm_GetNodeIdentifier_Return)
#undef SchM_Schedulable_CanNm_GetNodeIdentifier_Return
extern void SchM_Schedulable_CanNm_GetNodeIdentifier_Return(void);
#else
#define SchM_Schedulable_CanNm_GetNodeIdentifier_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetNodeIdentifier_Return */

#if defined(SchM_Schedulable_CanNm_GetNodeIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetNodeIdentifier_Start
#endif
#if defined(SchM_Schedulable_CanNm_GetNodeIdentifier_Start)
#undef SchM_Schedulable_CanNm_GetNodeIdentifier_Start
extern void SchM_Schedulable_CanNm_GetNodeIdentifier_Start(void);
#else
#define SchM_Schedulable_CanNm_GetNodeIdentifier_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetNodeIdentifier_Start */

#if defined(SchM_Schedulable_CanNm_GetPduData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetPduData_Return
#endif
#if defined(SchM_Schedulable_CanNm_GetPduData_Return)
#undef SchM_Schedulable_CanNm_GetPduData_Return
extern void SchM_Schedulable_CanNm_GetPduData_Return(void);
#else
#define SchM_Schedulable_CanNm_GetPduData_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetPduData_Return */

#if defined(SchM_Schedulable_CanNm_GetPduData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetPduData_Start
#endif
#if defined(SchM_Schedulable_CanNm_GetPduData_Start)
#undef SchM_Schedulable_CanNm_GetPduData_Start
extern void SchM_Schedulable_CanNm_GetPduData_Start(void);
#else
#define SchM_Schedulable_CanNm_GetPduData_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetPduData_Start */

#if defined(SchM_Schedulable_CanNm_GetState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetState_Return
#endif
#if defined(SchM_Schedulable_CanNm_GetState_Return)
#undef SchM_Schedulable_CanNm_GetState_Return
extern void SchM_Schedulable_CanNm_GetState_Return(void);
#else
#define SchM_Schedulable_CanNm_GetState_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetState_Return */

#if defined(SchM_Schedulable_CanNm_GetState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetState_Start
#endif
#if defined(SchM_Schedulable_CanNm_GetState_Start)
#undef SchM_Schedulable_CanNm_GetState_Start
extern void SchM_Schedulable_CanNm_GetState_Start(void);
#else
#define SchM_Schedulable_CanNm_GetState_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetState_Start */

#if defined(SchM_Schedulable_CanNm_GetUserData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetUserData_Return
#endif
#if defined(SchM_Schedulable_CanNm_GetUserData_Return)
#undef SchM_Schedulable_CanNm_GetUserData_Return
extern void SchM_Schedulable_CanNm_GetUserData_Return(void);
#else
#define SchM_Schedulable_CanNm_GetUserData_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetUserData_Return */

#if defined(SchM_Schedulable_CanNm_GetUserData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetUserData_Start
#endif
#if defined(SchM_Schedulable_CanNm_GetUserData_Start)
#undef SchM_Schedulable_CanNm_GetUserData_Start
extern void SchM_Schedulable_CanNm_GetUserData_Start(void);
#else
#define SchM_Schedulable_CanNm_GetUserData_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetUserData_Start */

#if defined(SchM_Schedulable_CanNm_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_CanNm_GetVersionInfo_Return)
#undef SchM_Schedulable_CanNm_GetVersionInfo_Return
extern void SchM_Schedulable_CanNm_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_CanNm_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetVersionInfo_Return */

#if defined(SchM_Schedulable_CanNm_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_CanNm_GetVersionInfo_Start)
#undef SchM_Schedulable_CanNm_GetVersionInfo_Start
extern void SchM_Schedulable_CanNm_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_CanNm_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_GetVersionInfo_Start */

#if defined(SchM_Schedulable_CanNm_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_Init_Return
#endif
#if defined(SchM_Schedulable_CanNm_Init_Return)
#undef SchM_Schedulable_CanNm_Init_Return
extern void SchM_Schedulable_CanNm_Init_Return(void);
#else
#define SchM_Schedulable_CanNm_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_Init_Return */

#if defined(SchM_Schedulable_CanNm_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_Init_Start
#endif
#if defined(SchM_Schedulable_CanNm_Init_Start)
#undef SchM_Schedulable_CanNm_Init_Start
extern void SchM_Schedulable_CanNm_Init_Start(void);
#else
#define SchM_Schedulable_CanNm_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_Init_Start */

#if defined(SchM_Schedulable_CanNm_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_MainFunction_Return
#endif
#if defined(SchM_Schedulable_CanNm_MainFunction_Return)
#undef SchM_Schedulable_CanNm_MainFunction_Return
extern void SchM_Schedulable_CanNm_MainFunction_Return(void);
#else
#define SchM_Schedulable_CanNm_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_MainFunction_Return */

#if defined(SchM_Schedulable_CanNm_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_MainFunction_Start
#endif
#if defined(SchM_Schedulable_CanNm_MainFunction_Start)
#undef SchM_Schedulable_CanNm_MainFunction_Start
extern void SchM_Schedulable_CanNm_MainFunction_Start(void);
#else
#define SchM_Schedulable_CanNm_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_MainFunction_Start */

#if defined(SchM_Schedulable_CanNm_NetworkRelease_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_NetworkRelease_Return
#endif
#if defined(SchM_Schedulable_CanNm_NetworkRelease_Return)
#undef SchM_Schedulable_CanNm_NetworkRelease_Return
extern void SchM_Schedulable_CanNm_NetworkRelease_Return(void);
#else
#define SchM_Schedulable_CanNm_NetworkRelease_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_NetworkRelease_Return */

#if defined(SchM_Schedulable_CanNm_NetworkRelease_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_NetworkRelease_Start
#endif
#if defined(SchM_Schedulable_CanNm_NetworkRelease_Start)
#undef SchM_Schedulable_CanNm_NetworkRelease_Start
extern void SchM_Schedulable_CanNm_NetworkRelease_Start(void);
#else
#define SchM_Schedulable_CanNm_NetworkRelease_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_NetworkRelease_Start */

#if defined(SchM_Schedulable_CanNm_NetworkRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_NetworkRequest_Return
#endif
#if defined(SchM_Schedulable_CanNm_NetworkRequest_Return)
#undef SchM_Schedulable_CanNm_NetworkRequest_Return
extern void SchM_Schedulable_CanNm_NetworkRequest_Return(void);
#else
#define SchM_Schedulable_CanNm_NetworkRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_NetworkRequest_Return */

#if defined(SchM_Schedulable_CanNm_NetworkRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_NetworkRequest_Start
#endif
#if defined(SchM_Schedulable_CanNm_NetworkRequest_Start)
#undef SchM_Schedulable_CanNm_NetworkRequest_Start
extern void SchM_Schedulable_CanNm_NetworkRequest_Start(void);
#else
#define SchM_Schedulable_CanNm_NetworkRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_NetworkRequest_Start */

#if defined(SchM_Schedulable_CanNm_PassiveStartUp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_PassiveStartUp_Return
#endif
#if defined(SchM_Schedulable_CanNm_PassiveStartUp_Return)
#undef SchM_Schedulable_CanNm_PassiveStartUp_Return
extern void SchM_Schedulable_CanNm_PassiveStartUp_Return(void);
#else
#define SchM_Schedulable_CanNm_PassiveStartUp_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_PassiveStartUp_Return */

#if defined(SchM_Schedulable_CanNm_PassiveStartUp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_PassiveStartUp_Start
#endif
#if defined(SchM_Schedulable_CanNm_PassiveStartUp_Start)
#undef SchM_Schedulable_CanNm_PassiveStartUp_Start
extern void SchM_Schedulable_CanNm_PassiveStartUp_Start(void);
#else
#define SchM_Schedulable_CanNm_PassiveStartUp_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_PassiveStartUp_Start */

#if defined(SchM_Schedulable_CanNm_RepeatMessageRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_RepeatMessageRequest_Return
#endif
#if defined(SchM_Schedulable_CanNm_RepeatMessageRequest_Return)
#undef SchM_Schedulable_CanNm_RepeatMessageRequest_Return
extern void SchM_Schedulable_CanNm_RepeatMessageRequest_Return(void);
#else
#define SchM_Schedulable_CanNm_RepeatMessageRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_RepeatMessageRequest_Return */

#if defined(SchM_Schedulable_CanNm_RepeatMessageRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_RepeatMessageRequest_Start
#endif
#if defined(SchM_Schedulable_CanNm_RepeatMessageRequest_Start)
#undef SchM_Schedulable_CanNm_RepeatMessageRequest_Start
extern void SchM_Schedulable_CanNm_RepeatMessageRequest_Start(void);
#else
#define SchM_Schedulable_CanNm_RepeatMessageRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_RepeatMessageRequest_Start */

#if defined(SchM_Schedulable_CanNm_RxIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_RxIndication_Return
#endif
#if defined(SchM_Schedulable_CanNm_RxIndication_Return)
#undef SchM_Schedulable_CanNm_RxIndication_Return
extern void SchM_Schedulable_CanNm_RxIndication_Return(void);
#else
#define SchM_Schedulable_CanNm_RxIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_RxIndication_Return */

#if defined(SchM_Schedulable_CanNm_RxIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_RxIndication_Start
#endif
#if defined(SchM_Schedulable_CanNm_RxIndication_Start)
#undef SchM_Schedulable_CanNm_RxIndication_Start
extern void SchM_Schedulable_CanNm_RxIndication_Start(void);
#else
#define SchM_Schedulable_CanNm_RxIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_RxIndication_Start */

#if defined(SchM_Schedulable_CanNm_SetUserData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_SetUserData_Return
#endif
#if defined(SchM_Schedulable_CanNm_SetUserData_Return)
#undef SchM_Schedulable_CanNm_SetUserData_Return
extern void SchM_Schedulable_CanNm_SetUserData_Return(void);
#else
#define SchM_Schedulable_CanNm_SetUserData_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_SetUserData_Return */

#if defined(SchM_Schedulable_CanNm_SetUserData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_SetUserData_Start
#endif
#if defined(SchM_Schedulable_CanNm_SetUserData_Start)
#undef SchM_Schedulable_CanNm_SetUserData_Start
extern void SchM_Schedulable_CanNm_SetUserData_Start(void);
#else
#define SchM_Schedulable_CanNm_SetUserData_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_SetUserData_Start */

#if defined(SchM_Schedulable_CanNm_Transmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_Transmit_Return
#endif
#if defined(SchM_Schedulable_CanNm_Transmit_Return)
#undef SchM_Schedulable_CanNm_Transmit_Return
extern void SchM_Schedulable_CanNm_Transmit_Return(void);
#else
#define SchM_Schedulable_CanNm_Transmit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_Transmit_Return */

#if defined(SchM_Schedulable_CanNm_Transmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_Transmit_Start
#endif
#if defined(SchM_Schedulable_CanNm_Transmit_Start)
#undef SchM_Schedulable_CanNm_Transmit_Start
extern void SchM_Schedulable_CanNm_Transmit_Start(void);
#else
#define SchM_Schedulable_CanNm_Transmit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_Transmit_Start */

#if defined(SchM_Schedulable_CanNm_TriggerTransmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_TriggerTransmit_Return
#endif
#if defined(SchM_Schedulable_CanNm_TriggerTransmit_Return)
#undef SchM_Schedulable_CanNm_TriggerTransmit_Return
extern void SchM_Schedulable_CanNm_TriggerTransmit_Return(void);
#else
#define SchM_Schedulable_CanNm_TriggerTransmit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_TriggerTransmit_Return */

#if defined(SchM_Schedulable_CanNm_TriggerTransmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_TriggerTransmit_Start
#endif
#if defined(SchM_Schedulable_CanNm_TriggerTransmit_Start)
#undef SchM_Schedulable_CanNm_TriggerTransmit_Start
extern void SchM_Schedulable_CanNm_TriggerTransmit_Start(void);
#else
#define SchM_Schedulable_CanNm_TriggerTransmit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_TriggerTransmit_Start */

#if defined(SchM_Schedulable_CanNm_TxConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_TxConfirmation_Return
#endif
#if defined(SchM_Schedulable_CanNm_TxConfirmation_Return)
#undef SchM_Schedulable_CanNm_TxConfirmation_Return
extern void SchM_Schedulable_CanNm_TxConfirmation_Return(void);
#else
#define SchM_Schedulable_CanNm_TxConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_CanNm_TxConfirmation_Return */

#if defined(SchM_Schedulable_CanNm_TxConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanNm_TxConfirmation_Start
#endif
#if defined(SchM_Schedulable_CanNm_TxConfirmation_Start)
#undef SchM_Schedulable_CanNm_TxConfirmation_Start
extern void SchM_Schedulable_CanNm_TxConfirmation_Start(void);
#else
#define SchM_Schedulable_CanNm_TxConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_CanNm_TxConfirmation_Start */

#if defined(SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Return
#endif
#if defined(SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Return)
#undef SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Return
extern void SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Return(void);
#else
#define SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Return */

#if defined(SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Start
#endif
#if defined(SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Start)
#undef SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Start
extern void SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Start(void);
#else
#define SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_CheckTransceiverWakeFlagIndication_Start */

#if defined(SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Return
#endif
#if defined(SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Return)
#undef SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Return
extern void SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Return(void);
#else
#define SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Return */

#if defined(SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Start
#endif
#if defined(SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Start)
#undef SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Start
extern void SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Start(void);
#else
#define SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ClearTrcvWufFlagIndication_Start */

#if defined(SchM_Schedulable_CanSM_ConfirmPnAvailability_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ConfirmPnAvailability_Return
#endif
#if defined(SchM_Schedulable_CanSM_ConfirmPnAvailability_Return)
#undef SchM_Schedulable_CanSM_ConfirmPnAvailability_Return
extern void SchM_Schedulable_CanSM_ConfirmPnAvailability_Return(void);
#else
#define SchM_Schedulable_CanSM_ConfirmPnAvailability_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ConfirmPnAvailability_Return */

#if defined(SchM_Schedulable_CanSM_ConfirmPnAvailability_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ConfirmPnAvailability_Start
#endif
#if defined(SchM_Schedulable_CanSM_ConfirmPnAvailability_Start)
#undef SchM_Schedulable_CanSM_ConfirmPnAvailability_Start
extern void SchM_Schedulable_CanSM_ConfirmPnAvailability_Start(void);
#else
#define SchM_Schedulable_CanSM_ConfirmPnAvailability_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ConfirmPnAvailability_Start */

#if defined(SchM_Schedulable_CanSM_ControllerBusOff_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ControllerBusOff_Return
#endif
#if defined(SchM_Schedulable_CanSM_ControllerBusOff_Return)
#undef SchM_Schedulable_CanSM_ControllerBusOff_Return
extern void SchM_Schedulable_CanSM_ControllerBusOff_Return(void);
#else
#define SchM_Schedulable_CanSM_ControllerBusOff_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ControllerBusOff_Return */

#if defined(SchM_Schedulable_CanSM_ControllerBusOff_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ControllerBusOff_Start
#endif
#if defined(SchM_Schedulable_CanSM_ControllerBusOff_Start)
#undef SchM_Schedulable_CanSM_ControllerBusOff_Start
extern void SchM_Schedulable_CanSM_ControllerBusOff_Start(void);
#else
#define SchM_Schedulable_CanSM_ControllerBusOff_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ControllerBusOff_Start */

#if defined(SchM_Schedulable_CanSM_ControllerModeIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ControllerModeIndication_Return
#endif
#if defined(SchM_Schedulable_CanSM_ControllerModeIndication_Return)
#undef SchM_Schedulable_CanSM_ControllerModeIndication_Return
extern void SchM_Schedulable_CanSM_ControllerModeIndication_Return(void);
#else
#define SchM_Schedulable_CanSM_ControllerModeIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ControllerModeIndication_Return */

#if defined(SchM_Schedulable_CanSM_ControllerModeIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_ControllerModeIndication_Start
#endif
#if defined(SchM_Schedulable_CanSM_ControllerModeIndication_Start)
#undef SchM_Schedulable_CanSM_ControllerModeIndication_Start
extern void SchM_Schedulable_CanSM_ControllerModeIndication_Start(void);
#else
#define SchM_Schedulable_CanSM_ControllerModeIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_ControllerModeIndication_Start */

#if defined(SchM_Schedulable_CanSM_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_DeInit_Return
#endif
#if defined(SchM_Schedulable_CanSM_DeInit_Return)
#undef SchM_Schedulable_CanSM_DeInit_Return
extern void SchM_Schedulable_CanSM_DeInit_Return(void);
#else
#define SchM_Schedulable_CanSM_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_DeInit_Return */

#if defined(SchM_Schedulable_CanSM_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_DeInit_Start
#endif
#if defined(SchM_Schedulable_CanSM_DeInit_Start)
#undef SchM_Schedulable_CanSM_DeInit_Start
extern void SchM_Schedulable_CanSM_DeInit_Start(void);
#else
#define SchM_Schedulable_CanSM_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_DeInit_Start */

#if defined(SchM_Schedulable_CanSM_GetCurrentComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_GetCurrentComMode_Return
#endif
#if defined(SchM_Schedulable_CanSM_GetCurrentComMode_Return)
#undef SchM_Schedulable_CanSM_GetCurrentComMode_Return
extern void SchM_Schedulable_CanSM_GetCurrentComMode_Return(void);
#else
#define SchM_Schedulable_CanSM_GetCurrentComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_GetCurrentComMode_Return */

#if defined(SchM_Schedulable_CanSM_GetCurrentComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_GetCurrentComMode_Start
#endif
#if defined(SchM_Schedulable_CanSM_GetCurrentComMode_Start)
#undef SchM_Schedulable_CanSM_GetCurrentComMode_Start
extern void SchM_Schedulable_CanSM_GetCurrentComMode_Start(void);
#else
#define SchM_Schedulable_CanSM_GetCurrentComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_GetCurrentComMode_Start */

#if defined(SchM_Schedulable_CanSM_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_CanSM_GetVersionInfo_Return)
#undef SchM_Schedulable_CanSM_GetVersionInfo_Return
extern void SchM_Schedulable_CanSM_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_CanSM_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_GetVersionInfo_Return */

#if defined(SchM_Schedulable_CanSM_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_CanSM_GetVersionInfo_Start)
#undef SchM_Schedulable_CanSM_GetVersionInfo_Start
extern void SchM_Schedulable_CanSM_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_CanSM_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_GetVersionInfo_Start */

#if defined(SchM_Schedulable_CanSM_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_Init_Return
#endif
#if defined(SchM_Schedulable_CanSM_Init_Return)
#undef SchM_Schedulable_CanSM_Init_Return
extern void SchM_Schedulable_CanSM_Init_Return(void);
#else
#define SchM_Schedulable_CanSM_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_Init_Return */

#if defined(SchM_Schedulable_CanSM_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_Init_Start
#endif
#if defined(SchM_Schedulable_CanSM_Init_Start)
#undef SchM_Schedulable_CanSM_Init_Start
extern void SchM_Schedulable_CanSM_Init_Start(void);
#else
#define SchM_Schedulable_CanSM_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_Init_Start */

#if defined(SchM_Schedulable_CanSM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_CanSM_MainFunction_Return)
#undef SchM_Schedulable_CanSM_MainFunction_Return
extern void SchM_Schedulable_CanSM_MainFunction_Return(void);
#else
#define SchM_Schedulable_CanSM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_MainFunction_Return */

#if defined(SchM_Schedulable_CanSM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_CanSM_MainFunction_Start)
#undef SchM_Schedulable_CanSM_MainFunction_Start
extern void SchM_Schedulable_CanSM_MainFunction_Start(void);
#else
#define SchM_Schedulable_CanSM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_MainFunction_Start */

#if defined(SchM_Schedulable_CanSM_RequestComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_RequestComMode_Return
#endif
#if defined(SchM_Schedulable_CanSM_RequestComMode_Return)
#undef SchM_Schedulable_CanSM_RequestComMode_Return
extern void SchM_Schedulable_CanSM_RequestComMode_Return(void);
#else
#define SchM_Schedulable_CanSM_RequestComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_RequestComMode_Return */

#if defined(SchM_Schedulable_CanSM_RequestComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_RequestComMode_Start
#endif
#if defined(SchM_Schedulable_CanSM_RequestComMode_Start)
#undef SchM_Schedulable_CanSM_RequestComMode_Start
extern void SchM_Schedulable_CanSM_RequestComMode_Start(void);
#else
#define SchM_Schedulable_CanSM_RequestComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_RequestComMode_Start */

#if defined(SchM_Schedulable_CanSM_StartWakeupSource_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_StartWakeupSource_Return
#endif
#if defined(SchM_Schedulable_CanSM_StartWakeupSource_Return)
#undef SchM_Schedulable_CanSM_StartWakeupSource_Return
extern void SchM_Schedulable_CanSM_StartWakeupSource_Return(void);
#else
#define SchM_Schedulable_CanSM_StartWakeupSource_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_StartWakeupSource_Return */

#if defined(SchM_Schedulable_CanSM_StartWakeupSource_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_StartWakeupSource_Start
#endif
#if defined(SchM_Schedulable_CanSM_StartWakeupSource_Start)
#undef SchM_Schedulable_CanSM_StartWakeupSource_Start
extern void SchM_Schedulable_CanSM_StartWakeupSource_Start(void);
#else
#define SchM_Schedulable_CanSM_StartWakeupSource_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_StartWakeupSource_Start */

#if defined(SchM_Schedulable_CanSM_StopWakeupSource_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_StopWakeupSource_Return
#endif
#if defined(SchM_Schedulable_CanSM_StopWakeupSource_Return)
#undef SchM_Schedulable_CanSM_StopWakeupSource_Return
extern void SchM_Schedulable_CanSM_StopWakeupSource_Return(void);
#else
#define SchM_Schedulable_CanSM_StopWakeupSource_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_StopWakeupSource_Return */

#if defined(SchM_Schedulable_CanSM_StopWakeupSource_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_StopWakeupSource_Start
#endif
#if defined(SchM_Schedulable_CanSM_StopWakeupSource_Start)
#undef SchM_Schedulable_CanSM_StopWakeupSource_Start
extern void SchM_Schedulable_CanSM_StopWakeupSource_Start(void);
#else
#define SchM_Schedulable_CanSM_StopWakeupSource_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_StopWakeupSource_Start */

#if defined(SchM_Schedulable_CanSM_TransceiverModeIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_TransceiverModeIndication_Return
#endif
#if defined(SchM_Schedulable_CanSM_TransceiverModeIndication_Return)
#undef SchM_Schedulable_CanSM_TransceiverModeIndication_Return
extern void SchM_Schedulable_CanSM_TransceiverModeIndication_Return(void);
#else
#define SchM_Schedulable_CanSM_TransceiverModeIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_TransceiverModeIndication_Return */

#if defined(SchM_Schedulable_CanSM_TransceiverModeIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_TransceiverModeIndication_Start
#endif
#if defined(SchM_Schedulable_CanSM_TransceiverModeIndication_Start)
#undef SchM_Schedulable_CanSM_TransceiverModeIndication_Start
extern void SchM_Schedulable_CanSM_TransceiverModeIndication_Start(void);
#else
#define SchM_Schedulable_CanSM_TransceiverModeIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_TransceiverModeIndication_Start */

#if defined(SchM_Schedulable_CanSM_TxTimeoutException_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_TxTimeoutException_Return
#endif
#if defined(SchM_Schedulable_CanSM_TxTimeoutException_Return)
#undef SchM_Schedulable_CanSM_TxTimeoutException_Return
extern void SchM_Schedulable_CanSM_TxTimeoutException_Return(void);
#else
#define SchM_Schedulable_CanSM_TxTimeoutException_Return() ((void)(0))
#endif /* SchM_Schedulable_CanSM_TxTimeoutException_Return */

#if defined(SchM_Schedulable_CanSM_TxTimeoutException_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanSM_TxTimeoutException_Start
#endif
#if defined(SchM_Schedulable_CanSM_TxTimeoutException_Start)
#undef SchM_Schedulable_CanSM_TxTimeoutException_Start
extern void SchM_Schedulable_CanSM_TxTimeoutException_Start(void);
#else
#define SchM_Schedulable_CanSM_TxTimeoutException_Start() ((void)(0))
#endif /* SchM_Schedulable_CanSM_TxTimeoutException_Start */

#if defined(SchM_Schedulable_CanTp_CancelReceive_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_CancelReceive_Return
#endif
#if defined(SchM_Schedulable_CanTp_CancelReceive_Return)
#undef SchM_Schedulable_CanTp_CancelReceive_Return
extern void SchM_Schedulable_CanTp_CancelReceive_Return(void);
#else
#define SchM_Schedulable_CanTp_CancelReceive_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_CancelReceive_Return */

#if defined(SchM_Schedulable_CanTp_CancelReceive_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_CancelReceive_Start
#endif
#if defined(SchM_Schedulable_CanTp_CancelReceive_Start)
#undef SchM_Schedulable_CanTp_CancelReceive_Start
extern void SchM_Schedulable_CanTp_CancelReceive_Start(void);
#else
#define SchM_Schedulable_CanTp_CancelReceive_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_CancelReceive_Start */

#if defined(SchM_Schedulable_CanTp_CancelTransmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_CancelTransmit_Return
#endif
#if defined(SchM_Schedulable_CanTp_CancelTransmit_Return)
#undef SchM_Schedulable_CanTp_CancelTransmit_Return
extern void SchM_Schedulable_CanTp_CancelTransmit_Return(void);
#else
#define SchM_Schedulable_CanTp_CancelTransmit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_CancelTransmit_Return */

#if defined(SchM_Schedulable_CanTp_CancelTransmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_CancelTransmit_Start
#endif
#if defined(SchM_Schedulable_CanTp_CancelTransmit_Start)
#undef SchM_Schedulable_CanTp_CancelTransmit_Start
extern void SchM_Schedulable_CanTp_CancelTransmit_Start(void);
#else
#define SchM_Schedulable_CanTp_CancelTransmit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_CancelTransmit_Start */

#if defined(SchM_Schedulable_CanTp_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_CanTp_GetVersionInfo_Return)
#undef SchM_Schedulable_CanTp_GetVersionInfo_Return
extern void SchM_Schedulable_CanTp_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_CanTp_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_GetVersionInfo_Return */

#if defined(SchM_Schedulable_CanTp_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_CanTp_GetVersionInfo_Start)
#undef SchM_Schedulable_CanTp_GetVersionInfo_Start
extern void SchM_Schedulable_CanTp_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_CanTp_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_GetVersionInfo_Start */

#if defined(SchM_Schedulable_CanTp_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_Init_Return
#endif
#if defined(SchM_Schedulable_CanTp_Init_Return)
#undef SchM_Schedulable_CanTp_Init_Return
extern void SchM_Schedulable_CanTp_Init_Return(void);
#else
#define SchM_Schedulable_CanTp_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_Init_Return */

#if defined(SchM_Schedulable_CanTp_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_Init_Start
#endif
#if defined(SchM_Schedulable_CanTp_Init_Start)
#undef SchM_Schedulable_CanTp_Init_Start
extern void SchM_Schedulable_CanTp_Init_Start(void);
#else
#define SchM_Schedulable_CanTp_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_Init_Start */

#if defined(SchM_Schedulable_CanTp_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_MainFunction_Return
#endif
#if defined(SchM_Schedulable_CanTp_MainFunction_Return)
#undef SchM_Schedulable_CanTp_MainFunction_Return
extern void SchM_Schedulable_CanTp_MainFunction_Return(void);
#else
#define SchM_Schedulable_CanTp_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_MainFunction_Return */

#if defined(SchM_Schedulable_CanTp_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_MainFunction_Start
#endif
#if defined(SchM_Schedulable_CanTp_MainFunction_Start)
#undef SchM_Schedulable_CanTp_MainFunction_Start
extern void SchM_Schedulable_CanTp_MainFunction_Start(void);
#else
#define SchM_Schedulable_CanTp_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_MainFunction_Start */

#if defined(SchM_Schedulable_CanTp_RxIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_RxIndication_Return
#endif
#if defined(SchM_Schedulable_CanTp_RxIndication_Return)
#undef SchM_Schedulable_CanTp_RxIndication_Return
extern void SchM_Schedulable_CanTp_RxIndication_Return(void);
#else
#define SchM_Schedulable_CanTp_RxIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_RxIndication_Return */

#if defined(SchM_Schedulable_CanTp_RxIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_RxIndication_Start
#endif
#if defined(SchM_Schedulable_CanTp_RxIndication_Start)
#undef SchM_Schedulable_CanTp_RxIndication_Start
extern void SchM_Schedulable_CanTp_RxIndication_Start(void);
#else
#define SchM_Schedulable_CanTp_RxIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_RxIndication_Start */

#if defined(SchM_Schedulable_CanTp_Shutdown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_Shutdown_Return
#endif
#if defined(SchM_Schedulable_CanTp_Shutdown_Return)
#undef SchM_Schedulable_CanTp_Shutdown_Return
extern void SchM_Schedulable_CanTp_Shutdown_Return(void);
#else
#define SchM_Schedulable_CanTp_Shutdown_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_Shutdown_Return */

#if defined(SchM_Schedulable_CanTp_Shutdown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_Shutdown_Start
#endif
#if defined(SchM_Schedulable_CanTp_Shutdown_Start)
#undef SchM_Schedulable_CanTp_Shutdown_Start
extern void SchM_Schedulable_CanTp_Shutdown_Start(void);
#else
#define SchM_Schedulable_CanTp_Shutdown_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_Shutdown_Start */

#if defined(SchM_Schedulable_CanTp_Transmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_Transmit_Return
#endif
#if defined(SchM_Schedulable_CanTp_Transmit_Return)
#undef SchM_Schedulable_CanTp_Transmit_Return
extern void SchM_Schedulable_CanTp_Transmit_Return(void);
#else
#define SchM_Schedulable_CanTp_Transmit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_Transmit_Return */

#if defined(SchM_Schedulable_CanTp_Transmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_Transmit_Start
#endif
#if defined(SchM_Schedulable_CanTp_Transmit_Start)
#undef SchM_Schedulable_CanTp_Transmit_Start
extern void SchM_Schedulable_CanTp_Transmit_Start(void);
#else
#define SchM_Schedulable_CanTp_Transmit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_Transmit_Start */

#if defined(SchM_Schedulable_CanTp_TxConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_TxConfirmation_Return
#endif
#if defined(SchM_Schedulable_CanTp_TxConfirmation_Return)
#undef SchM_Schedulable_CanTp_TxConfirmation_Return
extern void SchM_Schedulable_CanTp_TxConfirmation_Return(void);
#else
#define SchM_Schedulable_CanTp_TxConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTp_TxConfirmation_Return */

#if defined(SchM_Schedulable_CanTp_TxConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTp_TxConfirmation_Start
#endif
#if defined(SchM_Schedulable_CanTp_TxConfirmation_Start)
#undef SchM_Schedulable_CanTp_TxConfirmation_Start
extern void SchM_Schedulable_CanTp_TxConfirmation_Start(void);
#else
#define SchM_Schedulable_CanTp_TxConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTp_TxConfirmation_Start */

#if defined(SchM_Schedulable_CanTrcv_CheckWakeFlag_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_CheckWakeFlag_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_CheckWakeFlag_Return)
#undef SchM_Schedulable_CanTrcv_CheckWakeFlag_Return
extern void SchM_Schedulable_CanTrcv_CheckWakeFlag_Return(void);
#else
#define SchM_Schedulable_CanTrcv_CheckWakeFlag_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_CheckWakeFlag_Return */

#if defined(SchM_Schedulable_CanTrcv_CheckWakeFlag_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_CheckWakeFlag_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_CheckWakeFlag_Start)
#undef SchM_Schedulable_CanTrcv_CheckWakeFlag_Start
extern void SchM_Schedulable_CanTrcv_CheckWakeFlag_Start(void);
#else
#define SchM_Schedulable_CanTrcv_CheckWakeFlag_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_CheckWakeFlag_Start */

#if defined(SchM_Schedulable_CanTrcv_CheckWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_CheckWakeup_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_CheckWakeup_Return)
#undef SchM_Schedulable_CanTrcv_CheckWakeup_Return
extern void SchM_Schedulable_CanTrcv_CheckWakeup_Return(void);
#else
#define SchM_Schedulable_CanTrcv_CheckWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_CheckWakeup_Return */

#if defined(SchM_Schedulable_CanTrcv_CheckWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_CheckWakeup_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_CheckWakeup_Start)
#undef SchM_Schedulable_CanTrcv_CheckWakeup_Start
extern void SchM_Schedulable_CanTrcv_CheckWakeup_Start(void);
#else
#define SchM_Schedulable_CanTrcv_CheckWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_CheckWakeup_Start */

#if defined(SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Return)
#undef SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Return
extern void SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Return(void);
#else
#define SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Return */

#if defined(SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Start)
#undef SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Start
extern void SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Start(void);
#else
#define SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ClearTrcvTimeoutFlag_Start */

#if defined(SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Return)
#undef SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Return
extern void SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Return(void);
#else
#define SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Return */

#if defined(SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Start)
#undef SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Start
extern void SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Start(void);
#else
#define SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ClearTrcvWufFlag_Start */

#if defined(SchM_Schedulable_CanTrcv_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_DeInit_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_DeInit_Return)
#undef SchM_Schedulable_CanTrcv_DeInit_Return
extern void SchM_Schedulable_CanTrcv_DeInit_Return(void);
#else
#define SchM_Schedulable_CanTrcv_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_DeInit_Return */

#if defined(SchM_Schedulable_CanTrcv_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_DeInit_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_DeInit_Start)
#undef SchM_Schedulable_CanTrcv_DeInit_Start
extern void SchM_Schedulable_CanTrcv_DeInit_Start(void);
#else
#define SchM_Schedulable_CanTrcv_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_DeInit_Start */

#if defined(SchM_Schedulable_CanTrcv_GetBusWuReason_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetBusWuReason_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_GetBusWuReason_Return)
#undef SchM_Schedulable_CanTrcv_GetBusWuReason_Return
extern void SchM_Schedulable_CanTrcv_GetBusWuReason_Return(void);
#else
#define SchM_Schedulable_CanTrcv_GetBusWuReason_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetBusWuReason_Return */

#if defined(SchM_Schedulable_CanTrcv_GetBusWuReason_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetBusWuReason_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_GetBusWuReason_Start)
#undef SchM_Schedulable_CanTrcv_GetBusWuReason_Start
extern void SchM_Schedulable_CanTrcv_GetBusWuReason_Start(void);
#else
#define SchM_Schedulable_CanTrcv_GetBusWuReason_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetBusWuReason_Start */

#if defined(SchM_Schedulable_CanTrcv_GetOpMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetOpMode_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_GetOpMode_Return)
#undef SchM_Schedulable_CanTrcv_GetOpMode_Return
extern void SchM_Schedulable_CanTrcv_GetOpMode_Return(void);
#else
#define SchM_Schedulable_CanTrcv_GetOpMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetOpMode_Return */

#if defined(SchM_Schedulable_CanTrcv_GetOpMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetOpMode_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_GetOpMode_Start)
#undef SchM_Schedulable_CanTrcv_GetOpMode_Start
extern void SchM_Schedulable_CanTrcv_GetOpMode_Start(void);
#else
#define SchM_Schedulable_CanTrcv_GetOpMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetOpMode_Start */

#if defined(SchM_Schedulable_CanTrcv_GetTrcvSystemData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetTrcvSystemData_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_GetTrcvSystemData_Return)
#undef SchM_Schedulable_CanTrcv_GetTrcvSystemData_Return
extern void SchM_Schedulable_CanTrcv_GetTrcvSystemData_Return(void);
#else
#define SchM_Schedulable_CanTrcv_GetTrcvSystemData_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetTrcvSystemData_Return */

#if defined(SchM_Schedulable_CanTrcv_GetTrcvSystemData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetTrcvSystemData_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_GetTrcvSystemData_Start)
#undef SchM_Schedulable_CanTrcv_GetTrcvSystemData_Start
extern void SchM_Schedulable_CanTrcv_GetTrcvSystemData_Start(void);
#else
#define SchM_Schedulable_CanTrcv_GetTrcvSystemData_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetTrcvSystemData_Start */

#if defined(SchM_Schedulable_CanTrcv_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_GetVersionInfo_Return)
#undef SchM_Schedulable_CanTrcv_GetVersionInfo_Return
extern void SchM_Schedulable_CanTrcv_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_CanTrcv_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetVersionInfo_Return */

#if defined(SchM_Schedulable_CanTrcv_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_GetVersionInfo_Start)
#undef SchM_Schedulable_CanTrcv_GetVersionInfo_Start
extern void SchM_Schedulable_CanTrcv_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_CanTrcv_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_GetVersionInfo_Start */

#if defined(SchM_Schedulable_CanTrcv_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_Init_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_Init_Return)
#undef SchM_Schedulable_CanTrcv_Init_Return
extern void SchM_Schedulable_CanTrcv_Init_Return(void);
#else
#define SchM_Schedulable_CanTrcv_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_Init_Return */

#if defined(SchM_Schedulable_CanTrcv_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_Init_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_Init_Start)
#undef SchM_Schedulable_CanTrcv_Init_Start
extern void SchM_Schedulable_CanTrcv_Init_Start(void);
#else
#define SchM_Schedulable_CanTrcv_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_Init_Start */

#if defined(SchM_Schedulable_CanTrcv_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_MainFunction_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_MainFunction_Return)
#undef SchM_Schedulable_CanTrcv_MainFunction_Return
extern void SchM_Schedulable_CanTrcv_MainFunction_Return(void);
#else
#define SchM_Schedulable_CanTrcv_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_MainFunction_Return */

#if defined(SchM_Schedulable_CanTrcv_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_MainFunction_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_MainFunction_Start)
#undef SchM_Schedulable_CanTrcv_MainFunction_Start
extern void SchM_Schedulable_CanTrcv_MainFunction_Start(void);
#else
#define SchM_Schedulable_CanTrcv_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_MainFunction_Start */

#if defined(SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Return)
#undef SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Return
extern void SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Return(void);
#else
#define SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Return */

#if defined(SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Start)
#undef SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Start
extern void SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Start(void);
#else
#define SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ReadTrcvSilenceFlag_Start */

#if defined(SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Return)
#undef SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Return
extern void SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Return(void);
#else
#define SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Return */

#if defined(SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Start)
#undef SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Start
extern void SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Start(void);
#else
#define SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_ReadTrcvTimeoutFlag_Start */

#if defined(SchM_Schedulable_CanTrcv_SetOpMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_SetOpMode_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_SetOpMode_Return)
#undef SchM_Schedulable_CanTrcv_SetOpMode_Return
extern void SchM_Schedulable_CanTrcv_SetOpMode_Return(void);
#else
#define SchM_Schedulable_CanTrcv_SetOpMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_SetOpMode_Return */

#if defined(SchM_Schedulable_CanTrcv_SetOpMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_SetOpMode_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_SetOpMode_Start)
#undef SchM_Schedulable_CanTrcv_SetOpMode_Start
extern void SchM_Schedulable_CanTrcv_SetOpMode_Start(void);
#else
#define SchM_Schedulable_CanTrcv_SetOpMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_SetOpMode_Start */

#if defined(SchM_Schedulable_CanTrcv_SetPNActivationState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_SetPNActivationState_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_SetPNActivationState_Return)
#undef SchM_Schedulable_CanTrcv_SetPNActivationState_Return
extern void SchM_Schedulable_CanTrcv_SetPNActivationState_Return(void);
#else
#define SchM_Schedulable_CanTrcv_SetPNActivationState_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_SetPNActivationState_Return */

#if defined(SchM_Schedulable_CanTrcv_SetPNActivationState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_SetPNActivationState_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_SetPNActivationState_Start)
#undef SchM_Schedulable_CanTrcv_SetPNActivationState_Start
extern void SchM_Schedulable_CanTrcv_SetPNActivationState_Start(void);
#else
#define SchM_Schedulable_CanTrcv_SetPNActivationState_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_SetPNActivationState_Start */

#if defined(SchM_Schedulable_CanTrcv_SetWakeupMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_SetWakeupMode_Return
#endif
#if defined(SchM_Schedulable_CanTrcv_SetWakeupMode_Return)
#undef SchM_Schedulable_CanTrcv_SetWakeupMode_Return
extern void SchM_Schedulable_CanTrcv_SetWakeupMode_Return(void);
#else
#define SchM_Schedulable_CanTrcv_SetWakeupMode_Return() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_SetWakeupMode_Return */

#if defined(SchM_Schedulable_CanTrcv_SetWakeupMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_CanTrcv_SetWakeupMode_Start
#endif
#if defined(SchM_Schedulable_CanTrcv_SetWakeupMode_Start)
#undef SchM_Schedulable_CanTrcv_SetWakeupMode_Start
extern void SchM_Schedulable_CanTrcv_SetWakeupMode_Start(void);
#else
#define SchM_Schedulable_CanTrcv_SetWakeupMode_Start() ((void)(0))
#endif /* SchM_Schedulable_CanTrcv_SetWakeupMode_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_AbortMb_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_64_95_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN0_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_64_95_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN1_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_64_95_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN2_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN3_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN4_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN5_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN6_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_0_31_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_32_63_MB_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CAN7_ORED_IRQHandler_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_CheckWakeup_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_DeInit_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_DeInit_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_DeInit_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_DeInit_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_DeInit_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_DeInit_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_DeInit_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_DeInit_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_DeInit_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_DeInit_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_DisableControllerInterrupts_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_EnableControllerInterrupts_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_EnableEgressTimeStamp_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ClearTDCFail_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_FlexCAN_Ip_ManualBusOffRecovery_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerErrorState_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerMode_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerRxErrorCounter_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetControllerTxErrorCounter_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetCurrentTime_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetEgressTimeStamp_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetIngressTimeStamp_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_Init_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_Init_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_Init_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_Init_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_Init_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_Init_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_Init_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_Init_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_Init_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_Init_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_ListenOnlyMode_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_BusOff_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Mode_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Read_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Wakeup_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_MainFunction_Write_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetBaudrate_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetClockMode_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetControllerMode_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_SetCurrentTime_Start */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_Write_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_Write_Return
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_Write_Return)
#undef SchM_Schedulable_Can_43_FLEXCAN_Write_Return
extern void SchM_Schedulable_Can_43_FLEXCAN_Write_Return(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_Write_Return() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_Write_Return */

#if defined(SchM_Schedulable_Can_43_FLEXCAN_Write_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Can_43_FLEXCAN_Write_Start
#endif
#if defined(SchM_Schedulable_Can_43_FLEXCAN_Write_Start)
#undef SchM_Schedulable_Can_43_FLEXCAN_Write_Start
extern void SchM_Schedulable_Can_43_FLEXCAN_Write_Start(void);
#else
#define SchM_Schedulable_Can_43_FLEXCAN_Write_Start() ((void)(0))
#endif /* SchM_Schedulable_Can_43_FLEXCAN_Write_Start */

#if defined(SchM_Schedulable_ComM_BusSM_BusSleepMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_BusSM_BusSleepMode_Return
#endif
#if defined(SchM_Schedulable_ComM_BusSM_BusSleepMode_Return)
#undef SchM_Schedulable_ComM_BusSM_BusSleepMode_Return
extern void SchM_Schedulable_ComM_BusSM_BusSleepMode_Return(void);
#else
#define SchM_Schedulable_ComM_BusSM_BusSleepMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_BusSM_BusSleepMode_Return */

#if defined(SchM_Schedulable_ComM_BusSM_BusSleepMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_BusSM_BusSleepMode_Start
#endif
#if defined(SchM_Schedulable_ComM_BusSM_BusSleepMode_Start)
#undef SchM_Schedulable_ComM_BusSM_BusSleepMode_Start
extern void SchM_Schedulable_ComM_BusSM_BusSleepMode_Start(void);
#else
#define SchM_Schedulable_ComM_BusSM_BusSleepMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_BusSM_BusSleepMode_Start */

#if defined(SchM_Schedulable_ComM_BusSM_ModeIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_BusSM_ModeIndication_Return
#endif
#if defined(SchM_Schedulable_ComM_BusSM_ModeIndication_Return)
#undef SchM_Schedulable_ComM_BusSM_ModeIndication_Return
extern void SchM_Schedulable_ComM_BusSM_ModeIndication_Return(void);
#else
#define SchM_Schedulable_ComM_BusSM_ModeIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_BusSM_ModeIndication_Return */

#if defined(SchM_Schedulable_ComM_BusSM_ModeIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_BusSM_ModeIndication_Start
#endif
#if defined(SchM_Schedulable_ComM_BusSM_ModeIndication_Start)
#undef SchM_Schedulable_ComM_BusSM_ModeIndication_Start
extern void SchM_Schedulable_ComM_BusSM_ModeIndication_Start(void);
#else
#define SchM_Schedulable_ComM_BusSM_ModeIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_BusSM_ModeIndication_Start */

#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Return
#endif
#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Return)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Return
extern void SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Return(void);
#else
#define SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Return */

#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Start
#endif
#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Start)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Start
extern void SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Start(void);
#else
#define SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_COMCbk_ComISignal_Rx_EIRA_CanNm_Start */

#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Return
#endif
#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Return)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Return
extern void SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Return(void);
#else
#define SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Return */

#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Start
#endif
#if defined(SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Start)
#undef SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Start
extern void SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Start(void);
#else
#define SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_COMCbk_ComISignal_Tx_PncVector_FD_CAN1_Start */

#if defined(SchM_Schedulable_ComM_CommunicationAllowed_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_CommunicationAllowed_Return
#endif
#if defined(SchM_Schedulable_ComM_CommunicationAllowed_Return)
#undef SchM_Schedulable_ComM_CommunicationAllowed_Return
extern void SchM_Schedulable_ComM_CommunicationAllowed_Return(void);
#else
#define SchM_Schedulable_ComM_CommunicationAllowed_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_CommunicationAllowed_Return */

#if defined(SchM_Schedulable_ComM_CommunicationAllowed_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_CommunicationAllowed_Start
#endif
#if defined(SchM_Schedulable_ComM_CommunicationAllowed_Start)
#undef SchM_Schedulable_ComM_CommunicationAllowed_Start
extern void SchM_Schedulable_ComM_CommunicationAllowed_Start(void);
#else
#define SchM_Schedulable_ComM_CommunicationAllowed_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_CommunicationAllowed_Start */

#if defined(SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Return
#endif
#if defined(SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Return)
#undef SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Return
extern void SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Return(void);
#else
#define SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Return */

#if defined(SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Start
#endif
#if defined(SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Start)
#undef SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Start
extern void SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Start(void);
#else
#define SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_DCM_ActiveDiagnostic_Start */

#if defined(SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Return
#endif
#if defined(SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Return)
#undef SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Return
extern void SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Return(void);
#else
#define SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Return */

#if defined(SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Start
#endif
#if defined(SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Start)
#undef SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Start
extern void SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Start(void);
#else
#define SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_DCM_InactiveDiagnostic_Start */

#if defined(SchM_Schedulable_ComM_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_DeInit_Return
#endif
#if defined(SchM_Schedulable_ComM_DeInit_Return)
#undef SchM_Schedulable_ComM_DeInit_Return
extern void SchM_Schedulable_ComM_DeInit_Return(void);
#else
#define SchM_Schedulable_ComM_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_DeInit_Return */

#if defined(SchM_Schedulable_ComM_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_DeInit_Start
#endif
#if defined(SchM_Schedulable_ComM_DeInit_Start)
#undef SchM_Schedulable_ComM_DeInit_Start
extern void SchM_Schedulable_ComM_DeInit_Start(void);
#else
#define SchM_Schedulable_ComM_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_DeInit_Start */

#if defined(SchM_Schedulable_ComM_EcuM_WakeUpIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_EcuM_WakeUpIndication_Return
#endif
#if defined(SchM_Schedulable_ComM_EcuM_WakeUpIndication_Return)
#undef SchM_Schedulable_ComM_EcuM_WakeUpIndication_Return
extern void SchM_Schedulable_ComM_EcuM_WakeUpIndication_Return(void);
#else
#define SchM_Schedulable_ComM_EcuM_WakeUpIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_EcuM_WakeUpIndication_Return */

#if defined(SchM_Schedulable_ComM_EcuM_WakeUpIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_EcuM_WakeUpIndication_Start
#endif
#if defined(SchM_Schedulable_ComM_EcuM_WakeUpIndication_Start)
#undef SchM_Schedulable_ComM_EcuM_WakeUpIndication_Start
extern void SchM_Schedulable_ComM_EcuM_WakeUpIndication_Start(void);
#else
#define SchM_Schedulable_ComM_EcuM_WakeUpIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_EcuM_WakeUpIndication_Start */

#if defined(SchM_Schedulable_ComM_GetCurrentComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetCurrentComMode_Return
#endif
#if defined(SchM_Schedulable_ComM_GetCurrentComMode_Return)
#undef SchM_Schedulable_ComM_GetCurrentComMode_Return
extern void SchM_Schedulable_ComM_GetCurrentComMode_Return(void);
#else
#define SchM_Schedulable_ComM_GetCurrentComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetCurrentComMode_Return */

#if defined(SchM_Schedulable_ComM_GetCurrentComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetCurrentComMode_Start
#endif
#if defined(SchM_Schedulable_ComM_GetCurrentComMode_Start)
#undef SchM_Schedulable_ComM_GetCurrentComMode_Start
extern void SchM_Schedulable_ComM_GetCurrentComMode_Start(void);
#else
#define SchM_Schedulable_ComM_GetCurrentComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetCurrentComMode_Start */

#if defined(SchM_Schedulable_ComM_GetMaxComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetMaxComMode_Return
#endif
#if defined(SchM_Schedulable_ComM_GetMaxComMode_Return)
#undef SchM_Schedulable_ComM_GetMaxComMode_Return
extern void SchM_Schedulable_ComM_GetMaxComMode_Return(void);
#else
#define SchM_Schedulable_ComM_GetMaxComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetMaxComMode_Return */

#if defined(SchM_Schedulable_ComM_GetMaxComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetMaxComMode_Start
#endif
#if defined(SchM_Schedulable_ComM_GetMaxComMode_Start)
#undef SchM_Schedulable_ComM_GetMaxComMode_Start
extern void SchM_Schedulable_ComM_GetMaxComMode_Start(void);
#else
#define SchM_Schedulable_ComM_GetMaxComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetMaxComMode_Start */

#if defined(SchM_Schedulable_ComM_GetRequestedComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetRequestedComMode_Return
#endif
#if defined(SchM_Schedulable_ComM_GetRequestedComMode_Return)
#undef SchM_Schedulable_ComM_GetRequestedComMode_Return
extern void SchM_Schedulable_ComM_GetRequestedComMode_Return(void);
#else
#define SchM_Schedulable_ComM_GetRequestedComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetRequestedComMode_Return */

#if defined(SchM_Schedulable_ComM_GetRequestedComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetRequestedComMode_Start
#endif
#if defined(SchM_Schedulable_ComM_GetRequestedComMode_Start)
#undef SchM_Schedulable_ComM_GetRequestedComMode_Start
extern void SchM_Schedulable_ComM_GetRequestedComMode_Start(void);
#else
#define SchM_Schedulable_ComM_GetRequestedComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetRequestedComMode_Start */

#if defined(SchM_Schedulable_ComM_GetStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetStatus_Return
#endif
#if defined(SchM_Schedulable_ComM_GetStatus_Return)
#undef SchM_Schedulable_ComM_GetStatus_Return
extern void SchM_Schedulable_ComM_GetStatus_Return(void);
#else
#define SchM_Schedulable_ComM_GetStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetStatus_Return */

#if defined(SchM_Schedulable_ComM_GetStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetStatus_Start
#endif
#if defined(SchM_Schedulable_ComM_GetStatus_Start)
#undef SchM_Schedulable_ComM_GetStatus_Start
extern void SchM_Schedulable_ComM_GetStatus_Start(void);
#else
#define SchM_Schedulable_ComM_GetStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetStatus_Start */

#if defined(SchM_Schedulable_ComM_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_ComM_GetVersionInfo_Return)
#undef SchM_Schedulable_ComM_GetVersionInfo_Return
extern void SchM_Schedulable_ComM_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_ComM_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetVersionInfo_Return */

#if defined(SchM_Schedulable_ComM_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_ComM_GetVersionInfo_Start)
#undef SchM_Schedulable_ComM_GetVersionInfo_Start
extern void SchM_Schedulable_ComM_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_ComM_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_GetVersionInfo_Start */

#if defined(SchM_Schedulable_ComM_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Init_Return
#endif
#if defined(SchM_Schedulable_ComM_Init_Return)
#undef SchM_Schedulable_ComM_Init_Return
extern void SchM_Schedulable_ComM_Init_Return(void);
#else
#define SchM_Schedulable_ComM_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_Init_Return */

#if defined(SchM_Schedulable_ComM_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Init_Start
#endif
#if defined(SchM_Schedulable_ComM_Init_Start)
#undef SchM_Schedulable_ComM_Init_Start
extern void SchM_Schedulable_ComM_Init_Start(void);
#else
#define SchM_Schedulable_ComM_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_Init_Start */

#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Return
#endif
#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Return)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Return
extern void SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Return(void);
#else
#define SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Return */

#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Start
#endif
#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Start)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Start
extern void SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Start(void);
#else
#define SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_MainFunction_ComMChannel_FD_CAN1_Start */

#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Return
#endif
#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Return)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Return
extern void SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Return(void);
#else
#define SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Return */

#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Start
#endif
#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Start)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Start
extern void SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Start(void);
#else
#define SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN1_Start */

#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Return
#endif
#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Return)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Return
extern void SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Return(void);
#else
#define SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Return */

#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Start
#endif
#if defined(SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Start)
#undef SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Start
extern void SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Start(void);
#else
#define SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_MainFunction_ComMChannel_LIN2_Start */

#if defined(SchM_Schedulable_ComM_Nm_BusSleepMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_BusSleepMode_Return
#endif
#if defined(SchM_Schedulable_ComM_Nm_BusSleepMode_Return)
#undef SchM_Schedulable_ComM_Nm_BusSleepMode_Return
extern void SchM_Schedulable_ComM_Nm_BusSleepMode_Return(void);
#else
#define SchM_Schedulable_ComM_Nm_BusSleepMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_BusSleepMode_Return */

#if defined(SchM_Schedulable_ComM_Nm_BusSleepMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_BusSleepMode_Start
#endif
#if defined(SchM_Schedulable_ComM_Nm_BusSleepMode_Start)
#undef SchM_Schedulable_ComM_Nm_BusSleepMode_Start
extern void SchM_Schedulable_ComM_Nm_BusSleepMode_Start(void);
#else
#define SchM_Schedulable_ComM_Nm_BusSleepMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_BusSleepMode_Start */

#if defined(SchM_Schedulable_ComM_Nm_NetworkMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_NetworkMode_Return
#endif
#if defined(SchM_Schedulable_ComM_Nm_NetworkMode_Return)
#undef SchM_Schedulable_ComM_Nm_NetworkMode_Return
extern void SchM_Schedulable_ComM_Nm_NetworkMode_Return(void);
#else
#define SchM_Schedulable_ComM_Nm_NetworkMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_NetworkMode_Return */

#if defined(SchM_Schedulable_ComM_Nm_NetworkMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_NetworkMode_Start
#endif
#if defined(SchM_Schedulable_ComM_Nm_NetworkMode_Start)
#undef SchM_Schedulable_ComM_Nm_NetworkMode_Start
extern void SchM_Schedulable_ComM_Nm_NetworkMode_Start(void);
#else
#define SchM_Schedulable_ComM_Nm_NetworkMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_NetworkMode_Start */

#if defined(SchM_Schedulable_ComM_Nm_NetworkStartIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_NetworkStartIndication_Return
#endif
#if defined(SchM_Schedulable_ComM_Nm_NetworkStartIndication_Return)
#undef SchM_Schedulable_ComM_Nm_NetworkStartIndication_Return
extern void SchM_Schedulable_ComM_Nm_NetworkStartIndication_Return(void);
#else
#define SchM_Schedulable_ComM_Nm_NetworkStartIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_NetworkStartIndication_Return */

#if defined(SchM_Schedulable_ComM_Nm_NetworkStartIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_NetworkStartIndication_Start
#endif
#if defined(SchM_Schedulable_ComM_Nm_NetworkStartIndication_Start)
#undef SchM_Schedulable_ComM_Nm_NetworkStartIndication_Start
extern void SchM_Schedulable_ComM_Nm_NetworkStartIndication_Start(void);
#else
#define SchM_Schedulable_ComM_Nm_NetworkStartIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_NetworkStartIndication_Start */

#if defined(SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Return
#endif
#if defined(SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Return)
#undef SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Return
extern void SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Return(void);
#else
#define SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Return */

#if defined(SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Start
#endif
#if defined(SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Start)
#undef SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Start
extern void SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Start(void);
#else
#define SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_PrepareBusSleepMode_Start */

#if defined(SchM_Schedulable_ComM_Nm_RestartIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_RestartIndication_Return
#endif
#if defined(SchM_Schedulable_ComM_Nm_RestartIndication_Return)
#undef SchM_Schedulable_ComM_Nm_RestartIndication_Return
extern void SchM_Schedulable_ComM_Nm_RestartIndication_Return(void);
#else
#define SchM_Schedulable_ComM_Nm_RestartIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_RestartIndication_Return */

#if defined(SchM_Schedulable_ComM_Nm_RestartIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_Nm_RestartIndication_Start
#endif
#if defined(SchM_Schedulable_ComM_Nm_RestartIndication_Start)
#undef SchM_Schedulable_ComM_Nm_RestartIndication_Start
extern void SchM_Schedulable_ComM_Nm_RestartIndication_Start(void);
#else
#define SchM_Schedulable_ComM_Nm_RestartIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_Nm_RestartIndication_Start */

#if defined(SchM_Schedulable_ComM_RequestComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_RequestComMode_Return
#endif
#if defined(SchM_Schedulable_ComM_RequestComMode_Return)
#undef SchM_Schedulable_ComM_RequestComMode_Return
extern void SchM_Schedulable_ComM_RequestComMode_Return(void);
#else
#define SchM_Schedulable_ComM_RequestComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_ComM_RequestComMode_Return */

#if defined(SchM_Schedulable_ComM_RequestComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_ComM_RequestComMode_Start
#endif
#if defined(SchM_Schedulable_ComM_RequestComMode_Start)
#undef SchM_Schedulable_ComM_RequestComMode_Start
extern void SchM_Schedulable_ComM_RequestComMode_Start(void);
#else
#define SchM_Schedulable_ComM_RequestComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_ComM_RequestComMode_Start */

#if defined(SchM_Schedulable_Com_CopyRxData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_CopyRxData_Return
#endif
#if defined(SchM_Schedulable_Com_CopyRxData_Return)
#undef SchM_Schedulable_Com_CopyRxData_Return
extern void SchM_Schedulable_Com_CopyRxData_Return(void);
#else
#define SchM_Schedulable_Com_CopyRxData_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_CopyRxData_Return */

#if defined(SchM_Schedulable_Com_CopyRxData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_CopyRxData_Start
#endif
#if defined(SchM_Schedulable_Com_CopyRxData_Start)
#undef SchM_Schedulable_Com_CopyRxData_Start
extern void SchM_Schedulable_Com_CopyRxData_Start(void);
#else
#define SchM_Schedulable_Com_CopyRxData_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_CopyRxData_Start */

#if defined(SchM_Schedulable_Com_CopyTxData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_CopyTxData_Return
#endif
#if defined(SchM_Schedulable_Com_CopyTxData_Return)
#undef SchM_Schedulable_Com_CopyTxData_Return
extern void SchM_Schedulable_Com_CopyTxData_Return(void);
#else
#define SchM_Schedulable_Com_CopyTxData_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_CopyTxData_Return */

#if defined(SchM_Schedulable_Com_CopyTxData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_CopyTxData_Start
#endif
#if defined(SchM_Schedulable_Com_CopyTxData_Start)
#undef SchM_Schedulable_Com_CopyTxData_Start
extern void SchM_Schedulable_Com_CopyTxData_Start(void);
#else
#define SchM_Schedulable_Com_CopyTxData_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_CopyTxData_Start */

#if defined(SchM_Schedulable_Com_GetStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_GetStatus_Return
#endif
#if defined(SchM_Schedulable_Com_GetStatus_Return)
#undef SchM_Schedulable_Com_GetStatus_Return
extern void SchM_Schedulable_Com_GetStatus_Return(void);
#else
#define SchM_Schedulable_Com_GetStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_GetStatus_Return */

#if defined(SchM_Schedulable_Com_GetStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_GetStatus_Start
#endif
#if defined(SchM_Schedulable_Com_GetStatus_Start)
#undef SchM_Schedulable_Com_GetStatus_Start
extern void SchM_Schedulable_Com_GetStatus_Start(void);
#else
#define SchM_Schedulable_Com_GetStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_GetStatus_Start */

#if defined(SchM_Schedulable_Com_IpduGroupStart_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_IpduGroupStart_Return
#endif
#if defined(SchM_Schedulable_Com_IpduGroupStart_Return)
#undef SchM_Schedulable_Com_IpduGroupStart_Return
extern void SchM_Schedulable_Com_IpduGroupStart_Return(void);
#else
#define SchM_Schedulable_Com_IpduGroupStart_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_IpduGroupStart_Return */

#if defined(SchM_Schedulable_Com_IpduGroupStart_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_IpduGroupStart_Start
#endif
#if defined(SchM_Schedulable_Com_IpduGroupStart_Start)
#undef SchM_Schedulable_Com_IpduGroupStart_Start
extern void SchM_Schedulable_Com_IpduGroupStart_Start(void);
#else
#define SchM_Schedulable_Com_IpduGroupStart_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_IpduGroupStart_Start */

#if defined(SchM_Schedulable_Com_IpduGroupStop_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_IpduGroupStop_Return
#endif
#if defined(SchM_Schedulable_Com_IpduGroupStop_Return)
#undef SchM_Schedulable_Com_IpduGroupStop_Return
extern void SchM_Schedulable_Com_IpduGroupStop_Return(void);
#else
#define SchM_Schedulable_Com_IpduGroupStop_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_IpduGroupStop_Return */

#if defined(SchM_Schedulable_Com_IpduGroupStop_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_IpduGroupStop_Start
#endif
#if defined(SchM_Schedulable_Com_IpduGroupStop_Start)
#undef SchM_Schedulable_Com_IpduGroupStop_Start
extern void SchM_Schedulable_Com_IpduGroupStop_Start(void);
#else
#define SchM_Schedulable_Com_IpduGroupStop_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_IpduGroupStop_Start */

#if defined(SchM_Schedulable_Com_MainFunctionRouteSignals_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_MainFunctionRouteSignals_Return
#endif
#if defined(SchM_Schedulable_Com_MainFunctionRouteSignals_Return)
#undef SchM_Schedulable_Com_MainFunctionRouteSignals_Return
extern void SchM_Schedulable_Com_MainFunctionRouteSignals_Return(void);
#else
#define SchM_Schedulable_Com_MainFunctionRouteSignals_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_MainFunctionRouteSignals_Return */

#if defined(SchM_Schedulable_Com_MainFunctionRouteSignals_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_MainFunctionRouteSignals_Start
#endif
#if defined(SchM_Schedulable_Com_MainFunctionRouteSignals_Start)
#undef SchM_Schedulable_Com_MainFunctionRouteSignals_Start
extern void SchM_Schedulable_Com_MainFunctionRouteSignals_Start(void);
#else
#define SchM_Schedulable_Com_MainFunctionRouteSignals_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_MainFunctionRouteSignals_Start */

#if defined(SchM_Schedulable_Com_MainFunctionRx_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_MainFunctionRx_Return
#endif
#if defined(SchM_Schedulable_Com_MainFunctionRx_Return)
#undef SchM_Schedulable_Com_MainFunctionRx_Return
extern void SchM_Schedulable_Com_MainFunctionRx_Return(void);
#else
#define SchM_Schedulable_Com_MainFunctionRx_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_MainFunctionRx_Return */

#if defined(SchM_Schedulable_Com_MainFunctionRx_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_MainFunctionRx_Start
#endif
#if defined(SchM_Schedulable_Com_MainFunctionRx_Start)
#undef SchM_Schedulable_Com_MainFunctionRx_Start
extern void SchM_Schedulable_Com_MainFunctionRx_Start(void);
#else
#define SchM_Schedulable_Com_MainFunctionRx_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_MainFunctionRx_Start */

#if defined(SchM_Schedulable_Com_MainFunctionTx_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_MainFunctionTx_Return
#endif
#if defined(SchM_Schedulable_Com_MainFunctionTx_Return)
#undef SchM_Schedulable_Com_MainFunctionTx_Return
extern void SchM_Schedulable_Com_MainFunctionTx_Return(void);
#else
#define SchM_Schedulable_Com_MainFunctionTx_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_MainFunctionTx_Return */

#if defined(SchM_Schedulable_Com_MainFunctionTx_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_MainFunctionTx_Start
#endif
#if defined(SchM_Schedulable_Com_MainFunctionTx_Start)
#undef SchM_Schedulable_Com_MainFunctionTx_Start
extern void SchM_Schedulable_Com_MainFunctionTx_Start(void);
#else
#define SchM_Schedulable_Com_MainFunctionTx_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_MainFunctionTx_Start */

#if defined(SchM_Schedulable_Com_ReceiveSignalGroupArray_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_ReceiveSignalGroupArray_Return
#endif
#if defined(SchM_Schedulable_Com_ReceiveSignalGroupArray_Return)
#undef SchM_Schedulable_Com_ReceiveSignalGroupArray_Return
extern void SchM_Schedulable_Com_ReceiveSignalGroupArray_Return(void);
#else
#define SchM_Schedulable_Com_ReceiveSignalGroupArray_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_ReceiveSignalGroupArray_Return */

#if defined(SchM_Schedulable_Com_ReceiveSignalGroupArray_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_ReceiveSignalGroupArray_Start
#endif
#if defined(SchM_Schedulable_Com_ReceiveSignalGroupArray_Start)
#undef SchM_Schedulable_Com_ReceiveSignalGroupArray_Start
extern void SchM_Schedulable_Com_ReceiveSignalGroupArray_Start(void);
#else
#define SchM_Schedulable_Com_ReceiveSignalGroupArray_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_ReceiveSignalGroupArray_Start */

#if defined(SchM_Schedulable_Com_ReceiveSignalGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_ReceiveSignalGroup_Return
#endif
#if defined(SchM_Schedulable_Com_ReceiveSignalGroup_Return)
#undef SchM_Schedulable_Com_ReceiveSignalGroup_Return
extern void SchM_Schedulable_Com_ReceiveSignalGroup_Return(void);
#else
#define SchM_Schedulable_Com_ReceiveSignalGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_ReceiveSignalGroup_Return */

#if defined(SchM_Schedulable_Com_ReceiveSignalGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_ReceiveSignalGroup_Start
#endif
#if defined(SchM_Schedulable_Com_ReceiveSignalGroup_Start)
#undef SchM_Schedulable_Com_ReceiveSignalGroup_Start
extern void SchM_Schedulable_Com_ReceiveSignalGroup_Start(void);
#else
#define SchM_Schedulable_Com_ReceiveSignalGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_ReceiveSignalGroup_Start */

#if defined(SchM_Schedulable_Com_ReceiveSignal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_ReceiveSignal_Return
#endif
#if defined(SchM_Schedulable_Com_ReceiveSignal_Return)
#undef SchM_Schedulable_Com_ReceiveSignal_Return
extern void SchM_Schedulable_Com_ReceiveSignal_Return(void);
#else
#define SchM_Schedulable_Com_ReceiveSignal_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_ReceiveSignal_Return */

#if defined(SchM_Schedulable_Com_ReceiveSignal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_ReceiveSignal_Start
#endif
#if defined(SchM_Schedulable_Com_ReceiveSignal_Start)
#undef SchM_Schedulable_Com_ReceiveSignal_Start
extern void SchM_Schedulable_Com_ReceiveSignal_Start(void);
#else
#define SchM_Schedulable_Com_ReceiveSignal_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_ReceiveSignal_Start */

#if defined(SchM_Schedulable_Com_RxIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_RxIndication_Return
#endif
#if defined(SchM_Schedulable_Com_RxIndication_Return)
#undef SchM_Schedulable_Com_RxIndication_Return
extern void SchM_Schedulable_Com_RxIndication_Return(void);
#else
#define SchM_Schedulable_Com_RxIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_RxIndication_Return */

#if defined(SchM_Schedulable_Com_RxIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_RxIndication_Start
#endif
#if defined(SchM_Schedulable_Com_RxIndication_Start)
#undef SchM_Schedulable_Com_RxIndication_Start
extern void SchM_Schedulable_Com_RxIndication_Start(void);
#else
#define SchM_Schedulable_Com_RxIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_RxIndication_Start */

#if defined(SchM_Schedulable_Com_SendSignalGroupArray_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SendSignalGroupArray_Return
#endif
#if defined(SchM_Schedulable_Com_SendSignalGroupArray_Return)
#undef SchM_Schedulable_Com_SendSignalGroupArray_Return
extern void SchM_Schedulable_Com_SendSignalGroupArray_Return(void);
#else
#define SchM_Schedulable_Com_SendSignalGroupArray_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_SendSignalGroupArray_Return */

#if defined(SchM_Schedulable_Com_SendSignalGroupArray_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SendSignalGroupArray_Start
#endif
#if defined(SchM_Schedulable_Com_SendSignalGroupArray_Start)
#undef SchM_Schedulable_Com_SendSignalGroupArray_Start
extern void SchM_Schedulable_Com_SendSignalGroupArray_Start(void);
#else
#define SchM_Schedulable_Com_SendSignalGroupArray_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_SendSignalGroupArray_Start */

#if defined(SchM_Schedulable_Com_SendSignalGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SendSignalGroup_Return
#endif
#if defined(SchM_Schedulable_Com_SendSignalGroup_Return)
#undef SchM_Schedulable_Com_SendSignalGroup_Return
extern void SchM_Schedulable_Com_SendSignalGroup_Return(void);
#else
#define SchM_Schedulable_Com_SendSignalGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_SendSignalGroup_Return */

#if defined(SchM_Schedulable_Com_SendSignalGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SendSignalGroup_Start
#endif
#if defined(SchM_Schedulable_Com_SendSignalGroup_Start)
#undef SchM_Schedulable_Com_SendSignalGroup_Start
extern void SchM_Schedulable_Com_SendSignalGroup_Start(void);
#else
#define SchM_Schedulable_Com_SendSignalGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_SendSignalGroup_Start */

#if defined(SchM_Schedulable_Com_SendSignal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SendSignal_Return
#endif
#if defined(SchM_Schedulable_Com_SendSignal_Return)
#undef SchM_Schedulable_Com_SendSignal_Return
extern void SchM_Schedulable_Com_SendSignal_Return(void);
#else
#define SchM_Schedulable_Com_SendSignal_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_SendSignal_Return */

#if defined(SchM_Schedulable_Com_SendSignal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SendSignal_Start
#endif
#if defined(SchM_Schedulable_Com_SendSignal_Start)
#undef SchM_Schedulable_Com_SendSignal_Start
extern void SchM_Schedulable_Com_SendSignal_Start(void);
#else
#define SchM_Schedulable_Com_SendSignal_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_SendSignal_Start */

#if defined(SchM_Schedulable_Com_StartOfReception_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_StartOfReception_Return
#endif
#if defined(SchM_Schedulable_Com_StartOfReception_Return)
#undef SchM_Schedulable_Com_StartOfReception_Return
extern void SchM_Schedulable_Com_StartOfReception_Return(void);
#else
#define SchM_Schedulable_Com_StartOfReception_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_StartOfReception_Return */

#if defined(SchM_Schedulable_Com_StartOfReception_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_StartOfReception_Start
#endif
#if defined(SchM_Schedulable_Com_StartOfReception_Start)
#undef SchM_Schedulable_Com_StartOfReception_Start
extern void SchM_Schedulable_Com_StartOfReception_Start(void);
#else
#define SchM_Schedulable_Com_StartOfReception_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_StartOfReception_Start */

#if defined(SchM_Schedulable_Com_SwitchIpduTxMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SwitchIpduTxMode_Return
#endif
#if defined(SchM_Schedulable_Com_SwitchIpduTxMode_Return)
#undef SchM_Schedulable_Com_SwitchIpduTxMode_Return
extern void SchM_Schedulable_Com_SwitchIpduTxMode_Return(void);
#else
#define SchM_Schedulable_Com_SwitchIpduTxMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_SwitchIpduTxMode_Return */

#if defined(SchM_Schedulable_Com_SwitchIpduTxMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_SwitchIpduTxMode_Start
#endif
#if defined(SchM_Schedulable_Com_SwitchIpduTxMode_Start)
#undef SchM_Schedulable_Com_SwitchIpduTxMode_Start
extern void SchM_Schedulable_Com_SwitchIpduTxMode_Start(void);
#else
#define SchM_Schedulable_Com_SwitchIpduTxMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_SwitchIpduTxMode_Start */

#if defined(SchM_Schedulable_Com_TpRxIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TpRxIndication_Return
#endif
#if defined(SchM_Schedulable_Com_TpRxIndication_Return)
#undef SchM_Schedulable_Com_TpRxIndication_Return
extern void SchM_Schedulable_Com_TpRxIndication_Return(void);
#else
#define SchM_Schedulable_Com_TpRxIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_TpRxIndication_Return */

#if defined(SchM_Schedulable_Com_TpRxIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TpRxIndication_Start
#endif
#if defined(SchM_Schedulable_Com_TpRxIndication_Start)
#undef SchM_Schedulable_Com_TpRxIndication_Start
extern void SchM_Schedulable_Com_TpRxIndication_Start(void);
#else
#define SchM_Schedulable_Com_TpRxIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_TpRxIndication_Start */

#if defined(SchM_Schedulable_Com_TpTxConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TpTxConfirmation_Return
#endif
#if defined(SchM_Schedulable_Com_TpTxConfirmation_Return)
#undef SchM_Schedulable_Com_TpTxConfirmation_Return
extern void SchM_Schedulable_Com_TpTxConfirmation_Return(void);
#else
#define SchM_Schedulable_Com_TpTxConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_TpTxConfirmation_Return */

#if defined(SchM_Schedulable_Com_TpTxConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TpTxConfirmation_Start
#endif
#if defined(SchM_Schedulable_Com_TpTxConfirmation_Start)
#undef SchM_Schedulable_Com_TpTxConfirmation_Start
extern void SchM_Schedulable_Com_TpTxConfirmation_Start(void);
#else
#define SchM_Schedulable_Com_TpTxConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_TpTxConfirmation_Start */

#if defined(SchM_Schedulable_Com_TriggerIPDUSend_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TriggerIPDUSend_Return
#endif
#if defined(SchM_Schedulable_Com_TriggerIPDUSend_Return)
#undef SchM_Schedulable_Com_TriggerIPDUSend_Return
extern void SchM_Schedulable_Com_TriggerIPDUSend_Return(void);
#else
#define SchM_Schedulable_Com_TriggerIPDUSend_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_TriggerIPDUSend_Return */

#if defined(SchM_Schedulable_Com_TriggerIPDUSend_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TriggerIPDUSend_Start
#endif
#if defined(SchM_Schedulable_Com_TriggerIPDUSend_Start)
#undef SchM_Schedulable_Com_TriggerIPDUSend_Start
extern void SchM_Schedulable_Com_TriggerIPDUSend_Start(void);
#else
#define SchM_Schedulable_Com_TriggerIPDUSend_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_TriggerIPDUSend_Start */

#if defined(SchM_Schedulable_Com_TriggerTransmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TriggerTransmit_Return
#endif
#if defined(SchM_Schedulable_Com_TriggerTransmit_Return)
#undef SchM_Schedulable_Com_TriggerTransmit_Return
extern void SchM_Schedulable_Com_TriggerTransmit_Return(void);
#else
#define SchM_Schedulable_Com_TriggerTransmit_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_TriggerTransmit_Return */

#if defined(SchM_Schedulable_Com_TriggerTransmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TriggerTransmit_Start
#endif
#if defined(SchM_Schedulable_Com_TriggerTransmit_Start)
#undef SchM_Schedulable_Com_TriggerTransmit_Start
extern void SchM_Schedulable_Com_TriggerTransmit_Start(void);
#else
#define SchM_Schedulable_Com_TriggerTransmit_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_TriggerTransmit_Start */

#if defined(SchM_Schedulable_Com_TxConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TxConfirmation_Return
#endif
#if defined(SchM_Schedulable_Com_TxConfirmation_Return)
#undef SchM_Schedulable_Com_TxConfirmation_Return
extern void SchM_Schedulable_Com_TxConfirmation_Return(void);
#else
#define SchM_Schedulable_Com_TxConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_Com_TxConfirmation_Return */

#if defined(SchM_Schedulable_Com_TxConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Com_TxConfirmation_Start
#endif
#if defined(SchM_Schedulable_Com_TxConfirmation_Start)
#undef SchM_Schedulable_Com_TxConfirmation_Start
extern void SchM_Schedulable_Com_TxConfirmation_Start(void);
#else
#define SchM_Schedulable_Com_TxConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_Com_TxConfirmation_Start */

#if defined(SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Return)
#undef SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Return
extern void SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Return(void);
#else
#define SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Return */

#if defined(SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Start)
#undef SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Start
extern void SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Start(void);
#else
#define SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_76_HaeModule_HaeCryptoLib_MainFunction_Start */

#if defined(SchM_Schedulable_Crypto_CancelJob_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_CancelJob_Return
#endif
#if defined(SchM_Schedulable_Crypto_CancelJob_Return)
#undef SchM_Schedulable_Crypto_CancelJob_Return
extern void SchM_Schedulable_Crypto_CancelJob_Return(void);
#else
#define SchM_Schedulable_Crypto_CancelJob_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_CancelJob_Return */

#if defined(SchM_Schedulable_Crypto_CancelJob_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_CancelJob_Start
#endif
#if defined(SchM_Schedulable_Crypto_CancelJob_Start)
#undef SchM_Schedulable_Crypto_CancelJob_Start
extern void SchM_Schedulable_Crypto_CancelJob_Start(void);
#else
#define SchM_Schedulable_Crypto_CancelJob_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_CancelJob_Start */

#if defined(SchM_Schedulable_Crypto_CertificateParse_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_CertificateParse_Return
#endif
#if defined(SchM_Schedulable_Crypto_CertificateParse_Return)
#undef SchM_Schedulable_Crypto_CertificateParse_Return
extern void SchM_Schedulable_Crypto_CertificateParse_Return(void);
#else
#define SchM_Schedulable_Crypto_CertificateParse_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_CertificateParse_Return */

#if defined(SchM_Schedulable_Crypto_CertificateParse_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_CertificateParse_Start
#endif
#if defined(SchM_Schedulable_Crypto_CertificateParse_Start)
#undef SchM_Schedulable_Crypto_CertificateParse_Start
extern void SchM_Schedulable_Crypto_CertificateParse_Start(void);
#else
#define SchM_Schedulable_Crypto_CertificateParse_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_CertificateParse_Start */

#if defined(SchM_Schedulable_Crypto_CertificateVerify_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_CertificateVerify_Return
#endif
#if defined(SchM_Schedulable_Crypto_CertificateVerify_Return)
#undef SchM_Schedulable_Crypto_CertificateVerify_Return
extern void SchM_Schedulable_Crypto_CertificateVerify_Return(void);
#else
#define SchM_Schedulable_Crypto_CertificateVerify_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_CertificateVerify_Return */

#if defined(SchM_Schedulable_Crypto_CertificateVerify_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_CertificateVerify_Start
#endif
#if defined(SchM_Schedulable_Crypto_CertificateVerify_Start)
#undef SchM_Schedulable_Crypto_CertificateVerify_Start
extern void SchM_Schedulable_Crypto_CertificateVerify_Start(void);
#else
#define SchM_Schedulable_Crypto_CertificateVerify_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_CertificateVerify_Start */

#if defined(SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Return)
#undef SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Return
extern void SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Return */

#if defined(SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Start)
#undef SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Start
extern void SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_FormatKeyCatalogs_Start */

#if defined(SchM_Schedulable_Crypto_Exts_MPCompression_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_MPCompression_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_MPCompression_Return)
#undef SchM_Schedulable_Crypto_Exts_MPCompression_Return
extern void SchM_Schedulable_Crypto_Exts_MPCompression_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_MPCompression_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_MPCompression_Return */

#if defined(SchM_Schedulable_Crypto_Exts_MPCompression_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_MPCompression_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_MPCompression_Start)
#undef SchM_Schedulable_Crypto_Exts_MPCompression_Start
extern void SchM_Schedulable_Crypto_Exts_MPCompression_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_MPCompression_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_MPCompression_Start */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Return)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Return
extern void SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Return */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Start)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Start
extern void SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_BootFailure_Start */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootOk_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootOk_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootOk_Return)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootOk_Return
extern void SchM_Schedulable_Crypto_Exts_SHE_BootOk_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_BootOk_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_BootOk_Return */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootOk_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootOk_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_BootOk_Start)
#undef SchM_Schedulable_Crypto_Exts_SHE_BootOk_Start
extern void SchM_Schedulable_Crypto_Exts_SHE_BootOk_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_BootOk_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_BootOk_Start */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Return)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Return
extern void SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Return */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Start)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Start
extern void SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_DebugAuth_Start */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Return)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Return
extern void SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Return */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Start)
#undef SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Start
extern void SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_DebugChal_Start */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetId_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetId_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetId_Return)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetId_Return
extern void SchM_Schedulable_Crypto_Exts_SHE_GetId_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_GetId_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_GetId_Return */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetId_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetId_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetId_Start)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetId_Start
extern void SchM_Schedulable_Crypto_Exts_SHE_GetId_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_GetId_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_GetId_Start */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Return)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Return
extern void SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Return */

#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Start)
#undef SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Start
extern void SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SHE_GetStatus_Start */

#if defined(SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Return
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Return)
#undef SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Return
extern void SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Return(void);
#else
#define SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Return */

#if defined(SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Start
#endif
#if defined(SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Start)
#undef SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Start
extern void SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Start(void);
#else
#define SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Exts_SetSynchronousRequestsTimeout_Start */

#if defined(SchM_Schedulable_Crypto_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Crypto_GetVersionInfo_Return)
#undef SchM_Schedulable_Crypto_GetVersionInfo_Return
extern void SchM_Schedulable_Crypto_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Crypto_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Crypto_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Crypto_GetVersionInfo_Start)
#undef SchM_Schedulable_Crypto_GetVersionInfo_Start
extern void SchM_Schedulable_Crypto_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Crypto_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Crypto_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Init_Return
#endif
#if defined(SchM_Schedulable_Crypto_Init_Return)
#undef SchM_Schedulable_Crypto_Init_Return
extern void SchM_Schedulable_Crypto_Init_Return(void);
#else
#define SchM_Schedulable_Crypto_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Init_Return */

#if defined(SchM_Schedulable_Crypto_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Init_Start
#endif
#if defined(SchM_Schedulable_Crypto_Init_Start)
#undef SchM_Schedulable_Crypto_Init_Start
extern void SchM_Schedulable_Crypto_Init_Start(void);
#else
#define SchM_Schedulable_Crypto_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Init_Start */

#if defined(SchM_Schedulable_Crypto_KeyCopy_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyCopy_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyCopy_Return)
#undef SchM_Schedulable_Crypto_KeyCopy_Return
extern void SchM_Schedulable_Crypto_KeyCopy_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyCopy_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyCopy_Return */

#if defined(SchM_Schedulable_Crypto_KeyCopy_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyCopy_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyCopy_Start)
#undef SchM_Schedulable_Crypto_KeyCopy_Start
extern void SchM_Schedulable_Crypto_KeyCopy_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyCopy_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyCopy_Start */

#if defined(SchM_Schedulable_Crypto_KeyDerive_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyDerive_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyDerive_Return)
#undef SchM_Schedulable_Crypto_KeyDerive_Return
extern void SchM_Schedulable_Crypto_KeyDerive_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyDerive_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyDerive_Return */

#if defined(SchM_Schedulable_Crypto_KeyDerive_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyDerive_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyDerive_Start)
#undef SchM_Schedulable_Crypto_KeyDerive_Start
extern void SchM_Schedulable_Crypto_KeyDerive_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyDerive_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyDerive_Start */

#if defined(SchM_Schedulable_Crypto_KeyElementCopyPartial_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementCopyPartial_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementCopyPartial_Return)
#undef SchM_Schedulable_Crypto_KeyElementCopyPartial_Return
extern void SchM_Schedulable_Crypto_KeyElementCopyPartial_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyElementCopyPartial_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementCopyPartial_Return */

#if defined(SchM_Schedulable_Crypto_KeyElementCopyPartial_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementCopyPartial_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementCopyPartial_Start)
#undef SchM_Schedulable_Crypto_KeyElementCopyPartial_Start
extern void SchM_Schedulable_Crypto_KeyElementCopyPartial_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyElementCopyPartial_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementCopyPartial_Start */

#if defined(SchM_Schedulable_Crypto_KeyElementCopy_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementCopy_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementCopy_Return)
#undef SchM_Schedulable_Crypto_KeyElementCopy_Return
extern void SchM_Schedulable_Crypto_KeyElementCopy_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyElementCopy_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementCopy_Return */

#if defined(SchM_Schedulable_Crypto_KeyElementCopy_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementCopy_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementCopy_Start)
#undef SchM_Schedulable_Crypto_KeyElementCopy_Start
extern void SchM_Schedulable_Crypto_KeyElementCopy_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyElementCopy_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementCopy_Start */

#if defined(SchM_Schedulable_Crypto_KeyElementGet_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementGet_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementGet_Return)
#undef SchM_Schedulable_Crypto_KeyElementGet_Return
extern void SchM_Schedulable_Crypto_KeyElementGet_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyElementGet_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementGet_Return */

#if defined(SchM_Schedulable_Crypto_KeyElementGet_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementGet_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementGet_Start)
#undef SchM_Schedulable_Crypto_KeyElementGet_Start
extern void SchM_Schedulable_Crypto_KeyElementGet_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyElementGet_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementGet_Start */

#if defined(SchM_Schedulable_Crypto_KeyElementIdsGet_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementIdsGet_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementIdsGet_Return)
#undef SchM_Schedulable_Crypto_KeyElementIdsGet_Return
extern void SchM_Schedulable_Crypto_KeyElementIdsGet_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyElementIdsGet_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementIdsGet_Return */

#if defined(SchM_Schedulable_Crypto_KeyElementIdsGet_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementIdsGet_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementIdsGet_Start)
#undef SchM_Schedulable_Crypto_KeyElementIdsGet_Start
extern void SchM_Schedulable_Crypto_KeyElementIdsGet_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyElementIdsGet_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementIdsGet_Start */

#if defined(SchM_Schedulable_Crypto_KeyElementSet_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementSet_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementSet_Return)
#undef SchM_Schedulable_Crypto_KeyElementSet_Return
extern void SchM_Schedulable_Crypto_KeyElementSet_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyElementSet_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementSet_Return */

#if defined(SchM_Schedulable_Crypto_KeyElementSet_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyElementSet_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyElementSet_Start)
#undef SchM_Schedulable_Crypto_KeyElementSet_Start
extern void SchM_Schedulable_Crypto_KeyElementSet_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyElementSet_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyElementSet_Start */

#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Return)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Return
extern void SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Return */

#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Start)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Start
extern void SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyExchangeCalcPubVal_Start */

#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Return)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Return
extern void SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Return */

#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Start)
#undef SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Start
extern void SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyExchangeCalcSecret_Start */

#if defined(SchM_Schedulable_Crypto_KeyGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyGenerate_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeyGenerate_Return)
#undef SchM_Schedulable_Crypto_KeyGenerate_Return
extern void SchM_Schedulable_Crypto_KeyGenerate_Return(void);
#else
#define SchM_Schedulable_Crypto_KeyGenerate_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyGenerate_Return */

#if defined(SchM_Schedulable_Crypto_KeyGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeyGenerate_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeyGenerate_Start)
#undef SchM_Schedulable_Crypto_KeyGenerate_Start
extern void SchM_Schedulable_Crypto_KeyGenerate_Start(void);
#else
#define SchM_Schedulable_Crypto_KeyGenerate_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeyGenerate_Start */

#if defined(SchM_Schedulable_Crypto_KeySetValid_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeySetValid_Return
#endif
#if defined(SchM_Schedulable_Crypto_KeySetValid_Return)
#undef SchM_Schedulable_Crypto_KeySetValid_Return
extern void SchM_Schedulable_Crypto_KeySetValid_Return(void);
#else
#define SchM_Schedulable_Crypto_KeySetValid_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeySetValid_Return */

#if defined(SchM_Schedulable_Crypto_KeySetValid_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_KeySetValid_Start
#endif
#if defined(SchM_Schedulable_Crypto_KeySetValid_Start)
#undef SchM_Schedulable_Crypto_KeySetValid_Start
extern void SchM_Schedulable_Crypto_KeySetValid_Start(void);
#else
#define SchM_Schedulable_Crypto_KeySetValid_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_KeySetValid_Start */

#if defined(SchM_Schedulable_Crypto_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Crypto_MainFunction_Return)
#undef SchM_Schedulable_Crypto_MainFunction_Return
extern void SchM_Schedulable_Crypto_MainFunction_Return(void);
#else
#define SchM_Schedulable_Crypto_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_MainFunction_Return */

#if defined(SchM_Schedulable_Crypto_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Crypto_MainFunction_Start)
#undef SchM_Schedulable_Crypto_MainFunction_Start
extern void SchM_Schedulable_Crypto_MainFunction_Start(void);
#else
#define SchM_Schedulable_Crypto_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_MainFunction_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu0_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu1_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu2_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu3_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu4_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu5_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu6_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredGP_Isr_Start */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Return
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Return)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Return
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Return(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Return */

#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Start
#endif
#if defined(SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Start)
#undef SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Start
extern void SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Start(void);
#else
#define SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_Mu_Ip_Mu7_OredRx_Isr_Start */

#if defined(SchM_Schedulable_Crypto_ProcessJob_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_ProcessJob_Return
#endif
#if defined(SchM_Schedulable_Crypto_ProcessJob_Return)
#undef SchM_Schedulable_Crypto_ProcessJob_Return
extern void SchM_Schedulable_Crypto_ProcessJob_Return(void);
#else
#define SchM_Schedulable_Crypto_ProcessJob_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_ProcessJob_Return */

#if defined(SchM_Schedulable_Crypto_ProcessJob_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_ProcessJob_Start
#endif
#if defined(SchM_Schedulable_Crypto_ProcessJob_Start)
#undef SchM_Schedulable_Crypto_ProcessJob_Start
extern void SchM_Schedulable_Crypto_ProcessJob_Start(void);
#else
#define SchM_Schedulable_Crypto_ProcessJob_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_ProcessJob_Start */

#if defined(SchM_Schedulable_Crypto_RandomSeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_RandomSeed_Return
#endif
#if defined(SchM_Schedulable_Crypto_RandomSeed_Return)
#undef SchM_Schedulable_Crypto_RandomSeed_Return
extern void SchM_Schedulable_Crypto_RandomSeed_Return(void);
#else
#define SchM_Schedulable_Crypto_RandomSeed_Return() ((void)(0))
#endif /* SchM_Schedulable_Crypto_RandomSeed_Return */

#if defined(SchM_Schedulable_Crypto_RandomSeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Crypto_RandomSeed_Start
#endif
#if defined(SchM_Schedulable_Crypto_RandomSeed_Start)
#undef SchM_Schedulable_Crypto_RandomSeed_Start
extern void SchM_Schedulable_Crypto_RandomSeed_Start(void);
#else
#define SchM_Schedulable_Crypto_RandomSeed_Start() ((void)(0))
#endif /* SchM_Schedulable_Crypto_RandomSeed_Start */

#if defined(SchM_Schedulable_Csm_AEADDecrypt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_AEADDecrypt_Return
#endif
#if defined(SchM_Schedulable_Csm_AEADDecrypt_Return)
#undef SchM_Schedulable_Csm_AEADDecrypt_Return
extern void SchM_Schedulable_Csm_AEADDecrypt_Return(void);
#else
#define SchM_Schedulable_Csm_AEADDecrypt_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_AEADDecrypt_Return */

#if defined(SchM_Schedulable_Csm_AEADDecrypt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_AEADDecrypt_Start
#endif
#if defined(SchM_Schedulable_Csm_AEADDecrypt_Start)
#undef SchM_Schedulable_Csm_AEADDecrypt_Start
extern void SchM_Schedulable_Csm_AEADDecrypt_Start(void);
#else
#define SchM_Schedulable_Csm_AEADDecrypt_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_AEADDecrypt_Start */

#if defined(SchM_Schedulable_Csm_AEADEncrypt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_AEADEncrypt_Return
#endif
#if defined(SchM_Schedulable_Csm_AEADEncrypt_Return)
#undef SchM_Schedulable_Csm_AEADEncrypt_Return
extern void SchM_Schedulable_Csm_AEADEncrypt_Return(void);
#else
#define SchM_Schedulable_Csm_AEADEncrypt_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_AEADEncrypt_Return */

#if defined(SchM_Schedulable_Csm_AEADEncrypt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_AEADEncrypt_Start
#endif
#if defined(SchM_Schedulable_Csm_AEADEncrypt_Start)
#undef SchM_Schedulable_Csm_AEADEncrypt_Start
extern void SchM_Schedulable_Csm_AEADEncrypt_Start(void);
#else
#define SchM_Schedulable_Csm_AEADEncrypt_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_AEADEncrypt_Start */

#if defined(SchM_Schedulable_Csm_ApplicationCallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_ApplicationCallbackNotification_Return
#endif
#if defined(SchM_Schedulable_Csm_ApplicationCallbackNotification_Return)
#undef SchM_Schedulable_Csm_ApplicationCallbackNotification_Return
extern void SchM_Schedulable_Csm_ApplicationCallbackNotification_Return(void);
#else
#define SchM_Schedulable_Csm_ApplicationCallbackNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_ApplicationCallbackNotification_Return */

#if defined(SchM_Schedulable_Csm_ApplicationCallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_ApplicationCallbackNotification_Start
#endif
#if defined(SchM_Schedulable_Csm_ApplicationCallbackNotification_Start)
#undef SchM_Schedulable_Csm_ApplicationCallbackNotification_Start
extern void SchM_Schedulable_Csm_ApplicationCallbackNotification_Start(void);
#else
#define SchM_Schedulable_Csm_ApplicationCallbackNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_ApplicationCallbackNotification_Start */

#if defined(SchM_Schedulable_Csm_CallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_CallbackNotification_Return
#endif
#if defined(SchM_Schedulable_Csm_CallbackNotification_Return)
#undef SchM_Schedulable_Csm_CallbackNotification_Return
extern void SchM_Schedulable_Csm_CallbackNotification_Return(void);
#else
#define SchM_Schedulable_Csm_CallbackNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_CallbackNotification_Return */

#if defined(SchM_Schedulable_Csm_CallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_CallbackNotification_Start
#endif
#if defined(SchM_Schedulable_Csm_CallbackNotification_Start)
#undef SchM_Schedulable_Csm_CallbackNotification_Start
extern void SchM_Schedulable_Csm_CallbackNotification_Start(void);
#else
#define SchM_Schedulable_Csm_CallbackNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_CallbackNotification_Start */

#if defined(SchM_Schedulable_Csm_CancelJob_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_CancelJob_Return
#endif
#if defined(SchM_Schedulable_Csm_CancelJob_Return)
#undef SchM_Schedulable_Csm_CancelJob_Return
extern void SchM_Schedulable_Csm_CancelJob_Return(void);
#else
#define SchM_Schedulable_Csm_CancelJob_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_CancelJob_Return */

#if defined(SchM_Schedulable_Csm_CancelJob_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_CancelJob_Start
#endif
#if defined(SchM_Schedulable_Csm_CancelJob_Start)
#undef SchM_Schedulable_Csm_CancelJob_Start
extern void SchM_Schedulable_Csm_CancelJob_Start(void);
#else
#define SchM_Schedulable_Csm_CancelJob_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_CancelJob_Start */

#if defined(SchM_Schedulable_Csm_Decrypt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Decrypt_Return
#endif
#if defined(SchM_Schedulable_Csm_Decrypt_Return)
#undef SchM_Schedulable_Csm_Decrypt_Return
extern void SchM_Schedulable_Csm_Decrypt_Return(void);
#else
#define SchM_Schedulable_Csm_Decrypt_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_Decrypt_Return */

#if defined(SchM_Schedulable_Csm_Decrypt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Decrypt_Start
#endif
#if defined(SchM_Schedulable_Csm_Decrypt_Start)
#undef SchM_Schedulable_Csm_Decrypt_Start
extern void SchM_Schedulable_Csm_Decrypt_Start(void);
#else
#define SchM_Schedulable_Csm_Decrypt_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_Decrypt_Start */

#if defined(SchM_Schedulable_Csm_Encrypt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Encrypt_Return
#endif
#if defined(SchM_Schedulable_Csm_Encrypt_Return)
#undef SchM_Schedulable_Csm_Encrypt_Return
extern void SchM_Schedulable_Csm_Encrypt_Return(void);
#else
#define SchM_Schedulable_Csm_Encrypt_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_Encrypt_Return */

#if defined(SchM_Schedulable_Csm_Encrypt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Encrypt_Start
#endif
#if defined(SchM_Schedulable_Csm_Encrypt_Start)
#undef SchM_Schedulable_Csm_Encrypt_Start
extern void SchM_Schedulable_Csm_Encrypt_Start(void);
#else
#define SchM_Schedulable_Csm_Encrypt_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_Encrypt_Start */

#if defined(SchM_Schedulable_Csm_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Csm_GetVersionInfo_Return)
#undef SchM_Schedulable_Csm_GetVersionInfo_Return
extern void SchM_Schedulable_Csm_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Csm_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Csm_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Csm_GetVersionInfo_Start)
#undef SchM_Schedulable_Csm_GetVersionInfo_Start
extern void SchM_Schedulable_Csm_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Csm_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Csm_Hash_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Hash_Return
#endif
#if defined(SchM_Schedulable_Csm_Hash_Return)
#undef SchM_Schedulable_Csm_Hash_Return
extern void SchM_Schedulable_Csm_Hash_Return(void);
#else
#define SchM_Schedulable_Csm_Hash_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_Hash_Return */

#if defined(SchM_Schedulable_Csm_Hash_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Hash_Start
#endif
#if defined(SchM_Schedulable_Csm_Hash_Start)
#undef SchM_Schedulable_Csm_Hash_Start
extern void SchM_Schedulable_Csm_Hash_Start(void);
#else
#define SchM_Schedulable_Csm_Hash_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_Hash_Start */

#if defined(SchM_Schedulable_Csm_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Init_Return
#endif
#if defined(SchM_Schedulable_Csm_Init_Return)
#undef SchM_Schedulable_Csm_Init_Return
extern void SchM_Schedulable_Csm_Init_Return(void);
#else
#define SchM_Schedulable_Csm_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_Init_Return */

#if defined(SchM_Schedulable_Csm_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_Init_Start
#endif
#if defined(SchM_Schedulable_Csm_Init_Start)
#undef SchM_Schedulable_Csm_Init_Start
extern void SchM_Schedulable_Csm_Init_Start(void);
#else
#define SchM_Schedulable_Csm_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_Init_Start */

#if defined(SchM_Schedulable_Csm_JobKeyDerive_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyDerive_Return
#endif
#if defined(SchM_Schedulable_Csm_JobKeyDerive_Return)
#undef SchM_Schedulable_Csm_JobKeyDerive_Return
extern void SchM_Schedulable_Csm_JobKeyDerive_Return(void);
#else
#define SchM_Schedulable_Csm_JobKeyDerive_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyDerive_Return */

#if defined(SchM_Schedulable_Csm_JobKeyDerive_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyDerive_Start
#endif
#if defined(SchM_Schedulable_Csm_JobKeyDerive_Start)
#undef SchM_Schedulable_Csm_JobKeyDerive_Start
extern void SchM_Schedulable_Csm_JobKeyDerive_Start(void);
#else
#define SchM_Schedulable_Csm_JobKeyDerive_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyDerive_Start */

#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Return
#endif
#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Return)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Return
extern void SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Return(void);
#else
#define SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Return */

#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Start
#endif
#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Start)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Start
extern void SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Start(void);
#else
#define SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyExchangeCalcPubVal_Start */

#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Return
#endif
#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Return)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Return
extern void SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Return(void);
#else
#define SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Return */

#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Start
#endif
#if defined(SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Start)
#undef SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Start
extern void SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Start(void);
#else
#define SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyExchangeCalcSecret_Start */

#if defined(SchM_Schedulable_Csm_JobKeyGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyGenerate_Return
#endif
#if defined(SchM_Schedulable_Csm_JobKeyGenerate_Return)
#undef SchM_Schedulable_Csm_JobKeyGenerate_Return
extern void SchM_Schedulable_Csm_JobKeyGenerate_Return(void);
#else
#define SchM_Schedulable_Csm_JobKeyGenerate_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyGenerate_Return */

#if defined(SchM_Schedulable_Csm_JobKeyGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeyGenerate_Start
#endif
#if defined(SchM_Schedulable_Csm_JobKeyGenerate_Start)
#undef SchM_Schedulable_Csm_JobKeyGenerate_Start
extern void SchM_Schedulable_Csm_JobKeyGenerate_Start(void);
#else
#define SchM_Schedulable_Csm_JobKeyGenerate_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeyGenerate_Start */

#if defined(SchM_Schedulable_Csm_JobKeySetValid_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeySetValid_Return
#endif
#if defined(SchM_Schedulable_Csm_JobKeySetValid_Return)
#undef SchM_Schedulable_Csm_JobKeySetValid_Return
extern void SchM_Schedulable_Csm_JobKeySetValid_Return(void);
#else
#define SchM_Schedulable_Csm_JobKeySetValid_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeySetValid_Return */

#if defined(SchM_Schedulable_Csm_JobKeySetValid_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobKeySetValid_Start
#endif
#if defined(SchM_Schedulable_Csm_JobKeySetValid_Start)
#undef SchM_Schedulable_Csm_JobKeySetValid_Start
extern void SchM_Schedulable_Csm_JobKeySetValid_Start(void);
#else
#define SchM_Schedulable_Csm_JobKeySetValid_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobKeySetValid_Start */

#if defined(SchM_Schedulable_Csm_JobRandomSeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobRandomSeed_Return
#endif
#if defined(SchM_Schedulable_Csm_JobRandomSeed_Return)
#undef SchM_Schedulable_Csm_JobRandomSeed_Return
extern void SchM_Schedulable_Csm_JobRandomSeed_Return(void);
#else
#define SchM_Schedulable_Csm_JobRandomSeed_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobRandomSeed_Return */

#if defined(SchM_Schedulable_Csm_JobRandomSeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_JobRandomSeed_Start
#endif
#if defined(SchM_Schedulable_Csm_JobRandomSeed_Start)
#undef SchM_Schedulable_Csm_JobRandomSeed_Start
extern void SchM_Schedulable_Csm_JobRandomSeed_Start(void);
#else
#define SchM_Schedulable_Csm_JobRandomSeed_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_JobRandomSeed_Start */

#if defined(SchM_Schedulable_Csm_KeyCopy_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyCopy_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyCopy_Return)
#undef SchM_Schedulable_Csm_KeyCopy_Return
extern void SchM_Schedulable_Csm_KeyCopy_Return(void);
#else
#define SchM_Schedulable_Csm_KeyCopy_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyCopy_Return */

#if defined(SchM_Schedulable_Csm_KeyCopy_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyCopy_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyCopy_Start)
#undef SchM_Schedulable_Csm_KeyCopy_Start
extern void SchM_Schedulable_Csm_KeyCopy_Start(void);
#else
#define SchM_Schedulable_Csm_KeyCopy_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyCopy_Start */

#if defined(SchM_Schedulable_Csm_KeyDerive_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyDerive_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyDerive_Return)
#undef SchM_Schedulable_Csm_KeyDerive_Return
extern void SchM_Schedulable_Csm_KeyDerive_Return(void);
#else
#define SchM_Schedulable_Csm_KeyDerive_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyDerive_Return */

#if defined(SchM_Schedulable_Csm_KeyDerive_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyDerive_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyDerive_Start)
#undef SchM_Schedulable_Csm_KeyDerive_Start
extern void SchM_Schedulable_Csm_KeyDerive_Start(void);
#else
#define SchM_Schedulable_Csm_KeyDerive_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyDerive_Start */

#if defined(SchM_Schedulable_Csm_KeyElementCopyPartial_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementCopyPartial_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyElementCopyPartial_Return)
#undef SchM_Schedulable_Csm_KeyElementCopyPartial_Return
extern void SchM_Schedulable_Csm_KeyElementCopyPartial_Return(void);
#else
#define SchM_Schedulable_Csm_KeyElementCopyPartial_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementCopyPartial_Return */

#if defined(SchM_Schedulable_Csm_KeyElementCopyPartial_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementCopyPartial_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyElementCopyPartial_Start)
#undef SchM_Schedulable_Csm_KeyElementCopyPartial_Start
extern void SchM_Schedulable_Csm_KeyElementCopyPartial_Start(void);
#else
#define SchM_Schedulable_Csm_KeyElementCopyPartial_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementCopyPartial_Start */

#if defined(SchM_Schedulable_Csm_KeyElementCopy_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementCopy_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyElementCopy_Return)
#undef SchM_Schedulable_Csm_KeyElementCopy_Return
extern void SchM_Schedulable_Csm_KeyElementCopy_Return(void);
#else
#define SchM_Schedulable_Csm_KeyElementCopy_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementCopy_Return */

#if defined(SchM_Schedulable_Csm_KeyElementCopy_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementCopy_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyElementCopy_Start)
#undef SchM_Schedulable_Csm_KeyElementCopy_Start
extern void SchM_Schedulable_Csm_KeyElementCopy_Start(void);
#else
#define SchM_Schedulable_Csm_KeyElementCopy_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementCopy_Start */

#if defined(SchM_Schedulable_Csm_KeyElementGet_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementGet_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyElementGet_Return)
#undef SchM_Schedulable_Csm_KeyElementGet_Return
extern void SchM_Schedulable_Csm_KeyElementGet_Return(void);
#else
#define SchM_Schedulable_Csm_KeyElementGet_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementGet_Return */

#if defined(SchM_Schedulable_Csm_KeyElementGet_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementGet_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyElementGet_Start)
#undef SchM_Schedulable_Csm_KeyElementGet_Start
extern void SchM_Schedulable_Csm_KeyElementGet_Start(void);
#else
#define SchM_Schedulable_Csm_KeyElementGet_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementGet_Start */

#if defined(SchM_Schedulable_Csm_KeyElementSet_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementSet_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyElementSet_Return)
#undef SchM_Schedulable_Csm_KeyElementSet_Return
extern void SchM_Schedulable_Csm_KeyElementSet_Return(void);
#else
#define SchM_Schedulable_Csm_KeyElementSet_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementSet_Return */

#if defined(SchM_Schedulable_Csm_KeyElementSet_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyElementSet_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyElementSet_Start)
#undef SchM_Schedulable_Csm_KeyElementSet_Start
extern void SchM_Schedulable_Csm_KeyElementSet_Start(void);
#else
#define SchM_Schedulable_Csm_KeyElementSet_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyElementSet_Start */

#if defined(SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Return)
#undef SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Return
extern void SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Return(void);
#else
#define SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Return */

#if defined(SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Start)
#undef SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Start
extern void SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Start(void);
#else
#define SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyExchangeCalcPubVal_Start */

#if defined(SchM_Schedulable_Csm_KeyExchangeCalcSecret_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyExchangeCalcSecret_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyExchangeCalcSecret_Return)
#undef SchM_Schedulable_Csm_KeyExchangeCalcSecret_Return
extern void SchM_Schedulable_Csm_KeyExchangeCalcSecret_Return(void);
#else
#define SchM_Schedulable_Csm_KeyExchangeCalcSecret_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyExchangeCalcSecret_Return */

#if defined(SchM_Schedulable_Csm_KeyExchangeCalcSecret_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyExchangeCalcSecret_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyExchangeCalcSecret_Start)
#undef SchM_Schedulable_Csm_KeyExchangeCalcSecret_Start
extern void SchM_Schedulable_Csm_KeyExchangeCalcSecret_Start(void);
#else
#define SchM_Schedulable_Csm_KeyExchangeCalcSecret_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyExchangeCalcSecret_Start */

#if defined(SchM_Schedulable_Csm_KeyGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyGenerate_Return
#endif
#if defined(SchM_Schedulable_Csm_KeyGenerate_Return)
#undef SchM_Schedulable_Csm_KeyGenerate_Return
extern void SchM_Schedulable_Csm_KeyGenerate_Return(void);
#else
#define SchM_Schedulable_Csm_KeyGenerate_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyGenerate_Return */

#if defined(SchM_Schedulable_Csm_KeyGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeyGenerate_Start
#endif
#if defined(SchM_Schedulable_Csm_KeyGenerate_Start)
#undef SchM_Schedulable_Csm_KeyGenerate_Start
extern void SchM_Schedulable_Csm_KeyGenerate_Start(void);
#else
#define SchM_Schedulable_Csm_KeyGenerate_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeyGenerate_Start */

#if defined(SchM_Schedulable_Csm_KeySetValid_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeySetValid_Return
#endif
#if defined(SchM_Schedulable_Csm_KeySetValid_Return)
#undef SchM_Schedulable_Csm_KeySetValid_Return
extern void SchM_Schedulable_Csm_KeySetValid_Return(void);
#else
#define SchM_Schedulable_Csm_KeySetValid_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeySetValid_Return */

#if defined(SchM_Schedulable_Csm_KeySetValid_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_KeySetValid_Start
#endif
#if defined(SchM_Schedulable_Csm_KeySetValid_Start)
#undef SchM_Schedulable_Csm_KeySetValid_Start
extern void SchM_Schedulable_Csm_KeySetValid_Start(void);
#else
#define SchM_Schedulable_Csm_KeySetValid_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_KeySetValid_Start */

#if defined(SchM_Schedulable_Csm_MacGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_MacGenerate_Return
#endif
#if defined(SchM_Schedulable_Csm_MacGenerate_Return)
#undef SchM_Schedulable_Csm_MacGenerate_Return
extern void SchM_Schedulable_Csm_MacGenerate_Return(void);
#else
#define SchM_Schedulable_Csm_MacGenerate_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_MacGenerate_Return */

#if defined(SchM_Schedulable_Csm_MacGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_MacGenerate_Start
#endif
#if defined(SchM_Schedulable_Csm_MacGenerate_Start)
#undef SchM_Schedulable_Csm_MacGenerate_Start
extern void SchM_Schedulable_Csm_MacGenerate_Start(void);
#else
#define SchM_Schedulable_Csm_MacGenerate_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_MacGenerate_Start */

#if defined(SchM_Schedulable_Csm_MacVerify_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_MacVerify_Return
#endif
#if defined(SchM_Schedulable_Csm_MacVerify_Return)
#undef SchM_Schedulable_Csm_MacVerify_Return
extern void SchM_Schedulable_Csm_MacVerify_Return(void);
#else
#define SchM_Schedulable_Csm_MacVerify_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_MacVerify_Return */

#if defined(SchM_Schedulable_Csm_MacVerify_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_MacVerify_Start
#endif
#if defined(SchM_Schedulable_Csm_MacVerify_Start)
#undef SchM_Schedulable_Csm_MacVerify_Start
extern void SchM_Schedulable_Csm_MacVerify_Start(void);
#else
#define SchM_Schedulable_Csm_MacVerify_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_MacVerify_Start */

#if defined(SchM_Schedulable_Csm_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Csm_MainFunction_Return)
#undef SchM_Schedulable_Csm_MainFunction_Return
extern void SchM_Schedulable_Csm_MainFunction_Return(void);
#else
#define SchM_Schedulable_Csm_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_MainFunction_Return */

#if defined(SchM_Schedulable_Csm_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Csm_MainFunction_Start)
#undef SchM_Schedulable_Csm_MainFunction_Start
extern void SchM_Schedulable_Csm_MainFunction_Start(void);
#else
#define SchM_Schedulable_Csm_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_MainFunction_Start */

#if defined(SchM_Schedulable_Csm_RandomGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_RandomGenerate_Return
#endif
#if defined(SchM_Schedulable_Csm_RandomGenerate_Return)
#undef SchM_Schedulable_Csm_RandomGenerate_Return
extern void SchM_Schedulable_Csm_RandomGenerate_Return(void);
#else
#define SchM_Schedulable_Csm_RandomGenerate_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_RandomGenerate_Return */

#if defined(SchM_Schedulable_Csm_RandomGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_RandomGenerate_Start
#endif
#if defined(SchM_Schedulable_Csm_RandomGenerate_Start)
#undef SchM_Schedulable_Csm_RandomGenerate_Start
extern void SchM_Schedulable_Csm_RandomGenerate_Start(void);
#else
#define SchM_Schedulable_Csm_RandomGenerate_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_RandomGenerate_Start */

#if defined(SchM_Schedulable_Csm_RandomSeed_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_RandomSeed_Return
#endif
#if defined(SchM_Schedulable_Csm_RandomSeed_Return)
#undef SchM_Schedulable_Csm_RandomSeed_Return
extern void SchM_Schedulable_Csm_RandomSeed_Return(void);
#else
#define SchM_Schedulable_Csm_RandomSeed_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_RandomSeed_Return */

#if defined(SchM_Schedulable_Csm_RandomSeed_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_RandomSeed_Start
#endif
#if defined(SchM_Schedulable_Csm_RandomSeed_Start)
#undef SchM_Schedulable_Csm_RandomSeed_Start
extern void SchM_Schedulable_Csm_RandomSeed_Start(void);
#else
#define SchM_Schedulable_Csm_RandomSeed_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_RandomSeed_Start */

#if defined(SchM_Schedulable_Csm_SignatureGenerate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_SignatureGenerate_Return
#endif
#if defined(SchM_Schedulable_Csm_SignatureGenerate_Return)
#undef SchM_Schedulable_Csm_SignatureGenerate_Return
extern void SchM_Schedulable_Csm_SignatureGenerate_Return(void);
#else
#define SchM_Schedulable_Csm_SignatureGenerate_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_SignatureGenerate_Return */

#if defined(SchM_Schedulable_Csm_SignatureGenerate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_SignatureGenerate_Start
#endif
#if defined(SchM_Schedulable_Csm_SignatureGenerate_Start)
#undef SchM_Schedulable_Csm_SignatureGenerate_Start
extern void SchM_Schedulable_Csm_SignatureGenerate_Start(void);
#else
#define SchM_Schedulable_Csm_SignatureGenerate_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_SignatureGenerate_Start */

#if defined(SchM_Schedulable_Csm_SignatureVerify_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_SignatureVerify_Return
#endif
#if defined(SchM_Schedulable_Csm_SignatureVerify_Return)
#undef SchM_Schedulable_Csm_SignatureVerify_Return
extern void SchM_Schedulable_Csm_SignatureVerify_Return(void);
#else
#define SchM_Schedulable_Csm_SignatureVerify_Return() ((void)(0))
#endif /* SchM_Schedulable_Csm_SignatureVerify_Return */

#if defined(SchM_Schedulable_Csm_SignatureVerify_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Csm_SignatureVerify_Start
#endif
#if defined(SchM_Schedulable_Csm_SignatureVerify_Start)
#undef SchM_Schedulable_Csm_SignatureVerify_Start
extern void SchM_Schedulable_Csm_SignatureVerify_Start(void);
#else
#define SchM_Schedulable_Csm_SignatureVerify_Start() ((void)(0))
#endif /* SchM_Schedulable_Csm_SignatureVerify_Start */

#if defined(SchM_Schedulable_Dcm_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dcm_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Dcm_MainFunction_Return)
#undef SchM_Schedulable_Dcm_MainFunction_Return
extern void SchM_Schedulable_Dcm_MainFunction_Return(void);
#else
#define SchM_Schedulable_Dcm_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Dcm_MainFunction_Return */

#if defined(SchM_Schedulable_Dcm_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dcm_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Dcm_MainFunction_Start)
#undef SchM_Schedulable_Dcm_MainFunction_Start
extern void SchM_Schedulable_Dcm_MainFunction_Start(void);
#else
#define SchM_Schedulable_Dcm_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Dcm_MainFunction_Start */

#if defined(SchM_Schedulable_Dem_ClearDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ClearDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_ClearDTC_Return)
#undef SchM_Schedulable_Dem_ClearDTC_Return
extern void SchM_Schedulable_Dem_ClearDTC_Return(void);
#else
#define SchM_Schedulable_Dem_ClearDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_ClearDTC_Return */

#if defined(SchM_Schedulable_Dem_ClearDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ClearDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_ClearDTC_Start)
#undef SchM_Schedulable_Dem_ClearDTC_Start
extern void SchM_Schedulable_Dem_ClearDTC_Start(void);
#else
#define SchM_Schedulable_Dem_ClearDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_ClearDTC_Start */

#if defined(SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Return
#endif
#if defined(SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Return)
#undef SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Return
extern void SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Return(void);
#else
#define SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Return */

#if defined(SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Start
#endif
#if defined(SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Start)
#undef SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Start
extern void SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Start(void);
#else
#define SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_ClearPrestoredFreezeFrame_Start */

#if defined(SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Return)
#undef SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Return
extern void SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Return(void);
#else
#define SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Return */

#if defined(SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Start)
#undef SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Start
extern void SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Start(void);
#else
#define SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetAvailableOBDMIDs_Start */

#if defined(SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Return)
#undef SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Return
extern void SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Return(void);
#else
#define SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Return */

#if defined(SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Start)
#undef SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Start
extern void SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Start(void);
#else
#define SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetDTCOfOBDFreezeFrame_Start */

#if defined(SchM_Schedulable_Dem_DcmGetDTRData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetDTRData_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmGetDTRData_Return)
#undef SchM_Schedulable_Dem_DcmGetDTRData_Return
extern void SchM_Schedulable_Dem_DcmGetDTRData_Return(void);
#else
#define SchM_Schedulable_Dem_DcmGetDTRData_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetDTRData_Return */

#if defined(SchM_Schedulable_Dem_DcmGetDTRData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetDTRData_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmGetDTRData_Start)
#undef SchM_Schedulable_Dem_DcmGetDTRData_Start
extern void SchM_Schedulable_Dem_DcmGetDTRData_Start(void);
#else
#define SchM_Schedulable_Dem_DcmGetDTRData_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetDTRData_Start */

#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Return)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Return
extern void SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Return(void);
#else
#define SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Return */

#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Start)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Start
extern void SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Start(void);
#else
#define SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetInfoTypeValue08_Start */

#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Return)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Return
extern void SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Return(void);
#else
#define SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Return */

#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Start)
#undef SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Start
extern void SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Start(void);
#else
#define SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetInfoTypeValue0B_Start */

#if defined(SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Return)
#undef SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Return
extern void SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Return(void);
#else
#define SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Return */

#if defined(SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Start)
#undef SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Start
extern void SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Start(void);
#else
#define SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmGetNumTIDsOfOBDMID_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfOBDFreezeFrame_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID01_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID01_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID01_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID01_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID01_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID01_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID01_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID01_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID01_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID01_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID01_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID01_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID1C_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID1C_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID1C_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID1C_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID1C_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID1C_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID1C_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID1C_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID1C_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID1C_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID1C_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID1C_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID1C_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID1C_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID21_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID21_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID21_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID21_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID21_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID21_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID21_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID21_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID21_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID21_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID21_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID21_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID30_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID30_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID30_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID30_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID30_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID30_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID30_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID30_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID30_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID30_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID30_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID30_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID30_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID30_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID31_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID31_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID31_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID31_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID31_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID31_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID31_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID31_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID31_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID31_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID31_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID31_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID41_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID41_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID41_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID41_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID41_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID41_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID41_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID41_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID41_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID41_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID41_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID41_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID41_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID41_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4D_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4D_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4D_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4D_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID4D_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID4D_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID4D_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4D_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4D_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4D_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4D_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID4D_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID4D_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID4D_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4E_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4E_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4E_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4E_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID4E_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID4E_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID4E_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4E_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4E_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID4E_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID4E_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID4E_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID4E_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID4E_Start */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID91_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID91_Return
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID91_Return)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID91_Return
extern void SchM_Schedulable_Dem_DcmReadDataOfPID91_Return(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID91_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID91_Return */

#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID91_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID91_Start
#endif
#if defined(SchM_Schedulable_Dem_DcmReadDataOfPID91_Start)
#undef SchM_Schedulable_Dem_DcmReadDataOfPID91_Start
extern void SchM_Schedulable_Dem_DcmReadDataOfPID91_Start(void);
#else
#define SchM_Schedulable_Dem_DcmReadDataOfPID91_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DcmReadDataOfPID91_Start */

#if defined(SchM_Schedulable_Dem_DisableDTCRecordUpdate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DisableDTCRecordUpdate_Return
#endif
#if defined(SchM_Schedulable_Dem_DisableDTCRecordUpdate_Return)
#undef SchM_Schedulable_Dem_DisableDTCRecordUpdate_Return
extern void SchM_Schedulable_Dem_DisableDTCRecordUpdate_Return(void);
#else
#define SchM_Schedulable_Dem_DisableDTCRecordUpdate_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DisableDTCRecordUpdate_Return */

#if defined(SchM_Schedulable_Dem_DisableDTCRecordUpdate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DisableDTCRecordUpdate_Start
#endif
#if defined(SchM_Schedulable_Dem_DisableDTCRecordUpdate_Start)
#undef SchM_Schedulable_Dem_DisableDTCRecordUpdate_Start
extern void SchM_Schedulable_Dem_DisableDTCRecordUpdate_Start(void);
#else
#define SchM_Schedulable_Dem_DisableDTCRecordUpdate_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DisableDTCRecordUpdate_Start */

#if defined(SchM_Schedulable_Dem_DisableDTCSetting_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DisableDTCSetting_Return
#endif
#if defined(SchM_Schedulable_Dem_DisableDTCSetting_Return)
#undef SchM_Schedulable_Dem_DisableDTCSetting_Return
extern void SchM_Schedulable_Dem_DisableDTCSetting_Return(void);
#else
#define SchM_Schedulable_Dem_DisableDTCSetting_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_DisableDTCSetting_Return */

#if defined(SchM_Schedulable_Dem_DisableDTCSetting_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_DisableDTCSetting_Start
#endif
#if defined(SchM_Schedulable_Dem_DisableDTCSetting_Start)
#undef SchM_Schedulable_Dem_DisableDTCSetting_Start
extern void SchM_Schedulable_Dem_DisableDTCSetting_Start(void);
#else
#define SchM_Schedulable_Dem_DisableDTCSetting_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_DisableDTCSetting_Start */

#if defined(SchM_Schedulable_Dem_EnableDTCRecordUpdate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_EnableDTCRecordUpdate_Return
#endif
#if defined(SchM_Schedulable_Dem_EnableDTCRecordUpdate_Return)
#undef SchM_Schedulable_Dem_EnableDTCRecordUpdate_Return
extern void SchM_Schedulable_Dem_EnableDTCRecordUpdate_Return(void);
#else
#define SchM_Schedulable_Dem_EnableDTCRecordUpdate_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_EnableDTCRecordUpdate_Return */

#if defined(SchM_Schedulable_Dem_EnableDTCRecordUpdate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_EnableDTCRecordUpdate_Start
#endif
#if defined(SchM_Schedulable_Dem_EnableDTCRecordUpdate_Start)
#undef SchM_Schedulable_Dem_EnableDTCRecordUpdate_Start
extern void SchM_Schedulable_Dem_EnableDTCRecordUpdate_Start(void);
#else
#define SchM_Schedulable_Dem_EnableDTCRecordUpdate_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_EnableDTCRecordUpdate_Start */

#if defined(SchM_Schedulable_Dem_EnableDTCSetting_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_EnableDTCSetting_Return
#endif
#if defined(SchM_Schedulable_Dem_EnableDTCSetting_Return)
#undef SchM_Schedulable_Dem_EnableDTCSetting_Return
extern void SchM_Schedulable_Dem_EnableDTCSetting_Return(void);
#else
#define SchM_Schedulable_Dem_EnableDTCSetting_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_EnableDTCSetting_Return */

#if defined(SchM_Schedulable_Dem_EnableDTCSetting_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_EnableDTCSetting_Start
#endif
#if defined(SchM_Schedulable_Dem_EnableDTCSetting_Start)
#undef SchM_Schedulable_Dem_EnableDTCSetting_Start
extern void SchM_Schedulable_Dem_EnableDTCSetting_Start(void);
#else
#define SchM_Schedulable_Dem_EnableDTCSetting_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_EnableDTCSetting_Start */

#if defined(SchM_Schedulable_Dem_GetB1Counter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetB1Counter_Return
#endif
#if defined(SchM_Schedulable_Dem_GetB1Counter_Return)
#undef SchM_Schedulable_Dem_GetB1Counter_Return
extern void SchM_Schedulable_Dem_GetB1Counter_Return(void);
#else
#define SchM_Schedulable_Dem_GetB1Counter_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetB1Counter_Return */

#if defined(SchM_Schedulable_Dem_GetB1Counter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetB1Counter_Start
#endif
#if defined(SchM_Schedulable_Dem_GetB1Counter_Start)
#undef SchM_Schedulable_Dem_GetB1Counter_Start
extern void SchM_Schedulable_Dem_GetB1Counter_Start(void);
#else
#define SchM_Schedulable_Dem_GetB1Counter_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetB1Counter_Start */

#if defined(SchM_Schedulable_Dem_GetComponentFailed_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetComponentFailed_Return
#endif
#if defined(SchM_Schedulable_Dem_GetComponentFailed_Return)
#undef SchM_Schedulable_Dem_GetComponentFailed_Return
extern void SchM_Schedulable_Dem_GetComponentFailed_Return(void);
#else
#define SchM_Schedulable_Dem_GetComponentFailed_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetComponentFailed_Return */

#if defined(SchM_Schedulable_Dem_GetComponentFailed_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetComponentFailed_Start
#endif
#if defined(SchM_Schedulable_Dem_GetComponentFailed_Start)
#undef SchM_Schedulable_Dem_GetComponentFailed_Start
extern void SchM_Schedulable_Dem_GetComponentFailed_Start(void);
#else
#define SchM_Schedulable_Dem_GetComponentFailed_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetComponentFailed_Start */

#if defined(SchM_Schedulable_Dem_GetCycleQualified_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetCycleQualified_Return
#endif
#if defined(SchM_Schedulable_Dem_GetCycleQualified_Return)
#undef SchM_Schedulable_Dem_GetCycleQualified_Return
extern void SchM_Schedulable_Dem_GetCycleQualified_Return(void);
#else
#define SchM_Schedulable_Dem_GetCycleQualified_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetCycleQualified_Return */

#if defined(SchM_Schedulable_Dem_GetCycleQualified_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetCycleQualified_Start
#endif
#if defined(SchM_Schedulable_Dem_GetCycleQualified_Start)
#undef SchM_Schedulable_Dem_GetCycleQualified_Start
extern void SchM_Schedulable_Dem_GetCycleQualified_Start(void);
#else
#define SchM_Schedulable_Dem_GetCycleQualified_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetCycleQualified_Start */

#if defined(SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Return)
#undef SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Return
extern void SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Return(void);
#else
#define SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Return */

#if defined(SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Start)
#undef SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Start
extern void SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Start(void);
#else
#define SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCByOccurrenceTime_Start */

#if defined(SchM_Schedulable_Dem_GetDTCOfEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCOfEvent_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDTCOfEvent_Return)
#undef SchM_Schedulable_Dem_GetDTCOfEvent_Return
extern void SchM_Schedulable_Dem_GetDTCOfEvent_Return(void);
#else
#define SchM_Schedulable_Dem_GetDTCOfEvent_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCOfEvent_Return */

#if defined(SchM_Schedulable_Dem_GetDTCOfEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCOfEvent_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDTCOfEvent_Start)
#undef SchM_Schedulable_Dem_GetDTCOfEvent_Start
extern void SchM_Schedulable_Dem_GetDTCOfEvent_Start(void);
#else
#define SchM_Schedulable_Dem_GetDTCOfEvent_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCOfEvent_Start */

#if defined(SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Return)
#undef SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Return
extern void SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Return(void);
#else
#define SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Return */

#if defined(SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Start)
#undef SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Start
extern void SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Start(void);
#else
#define SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSelectionResultForClearDTC_Start */

#if defined(SchM_Schedulable_Dem_GetDTCSelectionResult_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSelectionResult_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSelectionResult_Return)
#undef SchM_Schedulable_Dem_GetDTCSelectionResult_Return
extern void SchM_Schedulable_Dem_GetDTCSelectionResult_Return(void);
#else
#define SchM_Schedulable_Dem_GetDTCSelectionResult_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSelectionResult_Return */

#if defined(SchM_Schedulable_Dem_GetDTCSelectionResult_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSelectionResult_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSelectionResult_Start)
#undef SchM_Schedulable_Dem_GetDTCSelectionResult_Start
extern void SchM_Schedulable_Dem_GetDTCSelectionResult_Start(void);
#else
#define SchM_Schedulable_Dem_GetDTCSelectionResult_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSelectionResult_Start */

#if defined(SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Return)
#undef SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Return
extern void SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Return(void);
#else
#define SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Return */

#if defined(SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Start)
#undef SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Start
extern void SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Start(void);
#else
#define SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSeverityAvailabilityMask_Start */

#if defined(SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Return)
#undef SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Return
extern void SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Return(void);
#else
#define SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Return */

#if defined(SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Start)
#undef SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Start
extern void SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Start(void);
#else
#define SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCStatusAvailabilityMask_Start */

#if defined(SchM_Schedulable_Dem_GetDTCSuppression_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSuppression_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSuppression_Return)
#undef SchM_Schedulable_Dem_GetDTCSuppression_Return
extern void SchM_Schedulable_Dem_GetDTCSuppression_Return(void);
#else
#define SchM_Schedulable_Dem_GetDTCSuppression_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSuppression_Return */

#if defined(SchM_Schedulable_Dem_GetDTCSuppression_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDTCSuppression_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDTCSuppression_Start)
#undef SchM_Schedulable_Dem_GetDTCSuppression_Start
extern void SchM_Schedulable_Dem_GetDTCSuppression_Start(void);
#else
#define SchM_Schedulable_Dem_GetDTCSuppression_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDTCSuppression_Start */

#if defined(SchM_Schedulable_Dem_GetDataOfPID21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDataOfPID21_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDataOfPID21_Return)
#undef SchM_Schedulable_Dem_GetDataOfPID21_Return
extern void SchM_Schedulable_Dem_GetDataOfPID21_Return(void);
#else
#define SchM_Schedulable_Dem_GetDataOfPID21_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDataOfPID21_Return */

#if defined(SchM_Schedulable_Dem_GetDataOfPID21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDataOfPID21_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDataOfPID21_Start)
#undef SchM_Schedulable_Dem_GetDataOfPID21_Start
extern void SchM_Schedulable_Dem_GetDataOfPID21_Start(void);
#else
#define SchM_Schedulable_Dem_GetDataOfPID21_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDataOfPID21_Start */

#if defined(SchM_Schedulable_Dem_GetDebouncingOfEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDebouncingOfEvent_Return
#endif
#if defined(SchM_Schedulable_Dem_GetDebouncingOfEvent_Return)
#undef SchM_Schedulable_Dem_GetDebouncingOfEvent_Return
extern void SchM_Schedulable_Dem_GetDebouncingOfEvent_Return(void);
#else
#define SchM_Schedulable_Dem_GetDebouncingOfEvent_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDebouncingOfEvent_Return */

#if defined(SchM_Schedulable_Dem_GetDebouncingOfEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetDebouncingOfEvent_Start
#endif
#if defined(SchM_Schedulable_Dem_GetDebouncingOfEvent_Start)
#undef SchM_Schedulable_Dem_GetDebouncingOfEvent_Start
extern void SchM_Schedulable_Dem_GetDebouncingOfEvent_Start(void);
#else
#define SchM_Schedulable_Dem_GetDebouncingOfEvent_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetDebouncingOfEvent_Start */

#if defined(SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Return
#endif
#if defined(SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Return)
#undef SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Return
extern void SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Return(void);
#else
#define SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Return */

#if defined(SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Start
#endif
#if defined(SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Start)
#undef SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Start
extern void SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Start(void);
#else
#define SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventExtendedDataRecordEx_Start */

#if defined(SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Return
#endif
#if defined(SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Return)
#undef SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Return
extern void SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Return(void);
#else
#define SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Return */

#if defined(SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Start
#endif
#if defined(SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Start)
#undef SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Start
extern void SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Start(void);
#else
#define SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventFreezeFrameDataEx_Start */

#if defined(SchM_Schedulable_Dem_GetEventMemoryOverflow_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventMemoryOverflow_Return
#endif
#if defined(SchM_Schedulable_Dem_GetEventMemoryOverflow_Return)
#undef SchM_Schedulable_Dem_GetEventMemoryOverflow_Return
extern void SchM_Schedulable_Dem_GetEventMemoryOverflow_Return(void);
#else
#define SchM_Schedulable_Dem_GetEventMemoryOverflow_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventMemoryOverflow_Return */

#if defined(SchM_Schedulable_Dem_GetEventMemoryOverflow_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventMemoryOverflow_Start
#endif
#if defined(SchM_Schedulable_Dem_GetEventMemoryOverflow_Start)
#undef SchM_Schedulable_Dem_GetEventMemoryOverflow_Start
extern void SchM_Schedulable_Dem_GetEventMemoryOverflow_Start(void);
#else
#define SchM_Schedulable_Dem_GetEventMemoryOverflow_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventMemoryOverflow_Start */

#if defined(SchM_Schedulable_Dem_GetEventUdsStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventUdsStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_GetEventUdsStatus_Return)
#undef SchM_Schedulable_Dem_GetEventUdsStatus_Return
extern void SchM_Schedulable_Dem_GetEventUdsStatus_Return(void);
#else
#define SchM_Schedulable_Dem_GetEventUdsStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventUdsStatus_Return */

#if defined(SchM_Schedulable_Dem_GetEventUdsStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetEventUdsStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_GetEventUdsStatus_Start)
#undef SchM_Schedulable_Dem_GetEventUdsStatus_Start
extern void SchM_Schedulable_Dem_GetEventUdsStatus_Start(void);
#else
#define SchM_Schedulable_Dem_GetEventUdsStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetEventUdsStatus_Start */

#if defined(SchM_Schedulable_Dem_GetFaultDetectionCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetFaultDetectionCounter_Return
#endif
#if defined(SchM_Schedulable_Dem_GetFaultDetectionCounter_Return)
#undef SchM_Schedulable_Dem_GetFaultDetectionCounter_Return
extern void SchM_Schedulable_Dem_GetFaultDetectionCounter_Return(void);
#else
#define SchM_Schedulable_Dem_GetFaultDetectionCounter_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetFaultDetectionCounter_Return */

#if defined(SchM_Schedulable_Dem_GetFaultDetectionCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetFaultDetectionCounter_Start
#endif
#if defined(SchM_Schedulable_Dem_GetFaultDetectionCounter_Start)
#undef SchM_Schedulable_Dem_GetFaultDetectionCounter_Start
extern void SchM_Schedulable_Dem_GetFaultDetectionCounter_Start(void);
#else
#define SchM_Schedulable_Dem_GetFaultDetectionCounter_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetFaultDetectionCounter_Start */

#if defined(SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Return)
#undef SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Return
extern void SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Return(void);
#else
#define SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Return */

#if defined(SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Start)
#undef SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Start
extern void SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Start(void);
#else
#define SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetFunctionalUnitOfDTC_Start */

#if defined(SchM_Schedulable_Dem_GetIUMPRDenCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetIUMPRDenCondition_Return
#endif
#if defined(SchM_Schedulable_Dem_GetIUMPRDenCondition_Return)
#undef SchM_Schedulable_Dem_GetIUMPRDenCondition_Return
extern void SchM_Schedulable_Dem_GetIUMPRDenCondition_Return(void);
#else
#define SchM_Schedulable_Dem_GetIUMPRDenCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetIUMPRDenCondition_Return */

#if defined(SchM_Schedulable_Dem_GetIUMPRDenCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetIUMPRDenCondition_Start
#endif
#if defined(SchM_Schedulable_Dem_GetIUMPRDenCondition_Start)
#undef SchM_Schedulable_Dem_GetIUMPRDenCondition_Start
extern void SchM_Schedulable_Dem_GetIUMPRDenCondition_Start(void);
#else
#define SchM_Schedulable_Dem_GetIUMPRDenCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetIUMPRDenCondition_Start */

#if defined(SchM_Schedulable_Dem_GetIndicatorStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetIndicatorStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_GetIndicatorStatus_Return)
#undef SchM_Schedulable_Dem_GetIndicatorStatus_Return
extern void SchM_Schedulable_Dem_GetIndicatorStatus_Return(void);
#else
#define SchM_Schedulable_Dem_GetIndicatorStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetIndicatorStatus_Return */

#if defined(SchM_Schedulable_Dem_GetIndicatorStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetIndicatorStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_GetIndicatorStatus_Start)
#undef SchM_Schedulable_Dem_GetIndicatorStatus_Start
extern void SchM_Schedulable_Dem_GetIndicatorStatus_Start(void);
#else
#define SchM_Schedulable_Dem_GetIndicatorStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetIndicatorStatus_Start */

#if defined(SchM_Schedulable_Dem_GetMonitorStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetMonitorStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_GetMonitorStatus_Return)
#undef SchM_Schedulable_Dem_GetMonitorStatus_Return
extern void SchM_Schedulable_Dem_GetMonitorStatus_Return(void);
#else
#define SchM_Schedulable_Dem_GetMonitorStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetMonitorStatus_Return */

#if defined(SchM_Schedulable_Dem_GetMonitorStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetMonitorStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_GetMonitorStatus_Start)
#undef SchM_Schedulable_Dem_GetMonitorStatus_Start
extern void SchM_Schedulable_Dem_GetMonitorStatus_Start(void);
#else
#define SchM_Schedulable_Dem_GetMonitorStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetMonitorStatus_Start */

#if defined(SchM_Schedulable_Dem_GetNextExtendedDataRecord_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextExtendedDataRecord_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNextExtendedDataRecord_Return)
#undef SchM_Schedulable_Dem_GetNextExtendedDataRecord_Return
extern void SchM_Schedulable_Dem_GetNextExtendedDataRecord_Return(void);
#else
#define SchM_Schedulable_Dem_GetNextExtendedDataRecord_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextExtendedDataRecord_Return */

#if defined(SchM_Schedulable_Dem_GetNextExtendedDataRecord_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextExtendedDataRecord_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNextExtendedDataRecord_Start)
#undef SchM_Schedulable_Dem_GetNextExtendedDataRecord_Start
extern void SchM_Schedulable_Dem_GetNextExtendedDataRecord_Start(void);
#else
#define SchM_Schedulable_Dem_GetNextExtendedDataRecord_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextExtendedDataRecord_Start */

#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Return)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Return
extern void SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Return(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Return */

#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Start)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Start
extern void SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Start(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredDTCAndFDC_Start */

#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Return)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Return
extern void SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Return(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Return */

#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Start)
#undef SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Start
extern void SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Start(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredDTCAndSeverity_Start */

#if defined(SchM_Schedulable_Dem_GetNextFilteredDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredDTC_Return)
#undef SchM_Schedulable_Dem_GetNextFilteredDTC_Return
extern void SchM_Schedulable_Dem_GetNextFilteredDTC_Return(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredDTC_Return */

#if defined(SchM_Schedulable_Dem_GetNextFilteredDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredDTC_Start)
#undef SchM_Schedulable_Dem_GetNextFilteredDTC_Start
extern void SchM_Schedulable_Dem_GetNextFilteredDTC_Start(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredDTC_Start */

#if defined(SchM_Schedulable_Dem_GetNextFilteredRecord_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredRecord_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredRecord_Return)
#undef SchM_Schedulable_Dem_GetNextFilteredRecord_Return
extern void SchM_Schedulable_Dem_GetNextFilteredRecord_Return(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredRecord_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredRecord_Return */

#if defined(SchM_Schedulable_Dem_GetNextFilteredRecord_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFilteredRecord_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNextFilteredRecord_Start)
#undef SchM_Schedulable_Dem_GetNextFilteredRecord_Start
extern void SchM_Schedulable_Dem_GetNextFilteredRecord_Start(void);
#else
#define SchM_Schedulable_Dem_GetNextFilteredRecord_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFilteredRecord_Start */

#if defined(SchM_Schedulable_Dem_GetNextFreezeFrameData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFreezeFrameData_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNextFreezeFrameData_Return)
#undef SchM_Schedulable_Dem_GetNextFreezeFrameData_Return
extern void SchM_Schedulable_Dem_GetNextFreezeFrameData_Return(void);
#else
#define SchM_Schedulable_Dem_GetNextFreezeFrameData_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFreezeFrameData_Return */

#if defined(SchM_Schedulable_Dem_GetNextFreezeFrameData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNextFreezeFrameData_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNextFreezeFrameData_Start)
#undef SchM_Schedulable_Dem_GetNextFreezeFrameData_Start
extern void SchM_Schedulable_Dem_GetNextFreezeFrameData_Start(void);
#else
#define SchM_Schedulable_Dem_GetNextFreezeFrameData_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNextFreezeFrameData_Start */

#if defined(SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Return)
#undef SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Return
extern void SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Return(void);
#else
#define SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Return */

#if defined(SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Start)
#undef SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Start
extern void SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Start(void);
#else
#define SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNumberOfEventMemoryEntries_Start */

#if defined(SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Return)
#undef SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Return
extern void SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Return(void);
#else
#define SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Return */

#if defined(SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Start)
#undef SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Start
extern void SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Start(void);
#else
#define SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNumberOfFilteredDTC_Start */

#if defined(SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Return
#endif
#if defined(SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Return)
#undef SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Return
extern void SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Return(void);
#else
#define SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Return */

#if defined(SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Start
#endif
#if defined(SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Start)
#undef SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Start
extern void SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Start(void);
#else
#define SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetNumberOfFreezeFrameRecords_Start */

#if defined(SchM_Schedulable_Dem_GetSeverityOfDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetSeverityOfDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_GetSeverityOfDTC_Return)
#undef SchM_Schedulable_Dem_GetSeverityOfDTC_Return
extern void SchM_Schedulable_Dem_GetSeverityOfDTC_Return(void);
#else
#define SchM_Schedulable_Dem_GetSeverityOfDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetSeverityOfDTC_Return */

#if defined(SchM_Schedulable_Dem_GetSeverityOfDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetSeverityOfDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_GetSeverityOfDTC_Start)
#undef SchM_Schedulable_Dem_GetSeverityOfDTC_Start
extern void SchM_Schedulable_Dem_GetSeverityOfDTC_Start(void);
#else
#define SchM_Schedulable_Dem_GetSeverityOfDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetSeverityOfDTC_Start */

#if defined(SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Return
#endif
#if defined(SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Return)
#undef SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Return
extern void SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Return(void);
#else
#define SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Return */

#if defined(SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Start
#endif
#if defined(SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Start)
#undef SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Start
extern void SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Start(void);
#else
#define SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetSizeOfExtendedDataRecordSelection_Start */

#if defined(SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Return
#endif
#if defined(SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Return)
#undef SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Return
extern void SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Return(void);
#else
#define SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Return */

#if defined(SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Start
#endif
#if defined(SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Start)
#undef SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Start
extern void SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Start(void);
#else
#define SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetSizeOfFreezeFrameSelection_Start */

#if defined(SchM_Schedulable_Dem_GetStatusOfDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetStatusOfDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_GetStatusOfDTC_Return)
#undef SchM_Schedulable_Dem_GetStatusOfDTC_Return
extern void SchM_Schedulable_Dem_GetStatusOfDTC_Return(void);
#else
#define SchM_Schedulable_Dem_GetStatusOfDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetStatusOfDTC_Return */

#if defined(SchM_Schedulable_Dem_GetStatusOfDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetStatusOfDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_GetStatusOfDTC_Start)
#undef SchM_Schedulable_Dem_GetStatusOfDTC_Start
extern void SchM_Schedulable_Dem_GetStatusOfDTC_Start(void);
#else
#define SchM_Schedulable_Dem_GetStatusOfDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetStatusOfDTC_Start */

#if defined(SchM_Schedulable_Dem_GetTranslationType_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetTranslationType_Return
#endif
#if defined(SchM_Schedulable_Dem_GetTranslationType_Return)
#undef SchM_Schedulable_Dem_GetTranslationType_Return
extern void SchM_Schedulable_Dem_GetTranslationType_Return(void);
#else
#define SchM_Schedulable_Dem_GetTranslationType_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetTranslationType_Return */

#if defined(SchM_Schedulable_Dem_GetTranslationType_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_GetTranslationType_Start
#endif
#if defined(SchM_Schedulable_Dem_GetTranslationType_Start)
#undef SchM_Schedulable_Dem_GetTranslationType_Start
extern void SchM_Schedulable_Dem_GetTranslationType_Start(void);
#else
#define SchM_Schedulable_Dem_GetTranslationType_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_GetTranslationType_Start */

#if defined(SchM_Schedulable_Dem_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_Init_Return
#endif
#if defined(SchM_Schedulable_Dem_Init_Return)
#undef SchM_Schedulable_Dem_Init_Return
extern void SchM_Schedulable_Dem_Init_Return(void);
#else
#define SchM_Schedulable_Dem_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_Init_Return */

#if defined(SchM_Schedulable_Dem_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_Init_Start
#endif
#if defined(SchM_Schedulable_Dem_Init_Start)
#undef SchM_Schedulable_Dem_Init_Start
extern void SchM_Schedulable_Dem_Init_Start(void);
#else
#define SchM_Schedulable_Dem_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_Init_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmClearDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmClearDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmClearDTC_Return)
#undef SchM_Schedulable_Dem_J1939DcmClearDTC_Return
extern void SchM_Schedulable_Dem_J1939DcmClearDTC_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmClearDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmClearDTC_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmClearDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmClearDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmClearDTC_Start)
#undef SchM_Schedulable_Dem_J1939DcmClearDTC_Start
extern void SchM_Schedulable_Dem_J1939DcmClearDTC_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmClearDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmClearDTC_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Return)
#undef SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Return
extern void SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Start)
#undef SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Start
extern void SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmFirstDTCwithLampStatus_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Return)
#undef SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Return
extern void SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Start)
#undef SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Start
extern void SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextDTCwithLampStatus_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Return)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Return
extern void SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Start)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Start
extern void SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextFilteredDTC_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Return)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Return
extern void SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Start)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Start
extern void SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextFilteredRatio_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Return)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Return
extern void SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Start)
#undef SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Start
extern void SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextFreezeFrame_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Return)
#undef SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Return
extern void SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Start)
#undef SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Start
extern void SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNextSPNInFreezeFrame_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Return)
#undef SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Return
extern void SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Start)
#undef SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Start
extern void SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmGetNumberOfFilteredDTC_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Return)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Return
extern void SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Start)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Start
extern void SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness1_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Return)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Return
extern void SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Start)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Start
extern void SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness2_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Return)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Return
extern void SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Start)
#undef SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Start
extern void SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmReadDiagnosticReadiness3_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Return)
#undef SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Return
extern void SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Start)
#undef SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Start
extern void SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmSetDTCFilter_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Return)
#undef SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Return
extern void SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Start)
#undef SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Start
extern void SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmSetFreezeFrameFilter_Start */

#if defined(SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Return
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Return)
#undef SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Return
extern void SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Return(void);
#else
#define SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Return */

#if defined(SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Start
#endif
#if defined(SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Start)
#undef SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Start
extern void SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Start(void);
#else
#define SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_J1939DcmSetRatioFilter_Start */

#if defined(SchM_Schedulable_Dem_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Dem_MainFunction_Return)
#undef SchM_Schedulable_Dem_MainFunction_Return
extern void SchM_Schedulable_Dem_MainFunction_Return(void);
#else
#define SchM_Schedulable_Dem_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_MainFunction_Return */

#if defined(SchM_Schedulable_Dem_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Dem_MainFunction_Start)
#undef SchM_Schedulable_Dem_MainFunction_Start
extern void SchM_Schedulable_Dem_MainFunction_Start(void);
#else
#define SchM_Schedulable_Dem_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_MainFunction_Start */

#if defined(SchM_Schedulable_Dem_PreInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_PreInit_Return
#endif
#if defined(SchM_Schedulable_Dem_PreInit_Return)
#undef SchM_Schedulable_Dem_PreInit_Return
extern void SchM_Schedulable_Dem_PreInit_Return(void);
#else
#define SchM_Schedulable_Dem_PreInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_PreInit_Return */

#if defined(SchM_Schedulable_Dem_PreInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_PreInit_Start
#endif
#if defined(SchM_Schedulable_Dem_PreInit_Start)
#undef SchM_Schedulable_Dem_PreInit_Start
extern void SchM_Schedulable_Dem_PreInit_Start(void);
#else
#define SchM_Schedulable_Dem_PreInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_PreInit_Start */

#if defined(SchM_Schedulable_Dem_PrestoreFreezeFrame_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_PrestoreFreezeFrame_Return
#endif
#if defined(SchM_Schedulable_Dem_PrestoreFreezeFrame_Return)
#undef SchM_Schedulable_Dem_PrestoreFreezeFrame_Return
extern void SchM_Schedulable_Dem_PrestoreFreezeFrame_Return(void);
#else
#define SchM_Schedulable_Dem_PrestoreFreezeFrame_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_PrestoreFreezeFrame_Return */

#if defined(SchM_Schedulable_Dem_PrestoreFreezeFrame_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_PrestoreFreezeFrame_Start
#endif
#if defined(SchM_Schedulable_Dem_PrestoreFreezeFrame_Start)
#undef SchM_Schedulable_Dem_PrestoreFreezeFrame_Start
extern void SchM_Schedulable_Dem_PrestoreFreezeFrame_Start(void);
#else
#define SchM_Schedulable_Dem_PrestoreFreezeFrame_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_PrestoreFreezeFrame_Start */

#if defined(SchM_Schedulable_Dem_ReadDataOfPID01_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ReadDataOfPID01_Return
#endif
#if defined(SchM_Schedulable_Dem_ReadDataOfPID01_Return)
#undef SchM_Schedulable_Dem_ReadDataOfPID01_Return
extern void SchM_Schedulable_Dem_ReadDataOfPID01_Return(void);
#else
#define SchM_Schedulable_Dem_ReadDataOfPID01_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_ReadDataOfPID01_Return */

#if defined(SchM_Schedulable_Dem_ReadDataOfPID01_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ReadDataOfPID01_Start
#endif
#if defined(SchM_Schedulable_Dem_ReadDataOfPID01_Start)
#undef SchM_Schedulable_Dem_ReadDataOfPID01_Start
extern void SchM_Schedulable_Dem_ReadDataOfPID01_Start(void);
#else
#define SchM_Schedulable_Dem_ReadDataOfPID01_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_ReadDataOfPID01_Start */

#if defined(SchM_Schedulable_Dem_RepIUMPRDenRelease_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_RepIUMPRDenRelease_Return
#endif
#if defined(SchM_Schedulable_Dem_RepIUMPRDenRelease_Return)
#undef SchM_Schedulable_Dem_RepIUMPRDenRelease_Return
extern void SchM_Schedulable_Dem_RepIUMPRDenRelease_Return(void);
#else
#define SchM_Schedulable_Dem_RepIUMPRDenRelease_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_RepIUMPRDenRelease_Return */

#if defined(SchM_Schedulable_Dem_RepIUMPRDenRelease_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_RepIUMPRDenRelease_Start
#endif
#if defined(SchM_Schedulable_Dem_RepIUMPRDenRelease_Start)
#undef SchM_Schedulable_Dem_RepIUMPRDenRelease_Start
extern void SchM_Schedulable_Dem_RepIUMPRDenRelease_Start(void);
#else
#define SchM_Schedulable_Dem_RepIUMPRDenRelease_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_RepIUMPRDenRelease_Start */

#if defined(SchM_Schedulable_Dem_RepIUMPRFaultDetect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_RepIUMPRFaultDetect_Return
#endif
#if defined(SchM_Schedulable_Dem_RepIUMPRFaultDetect_Return)
#undef SchM_Schedulable_Dem_RepIUMPRFaultDetect_Return
extern void SchM_Schedulable_Dem_RepIUMPRFaultDetect_Return(void);
#else
#define SchM_Schedulable_Dem_RepIUMPRFaultDetect_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_RepIUMPRFaultDetect_Return */

#if defined(SchM_Schedulable_Dem_RepIUMPRFaultDetect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_RepIUMPRFaultDetect_Start
#endif
#if defined(SchM_Schedulable_Dem_RepIUMPRFaultDetect_Start)
#undef SchM_Schedulable_Dem_RepIUMPRFaultDetect_Start
extern void SchM_Schedulable_Dem_RepIUMPRFaultDetect_Start(void);
#else
#define SchM_Schedulable_Dem_RepIUMPRFaultDetect_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_RepIUMPRFaultDetect_Start */

#if defined(SchM_Schedulable_Dem_ResetEventDebounceStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ResetEventDebounceStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_ResetEventDebounceStatus_Return)
#undef SchM_Schedulable_Dem_ResetEventDebounceStatus_Return
extern void SchM_Schedulable_Dem_ResetEventDebounceStatus_Return(void);
#else
#define SchM_Schedulable_Dem_ResetEventDebounceStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_ResetEventDebounceStatus_Return */

#if defined(SchM_Schedulable_Dem_ResetEventDebounceStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ResetEventDebounceStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_ResetEventDebounceStatus_Start)
#undef SchM_Schedulable_Dem_ResetEventDebounceStatus_Start
extern void SchM_Schedulable_Dem_ResetEventDebounceStatus_Start(void);
#else
#define SchM_Schedulable_Dem_ResetEventDebounceStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_ResetEventDebounceStatus_Start */

#if defined(SchM_Schedulable_Dem_ResetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ResetEventStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_ResetEventStatus_Return)
#undef SchM_Schedulable_Dem_ResetEventStatus_Return
extern void SchM_Schedulable_Dem_ResetEventStatus_Return(void);
#else
#define SchM_Schedulable_Dem_ResetEventStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_ResetEventStatus_Return */

#if defined(SchM_Schedulable_Dem_ResetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_ResetEventStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_ResetEventStatus_Start)
#undef SchM_Schedulable_Dem_ResetEventStatus_Start
extern void SchM_Schedulable_Dem_ResetEventStatus_Start(void);
#else
#define SchM_Schedulable_Dem_ResetEventStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_ResetEventStatus_Start */

#if defined(SchM_Schedulable_Dem_RestartOperationCycle_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_RestartOperationCycle_Return
#endif
#if defined(SchM_Schedulable_Dem_RestartOperationCycle_Return)
#undef SchM_Schedulable_Dem_RestartOperationCycle_Return
extern void SchM_Schedulable_Dem_RestartOperationCycle_Return(void);
#else
#define SchM_Schedulable_Dem_RestartOperationCycle_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_RestartOperationCycle_Return */

#if defined(SchM_Schedulable_Dem_RestartOperationCycle_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_RestartOperationCycle_Start
#endif
#if defined(SchM_Schedulable_Dem_RestartOperationCycle_Start)
#undef SchM_Schedulable_Dem_RestartOperationCycle_Start
extern void SchM_Schedulable_Dem_RestartOperationCycle_Start(void);
#else
#define SchM_Schedulable_Dem_RestartOperationCycle_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_RestartOperationCycle_Start */

#if defined(SchM_Schedulable_Dem_SelectDTC_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SelectDTC_Return
#endif
#if defined(SchM_Schedulable_Dem_SelectDTC_Return)
#undef SchM_Schedulable_Dem_SelectDTC_Return
extern void SchM_Schedulable_Dem_SelectDTC_Return(void);
#else
#define SchM_Schedulable_Dem_SelectDTC_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SelectDTC_Return */

#if defined(SchM_Schedulable_Dem_SelectDTC_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SelectDTC_Start
#endif
#if defined(SchM_Schedulable_Dem_SelectDTC_Start)
#undef SchM_Schedulable_Dem_SelectDTC_Start
extern void SchM_Schedulable_Dem_SelectDTC_Start(void);
#else
#define SchM_Schedulable_Dem_SelectDTC_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SelectDTC_Start */

#if defined(SchM_Schedulable_Dem_SelectExtendedDataRecord_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SelectExtendedDataRecord_Return
#endif
#if defined(SchM_Schedulable_Dem_SelectExtendedDataRecord_Return)
#undef SchM_Schedulable_Dem_SelectExtendedDataRecord_Return
extern void SchM_Schedulable_Dem_SelectExtendedDataRecord_Return(void);
#else
#define SchM_Schedulable_Dem_SelectExtendedDataRecord_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SelectExtendedDataRecord_Return */

#if defined(SchM_Schedulable_Dem_SelectExtendedDataRecord_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SelectExtendedDataRecord_Start
#endif
#if defined(SchM_Schedulable_Dem_SelectExtendedDataRecord_Start)
#undef SchM_Schedulable_Dem_SelectExtendedDataRecord_Start
extern void SchM_Schedulable_Dem_SelectExtendedDataRecord_Start(void);
#else
#define SchM_Schedulable_Dem_SelectExtendedDataRecord_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SelectExtendedDataRecord_Start */

#if defined(SchM_Schedulable_Dem_SelectFreezeFrameData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SelectFreezeFrameData_Return
#endif
#if defined(SchM_Schedulable_Dem_SelectFreezeFrameData_Return)
#undef SchM_Schedulable_Dem_SelectFreezeFrameData_Return
extern void SchM_Schedulable_Dem_SelectFreezeFrameData_Return(void);
#else
#define SchM_Schedulable_Dem_SelectFreezeFrameData_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SelectFreezeFrameData_Return */

#if defined(SchM_Schedulable_Dem_SelectFreezeFrameData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SelectFreezeFrameData_Start
#endif
#if defined(SchM_Schedulable_Dem_SelectFreezeFrameData_Start)
#undef SchM_Schedulable_Dem_SelectFreezeFrameData_Start
extern void SchM_Schedulable_Dem_SelectFreezeFrameData_Start(void);
#else
#define SchM_Schedulable_Dem_SelectFreezeFrameData_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SelectFreezeFrameData_Start */

#if defined(SchM_Schedulable_Dem_SetComponentAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetComponentAvailable_Return
#endif
#if defined(SchM_Schedulable_Dem_SetComponentAvailable_Return)
#undef SchM_Schedulable_Dem_SetComponentAvailable_Return
extern void SchM_Schedulable_Dem_SetComponentAvailable_Return(void);
#else
#define SchM_Schedulable_Dem_SetComponentAvailable_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetComponentAvailable_Return */

#if defined(SchM_Schedulable_Dem_SetComponentAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetComponentAvailable_Start
#endif
#if defined(SchM_Schedulable_Dem_SetComponentAvailable_Start)
#undef SchM_Schedulable_Dem_SetComponentAvailable_Start
extern void SchM_Schedulable_Dem_SetComponentAvailable_Start(void);
#else
#define SchM_Schedulable_Dem_SetComponentAvailable_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetComponentAvailable_Start */

#if defined(SchM_Schedulable_Dem_SetCycleQualified_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetCycleQualified_Return
#endif
#if defined(SchM_Schedulable_Dem_SetCycleQualified_Return)
#undef SchM_Schedulable_Dem_SetCycleQualified_Return
extern void SchM_Schedulable_Dem_SetCycleQualified_Return(void);
#else
#define SchM_Schedulable_Dem_SetCycleQualified_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetCycleQualified_Return */

#if defined(SchM_Schedulable_Dem_SetCycleQualified_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetCycleQualified_Start
#endif
#if defined(SchM_Schedulable_Dem_SetCycleQualified_Start)
#undef SchM_Schedulable_Dem_SetCycleQualified_Start
extern void SchM_Schedulable_Dem_SetCycleQualified_Start(void);
#else
#define SchM_Schedulable_Dem_SetCycleQualified_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetCycleQualified_Start */

#if defined(SchM_Schedulable_Dem_SetDTCFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDTCFilter_Return
#endif
#if defined(SchM_Schedulable_Dem_SetDTCFilter_Return)
#undef SchM_Schedulable_Dem_SetDTCFilter_Return
extern void SchM_Schedulable_Dem_SetDTCFilter_Return(void);
#else
#define SchM_Schedulable_Dem_SetDTCFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDTCFilter_Return */

#if defined(SchM_Schedulable_Dem_SetDTCFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDTCFilter_Start
#endif
#if defined(SchM_Schedulable_Dem_SetDTCFilter_Start)
#undef SchM_Schedulable_Dem_SetDTCFilter_Start
extern void SchM_Schedulable_Dem_SetDTCFilter_Start(void);
#else
#define SchM_Schedulable_Dem_SetDTCFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDTCFilter_Start */

#if defined(SchM_Schedulable_Dem_SetDTCSuppression_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDTCSuppression_Return
#endif
#if defined(SchM_Schedulable_Dem_SetDTCSuppression_Return)
#undef SchM_Schedulable_Dem_SetDTCSuppression_Return
extern void SchM_Schedulable_Dem_SetDTCSuppression_Return(void);
#else
#define SchM_Schedulable_Dem_SetDTCSuppression_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDTCSuppression_Return */

#if defined(SchM_Schedulable_Dem_SetDTCSuppression_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDTCSuppression_Start
#endif
#if defined(SchM_Schedulable_Dem_SetDTCSuppression_Start)
#undef SchM_Schedulable_Dem_SetDTCSuppression_Start
extern void SchM_Schedulable_Dem_SetDTCSuppression_Start(void);
#else
#define SchM_Schedulable_Dem_SetDTCSuppression_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDTCSuppression_Start */

#if defined(SchM_Schedulable_Dem_SetDTR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDTR_Return
#endif
#if defined(SchM_Schedulable_Dem_SetDTR_Return)
#undef SchM_Schedulable_Dem_SetDTR_Return
extern void SchM_Schedulable_Dem_SetDTR_Return(void);
#else
#define SchM_Schedulable_Dem_SetDTR_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDTR_Return */

#if defined(SchM_Schedulable_Dem_SetDTR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDTR_Start
#endif
#if defined(SchM_Schedulable_Dem_SetDTR_Start)
#undef SchM_Schedulable_Dem_SetDTR_Start
extern void SchM_Schedulable_Dem_SetDTR_Start(void);
#else
#define SchM_Schedulable_Dem_SetDTR_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDTR_Start */

#if defined(SchM_Schedulable_Dem_SetDataOfPID21_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID21_Return
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID21_Return)
#undef SchM_Schedulable_Dem_SetDataOfPID21_Return
extern void SchM_Schedulable_Dem_SetDataOfPID21_Return(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID21_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID21_Return */

#if defined(SchM_Schedulable_Dem_SetDataOfPID21_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID21_Start
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID21_Start)
#undef SchM_Schedulable_Dem_SetDataOfPID21_Start
extern void SchM_Schedulable_Dem_SetDataOfPID21_Start(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID21_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID21_Start */

#if defined(SchM_Schedulable_Dem_SetDataOfPID31_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID31_Return
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID31_Return)
#undef SchM_Schedulable_Dem_SetDataOfPID31_Return
extern void SchM_Schedulable_Dem_SetDataOfPID31_Return(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID31_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID31_Return */

#if defined(SchM_Schedulable_Dem_SetDataOfPID31_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID31_Start
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID31_Start)
#undef SchM_Schedulable_Dem_SetDataOfPID31_Start
extern void SchM_Schedulable_Dem_SetDataOfPID31_Start(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID31_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID31_Start */

#if defined(SchM_Schedulable_Dem_SetDataOfPID4D_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID4D_Return
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID4D_Return)
#undef SchM_Schedulable_Dem_SetDataOfPID4D_Return
extern void SchM_Schedulable_Dem_SetDataOfPID4D_Return(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID4D_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID4D_Return */

#if defined(SchM_Schedulable_Dem_SetDataOfPID4D_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID4D_Start
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID4D_Start)
#undef SchM_Schedulable_Dem_SetDataOfPID4D_Start
extern void SchM_Schedulable_Dem_SetDataOfPID4D_Start(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID4D_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID4D_Start */

#if defined(SchM_Schedulable_Dem_SetDataOfPID4E_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID4E_Return
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID4E_Return)
#undef SchM_Schedulable_Dem_SetDataOfPID4E_Return
extern void SchM_Schedulable_Dem_SetDataOfPID4E_Return(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID4E_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID4E_Return */

#if defined(SchM_Schedulable_Dem_SetDataOfPID4E_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetDataOfPID4E_Start
#endif
#if defined(SchM_Schedulable_Dem_SetDataOfPID4E_Start)
#undef SchM_Schedulable_Dem_SetDataOfPID4E_Start
extern void SchM_Schedulable_Dem_SetDataOfPID4E_Start(void);
#else
#define SchM_Schedulable_Dem_SetDataOfPID4E_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetDataOfPID4E_Start */

#if defined(SchM_Schedulable_Dem_SetEnableCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEnableCondition_Return
#endif
#if defined(SchM_Schedulable_Dem_SetEnableCondition_Return)
#undef SchM_Schedulable_Dem_SetEnableCondition_Return
extern void SchM_Schedulable_Dem_SetEnableCondition_Return(void);
#else
#define SchM_Schedulable_Dem_SetEnableCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEnableCondition_Return */

#if defined(SchM_Schedulable_Dem_SetEnableCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEnableCondition_Start
#endif
#if defined(SchM_Schedulable_Dem_SetEnableCondition_Start)
#undef SchM_Schedulable_Dem_SetEnableCondition_Start
extern void SchM_Schedulable_Dem_SetEnableCondition_Start(void);
#else
#define SchM_Schedulable_Dem_SetEnableCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEnableCondition_Start */

#if defined(SchM_Schedulable_Dem_SetEventAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventAvailable_Return
#endif
#if defined(SchM_Schedulable_Dem_SetEventAvailable_Return)
#undef SchM_Schedulable_Dem_SetEventAvailable_Return
extern void SchM_Schedulable_Dem_SetEventAvailable_Return(void);
#else
#define SchM_Schedulable_Dem_SetEventAvailable_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventAvailable_Return */

#if defined(SchM_Schedulable_Dem_SetEventAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventAvailable_Start
#endif
#if defined(SchM_Schedulable_Dem_SetEventAvailable_Start)
#undef SchM_Schedulable_Dem_SetEventAvailable_Start
extern void SchM_Schedulable_Dem_SetEventAvailable_Start(void);
#else
#define SchM_Schedulable_Dem_SetEventAvailable_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventAvailable_Start */

#if defined(SchM_Schedulable_Dem_SetEventDisabled_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventDisabled_Return
#endif
#if defined(SchM_Schedulable_Dem_SetEventDisabled_Return)
#undef SchM_Schedulable_Dem_SetEventDisabled_Return
extern void SchM_Schedulable_Dem_SetEventDisabled_Return(void);
#else
#define SchM_Schedulable_Dem_SetEventDisabled_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventDisabled_Return */

#if defined(SchM_Schedulable_Dem_SetEventDisabled_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventDisabled_Start
#endif
#if defined(SchM_Schedulable_Dem_SetEventDisabled_Start)
#undef SchM_Schedulable_Dem_SetEventDisabled_Start
extern void SchM_Schedulable_Dem_SetEventDisabled_Start(void);
#else
#define SchM_Schedulable_Dem_SetEventDisabled_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventDisabled_Start */

#if defined(SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Return
#endif
#if defined(SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Return)
#undef SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Return
extern void SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Return(void);
#else
#define SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Return */

#if defined(SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Start
#endif
#if defined(SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Start)
#undef SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Start
extern void SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Start(void);
#else
#define SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventFailureCycleCounterThreshold_Start */

#if defined(SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Return
#endif
#if defined(SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Return)
#undef SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Return
extern void SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Return(void);
#else
#define SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Return */

#if defined(SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Start
#endif
#if defined(SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Start)
#undef SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Start
extern void SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Start(void);
#else
#define SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventStatusWithMonitorData_Start */

#if defined(SchM_Schedulable_Dem_SetEventStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_SetEventStatus_Return)
#undef SchM_Schedulable_Dem_SetEventStatus_Return
extern void SchM_Schedulable_Dem_SetEventStatus_Return(void);
#else
#define SchM_Schedulable_Dem_SetEventStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventStatus_Return */

#if defined(SchM_Schedulable_Dem_SetEventStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetEventStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_SetEventStatus_Start)
#undef SchM_Schedulable_Dem_SetEventStatus_Start
extern void SchM_Schedulable_Dem_SetEventStatus_Start(void);
#else
#define SchM_Schedulable_Dem_SetEventStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetEventStatus_Start */

#if defined(SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Return
#endif
#if defined(SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Return)
#undef SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Return
extern void SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Return(void);
#else
#define SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Return */

#if defined(SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Start
#endif
#if defined(SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Start)
#undef SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Start
extern void SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Start(void);
#else
#define SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetFreezeFrameRecordFilter_Start */

#if defined(SchM_Schedulable_Dem_SetIUMPRDenCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetIUMPRDenCondition_Return
#endif
#if defined(SchM_Schedulable_Dem_SetIUMPRDenCondition_Return)
#undef SchM_Schedulable_Dem_SetIUMPRDenCondition_Return
extern void SchM_Schedulable_Dem_SetIUMPRDenCondition_Return(void);
#else
#define SchM_Schedulable_Dem_SetIUMPRDenCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetIUMPRDenCondition_Return */

#if defined(SchM_Schedulable_Dem_SetIUMPRDenCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetIUMPRDenCondition_Start
#endif
#if defined(SchM_Schedulable_Dem_SetIUMPRDenCondition_Start)
#undef SchM_Schedulable_Dem_SetIUMPRDenCondition_Start
extern void SchM_Schedulable_Dem_SetIUMPRDenCondition_Start(void);
#else
#define SchM_Schedulable_Dem_SetIUMPRDenCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetIUMPRDenCondition_Start */

#if defined(SchM_Schedulable_Dem_SetPtoStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetPtoStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_SetPtoStatus_Return)
#undef SchM_Schedulable_Dem_SetPtoStatus_Return
extern void SchM_Schedulable_Dem_SetPtoStatus_Return(void);
#else
#define SchM_Schedulable_Dem_SetPtoStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetPtoStatus_Return */

#if defined(SchM_Schedulable_Dem_SetPtoStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetPtoStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_SetPtoStatus_Start)
#undef SchM_Schedulable_Dem_SetPtoStatus_Start
extern void SchM_Schedulable_Dem_SetPtoStatus_Start(void);
#else
#define SchM_Schedulable_Dem_SetPtoStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetPtoStatus_Start */

#if defined(SchM_Schedulable_Dem_SetStorageCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetStorageCondition_Return
#endif
#if defined(SchM_Schedulable_Dem_SetStorageCondition_Return)
#undef SchM_Schedulable_Dem_SetStorageCondition_Return
extern void SchM_Schedulable_Dem_SetStorageCondition_Return(void);
#else
#define SchM_Schedulable_Dem_SetStorageCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetStorageCondition_Return */

#if defined(SchM_Schedulable_Dem_SetStorageCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetStorageCondition_Start
#endif
#if defined(SchM_Schedulable_Dem_SetStorageCondition_Start)
#undef SchM_Schedulable_Dem_SetStorageCondition_Start
extern void SchM_Schedulable_Dem_SetStorageCondition_Start(void);
#else
#define SchM_Schedulable_Dem_SetStorageCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetStorageCondition_Start */

#if defined(SchM_Schedulable_Dem_SetWIRStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetWIRStatus_Return
#endif
#if defined(SchM_Schedulable_Dem_SetWIRStatus_Return)
#undef SchM_Schedulable_Dem_SetWIRStatus_Return
extern void SchM_Schedulable_Dem_SetWIRStatus_Return(void);
#else
#define SchM_Schedulable_Dem_SetWIRStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetWIRStatus_Return */

#if defined(SchM_Schedulable_Dem_SetWIRStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_SetWIRStatus_Start
#endif
#if defined(SchM_Schedulable_Dem_SetWIRStatus_Start)
#undef SchM_Schedulable_Dem_SetWIRStatus_Start
extern void SchM_Schedulable_Dem_SetWIRStatus_Start(void);
#else
#define SchM_Schedulable_Dem_SetWIRStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_SetWIRStatus_Start */

#if defined(SchM_Schedulable_Dem_Shutdown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_Shutdown_Return
#endif
#if defined(SchM_Schedulable_Dem_Shutdown_Return)
#undef SchM_Schedulable_Dem_Shutdown_Return
extern void SchM_Schedulable_Dem_Shutdown_Return(void);
#else
#define SchM_Schedulable_Dem_Shutdown_Return() ((void)(0))
#endif /* SchM_Schedulable_Dem_Shutdown_Return */

#if defined(SchM_Schedulable_Dem_Shutdown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dem_Shutdown_Start
#endif
#if defined(SchM_Schedulable_Dem_Shutdown_Start)
#undef SchM_Schedulable_Dem_Shutdown_Start
extern void SchM_Schedulable_Dem_Shutdown_Start(void);
#else
#define SchM_Schedulable_Dem_Shutdown_Start() ((void)(0))
#endif /* SchM_Schedulable_Dem_Shutdown_Start */

#if defined(SchM_Schedulable_Det_ReportError_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Det_ReportError_Return
#endif
#if defined(SchM_Schedulable_Det_ReportError_Return)
#undef SchM_Schedulable_Det_ReportError_Return
extern void SchM_Schedulable_Det_ReportError_Return(void);
#else
#define SchM_Schedulable_Det_ReportError_Return() ((void)(0))
#endif /* SchM_Schedulable_Det_ReportError_Return */

#if defined(SchM_Schedulable_Det_ReportError_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Det_ReportError_Start
#endif
#if defined(SchM_Schedulable_Det_ReportError_Start)
#undef SchM_Schedulable_Det_ReportError_Start
extern void SchM_Schedulable_Det_ReportError_Start(void);
#else
#define SchM_Schedulable_Det_ReportError_Start() ((void)(0))
#endif /* SchM_Schedulable_Det_ReportError_Start */

#if defined(SchM_Schedulable_Det_ReportRuntimeError_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Det_ReportRuntimeError_Return
#endif
#if defined(SchM_Schedulable_Det_ReportRuntimeError_Return)
#undef SchM_Schedulable_Det_ReportRuntimeError_Return
extern void SchM_Schedulable_Det_ReportRuntimeError_Return(void);
#else
#define SchM_Schedulable_Det_ReportRuntimeError_Return() ((void)(0))
#endif /* SchM_Schedulable_Det_ReportRuntimeError_Return */

#if defined(SchM_Schedulable_Det_ReportRuntimeError_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Det_ReportRuntimeError_Start
#endif
#if defined(SchM_Schedulable_Det_ReportRuntimeError_Start)
#undef SchM_Schedulable_Det_ReportRuntimeError_Start
extern void SchM_Schedulable_Det_ReportRuntimeError_Start(void);
#else
#define SchM_Schedulable_Det_ReportRuntimeError_Start() ((void)(0))
#endif /* SchM_Schedulable_Det_ReportRuntimeError_Start */

#if defined(SchM_Schedulable_Det_ReportTransientFault_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Det_ReportTransientFault_Return
#endif
#if defined(SchM_Schedulable_Det_ReportTransientFault_Return)
#undef SchM_Schedulable_Det_ReportTransientFault_Return
extern void SchM_Schedulable_Det_ReportTransientFault_Return(void);
#else
#define SchM_Schedulable_Det_ReportTransientFault_Return() ((void)(0))
#endif /* SchM_Schedulable_Det_ReportTransientFault_Return */

#if defined(SchM_Schedulable_Det_ReportTransientFault_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Det_ReportTransientFault_Start
#endif
#if defined(SchM_Schedulable_Det_ReportTransientFault_Start)
#undef SchM_Schedulable_Det_ReportTransientFault_Start
extern void SchM_Schedulable_Det_ReportTransientFault_Start(void);
#else
#define SchM_Schedulable_Det_ReportTransientFault_Start() ((void)(0))
#endif /* SchM_Schedulable_Det_ReportTransientFault_Start */

#if defined(SchM_Schedulable_Dio_FlipChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_FlipChannel_Return
#endif
#if defined(SchM_Schedulable_Dio_FlipChannel_Return)
#undef SchM_Schedulable_Dio_FlipChannel_Return
extern void SchM_Schedulable_Dio_FlipChannel_Return(void);
#else
#define SchM_Schedulable_Dio_FlipChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_FlipChannel_Return */

#if defined(SchM_Schedulable_Dio_FlipChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_FlipChannel_Start
#endif
#if defined(SchM_Schedulable_Dio_FlipChannel_Start)
#undef SchM_Schedulable_Dio_FlipChannel_Start
extern void SchM_Schedulable_Dio_FlipChannel_Start(void);
#else
#define SchM_Schedulable_Dio_FlipChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_FlipChannel_Start */

#if defined(SchM_Schedulable_Dio_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Dio_GetVersionInfo_Return)
#undef SchM_Schedulable_Dio_GetVersionInfo_Return
extern void SchM_Schedulable_Dio_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Dio_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Dio_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Dio_GetVersionInfo_Start)
#undef SchM_Schedulable_Dio_GetVersionInfo_Start
extern void SchM_Schedulable_Dio_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Dio_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Dio_MaskedWritePort_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_MaskedWritePort_Return
#endif
#if defined(SchM_Schedulable_Dio_MaskedWritePort_Return)
#undef SchM_Schedulable_Dio_MaskedWritePort_Return
extern void SchM_Schedulable_Dio_MaskedWritePort_Return(void);
#else
#define SchM_Schedulable_Dio_MaskedWritePort_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_MaskedWritePort_Return */

#if defined(SchM_Schedulable_Dio_MaskedWritePort_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_MaskedWritePort_Start
#endif
#if defined(SchM_Schedulable_Dio_MaskedWritePort_Start)
#undef SchM_Schedulable_Dio_MaskedWritePort_Start
extern void SchM_Schedulable_Dio_MaskedWritePort_Start(void);
#else
#define SchM_Schedulable_Dio_MaskedWritePort_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_MaskedWritePort_Start */

#if defined(SchM_Schedulable_Dio_ReadChannelGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_ReadChannelGroup_Return
#endif
#if defined(SchM_Schedulable_Dio_ReadChannelGroup_Return)
#undef SchM_Schedulable_Dio_ReadChannelGroup_Return
extern void SchM_Schedulable_Dio_ReadChannelGroup_Return(void);
#else
#define SchM_Schedulable_Dio_ReadChannelGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_ReadChannelGroup_Return */

#if defined(SchM_Schedulable_Dio_ReadChannelGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_ReadChannelGroup_Start
#endif
#if defined(SchM_Schedulable_Dio_ReadChannelGroup_Start)
#undef SchM_Schedulable_Dio_ReadChannelGroup_Start
extern void SchM_Schedulable_Dio_ReadChannelGroup_Start(void);
#else
#define SchM_Schedulable_Dio_ReadChannelGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_ReadChannelGroup_Start */

#if defined(SchM_Schedulable_Dio_ReadChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_ReadChannel_Return
#endif
#if defined(SchM_Schedulable_Dio_ReadChannel_Return)
#undef SchM_Schedulable_Dio_ReadChannel_Return
extern void SchM_Schedulable_Dio_ReadChannel_Return(void);
#else
#define SchM_Schedulable_Dio_ReadChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_ReadChannel_Return */

#if defined(SchM_Schedulable_Dio_ReadChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_ReadChannel_Start
#endif
#if defined(SchM_Schedulable_Dio_ReadChannel_Start)
#undef SchM_Schedulable_Dio_ReadChannel_Start
extern void SchM_Schedulable_Dio_ReadChannel_Start(void);
#else
#define SchM_Schedulable_Dio_ReadChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_ReadChannel_Start */

#if defined(SchM_Schedulable_Dio_ReadPort_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_ReadPort_Return
#endif
#if defined(SchM_Schedulable_Dio_ReadPort_Return)
#undef SchM_Schedulable_Dio_ReadPort_Return
extern void SchM_Schedulable_Dio_ReadPort_Return(void);
#else
#define SchM_Schedulable_Dio_ReadPort_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_ReadPort_Return */

#if defined(SchM_Schedulable_Dio_ReadPort_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_ReadPort_Start
#endif
#if defined(SchM_Schedulable_Dio_ReadPort_Start)
#undef SchM_Schedulable_Dio_ReadPort_Start
extern void SchM_Schedulable_Dio_ReadPort_Start(void);
#else
#define SchM_Schedulable_Dio_ReadPort_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_ReadPort_Start */

#if defined(SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Return
#endif
#if defined(SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Return)
#undef SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Return
extern void SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Return(void);
#else
#define SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Return */

#if defined(SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Start
#endif
#if defined(SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Start)
#undef SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Start
extern void SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Start(void);
#else
#define SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_Siul2_Dio_Ip_WritePin_Start */

#if defined(SchM_Schedulable_Dio_WriteChannelGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_WriteChannelGroup_Return
#endif
#if defined(SchM_Schedulable_Dio_WriteChannelGroup_Return)
#undef SchM_Schedulable_Dio_WriteChannelGroup_Return
extern void SchM_Schedulable_Dio_WriteChannelGroup_Return(void);
#else
#define SchM_Schedulable_Dio_WriteChannelGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_WriteChannelGroup_Return */

#if defined(SchM_Schedulable_Dio_WriteChannelGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_WriteChannelGroup_Start
#endif
#if defined(SchM_Schedulable_Dio_WriteChannelGroup_Start)
#undef SchM_Schedulable_Dio_WriteChannelGroup_Start
extern void SchM_Schedulable_Dio_WriteChannelGroup_Start(void);
#else
#define SchM_Schedulable_Dio_WriteChannelGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_WriteChannelGroup_Start */

#if defined(SchM_Schedulable_Dio_WriteChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_WriteChannel_Return
#endif
#if defined(SchM_Schedulable_Dio_WriteChannel_Return)
#undef SchM_Schedulable_Dio_WriteChannel_Return
extern void SchM_Schedulable_Dio_WriteChannel_Return(void);
#else
#define SchM_Schedulable_Dio_WriteChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_WriteChannel_Return */

#if defined(SchM_Schedulable_Dio_WriteChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_WriteChannel_Start
#endif
#if defined(SchM_Schedulable_Dio_WriteChannel_Start)
#undef SchM_Schedulable_Dio_WriteChannel_Start
extern void SchM_Schedulable_Dio_WriteChannel_Start(void);
#else
#define SchM_Schedulable_Dio_WriteChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_WriteChannel_Start */

#if defined(SchM_Schedulable_Dio_WritePort_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_WritePort_Return
#endif
#if defined(SchM_Schedulable_Dio_WritePort_Return)
#undef SchM_Schedulable_Dio_WritePort_Return
extern void SchM_Schedulable_Dio_WritePort_Return(void);
#else
#define SchM_Schedulable_Dio_WritePort_Return() ((void)(0))
#endif /* SchM_Schedulable_Dio_WritePort_Return */

#if defined(SchM_Schedulable_Dio_WritePort_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Dio_WritePort_Start
#endif
#if defined(SchM_Schedulable_Dio_WritePort_Start)
#undef SchM_Schedulable_Dio_WritePort_Start
extern void SchM_Schedulable_Dio_WritePort_Start(void);
#else
#define SchM_Schedulable_Dio_WritePort_Start() ((void)(0))
#endif /* SchM_Schedulable_Dio_WritePort_Start */

#if defined(SchM_Schedulable_EcuM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_EcuM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_EcuM_MainFunction_Return)
#undef SchM_Schedulable_EcuM_MainFunction_Return
extern void SchM_Schedulable_EcuM_MainFunction_Return(void);
#else
#define SchM_Schedulable_EcuM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_EcuM_MainFunction_Return */

#if defined(SchM_Schedulable_EcuM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_EcuM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_EcuM_MainFunction_Start)
#undef SchM_Schedulable_EcuM_MainFunction_Start
extern void SchM_Schedulable_EcuM_MainFunction_Start(void);
#else
#define SchM_Schedulable_EcuM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_EcuM_MainFunction_Start */

#if defined(SchM_Schedulable_Fee_Cancel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Cancel_Return
#endif
#if defined(SchM_Schedulable_Fee_Cancel_Return)
#undef SchM_Schedulable_Fee_Cancel_Return
extern void SchM_Schedulable_Fee_Cancel_Return(void);
#else
#define SchM_Schedulable_Fee_Cancel_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_Cancel_Return */

#if defined(SchM_Schedulable_Fee_Cancel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Cancel_Start
#endif
#if defined(SchM_Schedulable_Fee_Cancel_Start)
#undef SchM_Schedulable_Fee_Cancel_Start
extern void SchM_Schedulable_Fee_Cancel_Start(void);
#else
#define SchM_Schedulable_Fee_Cancel_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_Cancel_Start */

#if defined(SchM_Schedulable_Fee_EraseImmediateBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_EraseImmediateBlock_Return
#endif
#if defined(SchM_Schedulable_Fee_EraseImmediateBlock_Return)
#undef SchM_Schedulable_Fee_EraseImmediateBlock_Return
extern void SchM_Schedulable_Fee_EraseImmediateBlock_Return(void);
#else
#define SchM_Schedulable_Fee_EraseImmediateBlock_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_EraseImmediateBlock_Return */

#if defined(SchM_Schedulable_Fee_EraseImmediateBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_EraseImmediateBlock_Start
#endif
#if defined(SchM_Schedulable_Fee_EraseImmediateBlock_Start)
#undef SchM_Schedulable_Fee_EraseImmediateBlock_Start
extern void SchM_Schedulable_Fee_EraseImmediateBlock_Start(void);
#else
#define SchM_Schedulable_Fee_EraseImmediateBlock_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_EraseImmediateBlock_Start */

#if defined(SchM_Schedulable_Fee_ForceSwapOnNextWrite_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_ForceSwapOnNextWrite_Return
#endif
#if defined(SchM_Schedulable_Fee_ForceSwapOnNextWrite_Return)
#undef SchM_Schedulable_Fee_ForceSwapOnNextWrite_Return
extern void SchM_Schedulable_Fee_ForceSwapOnNextWrite_Return(void);
#else
#define SchM_Schedulable_Fee_ForceSwapOnNextWrite_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_ForceSwapOnNextWrite_Return */

#if defined(SchM_Schedulable_Fee_ForceSwapOnNextWrite_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_ForceSwapOnNextWrite_Start
#endif
#if defined(SchM_Schedulable_Fee_ForceSwapOnNextWrite_Start)
#undef SchM_Schedulable_Fee_ForceSwapOnNextWrite_Start
extern void SchM_Schedulable_Fee_ForceSwapOnNextWrite_Start(void);
#else
#define SchM_Schedulable_Fee_ForceSwapOnNextWrite_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_ForceSwapOnNextWrite_Start */

#if defined(SchM_Schedulable_Fee_GetJobResult_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_GetJobResult_Return
#endif
#if defined(SchM_Schedulable_Fee_GetJobResult_Return)
#undef SchM_Schedulable_Fee_GetJobResult_Return
extern void SchM_Schedulable_Fee_GetJobResult_Return(void);
#else
#define SchM_Schedulable_Fee_GetJobResult_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_GetJobResult_Return */

#if defined(SchM_Schedulable_Fee_GetJobResult_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_GetJobResult_Start
#endif
#if defined(SchM_Schedulable_Fee_GetJobResult_Start)
#undef SchM_Schedulable_Fee_GetJobResult_Start
extern void SchM_Schedulable_Fee_GetJobResult_Start(void);
#else
#define SchM_Schedulable_Fee_GetJobResult_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_GetJobResult_Start */

#if defined(SchM_Schedulable_Fee_GetRunTimeInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_GetRunTimeInfo_Return
#endif
#if defined(SchM_Schedulable_Fee_GetRunTimeInfo_Return)
#undef SchM_Schedulable_Fee_GetRunTimeInfo_Return
extern void SchM_Schedulable_Fee_GetRunTimeInfo_Return(void);
#else
#define SchM_Schedulable_Fee_GetRunTimeInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_GetRunTimeInfo_Return */

#if defined(SchM_Schedulable_Fee_GetRunTimeInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_GetRunTimeInfo_Start
#endif
#if defined(SchM_Schedulable_Fee_GetRunTimeInfo_Start)
#undef SchM_Schedulable_Fee_GetRunTimeInfo_Start
extern void SchM_Schedulable_Fee_GetRunTimeInfo_Start(void);
#else
#define SchM_Schedulable_Fee_GetRunTimeInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_GetRunTimeInfo_Start */

#if defined(SchM_Schedulable_Fee_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Fee_GetVersionInfo_Return)
#undef SchM_Schedulable_Fee_GetVersionInfo_Return
extern void SchM_Schedulable_Fee_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Fee_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Fee_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Fee_GetVersionInfo_Start)
#undef SchM_Schedulable_Fee_GetVersionInfo_Start
extern void SchM_Schedulable_Fee_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Fee_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Fee_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Init_Return
#endif
#if defined(SchM_Schedulable_Fee_Init_Return)
#undef SchM_Schedulable_Fee_Init_Return
extern void SchM_Schedulable_Fee_Init_Return(void);
#else
#define SchM_Schedulable_Fee_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_Init_Return */

#if defined(SchM_Schedulable_Fee_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Init_Start
#endif
#if defined(SchM_Schedulable_Fee_Init_Start)
#undef SchM_Schedulable_Fee_Init_Start
extern void SchM_Schedulable_Fee_Init_Start(void);
#else
#define SchM_Schedulable_Fee_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_Init_Start */

#if defined(SchM_Schedulable_Fee_InvalidateBlock_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_InvalidateBlock_Return
#endif
#if defined(SchM_Schedulable_Fee_InvalidateBlock_Return)
#undef SchM_Schedulable_Fee_InvalidateBlock_Return
extern void SchM_Schedulable_Fee_InvalidateBlock_Return(void);
#else
#define SchM_Schedulable_Fee_InvalidateBlock_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_InvalidateBlock_Return */

#if defined(SchM_Schedulable_Fee_InvalidateBlock_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_InvalidateBlock_Start
#endif
#if defined(SchM_Schedulable_Fee_InvalidateBlock_Start)
#undef SchM_Schedulable_Fee_InvalidateBlock_Start
extern void SchM_Schedulable_Fee_InvalidateBlock_Start(void);
#else
#define SchM_Schedulable_Fee_InvalidateBlock_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_InvalidateBlock_Start */

#if defined(SchM_Schedulable_Fee_JobEndNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_JobEndNotification_Return
#endif
#if defined(SchM_Schedulable_Fee_JobEndNotification_Return)
#undef SchM_Schedulable_Fee_JobEndNotification_Return
extern void SchM_Schedulable_Fee_JobEndNotification_Return(void);
#else
#define SchM_Schedulable_Fee_JobEndNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_JobEndNotification_Return */

#if defined(SchM_Schedulable_Fee_JobEndNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_JobEndNotification_Start
#endif
#if defined(SchM_Schedulable_Fee_JobEndNotification_Start)
#undef SchM_Schedulable_Fee_JobEndNotification_Start
extern void SchM_Schedulable_Fee_JobEndNotification_Start(void);
#else
#define SchM_Schedulable_Fee_JobEndNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_JobEndNotification_Start */

#if defined(SchM_Schedulable_Fee_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Fee_MainFunction_Return)
#undef SchM_Schedulable_Fee_MainFunction_Return
extern void SchM_Schedulable_Fee_MainFunction_Return(void);
#else
#define SchM_Schedulable_Fee_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_MainFunction_Return */

#if defined(SchM_Schedulable_Fee_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Fee_MainFunction_Start)
#undef SchM_Schedulable_Fee_MainFunction_Start
extern void SchM_Schedulable_Fee_MainFunction_Start(void);
#else
#define SchM_Schedulable_Fee_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_MainFunction_Start */

#if defined(SchM_Schedulable_Fee_Read_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Read_Return
#endif
#if defined(SchM_Schedulable_Fee_Read_Return)
#undef SchM_Schedulable_Fee_Read_Return
extern void SchM_Schedulable_Fee_Read_Return(void);
#else
#define SchM_Schedulable_Fee_Read_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_Read_Return */

#if defined(SchM_Schedulable_Fee_Read_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Read_Start
#endif
#if defined(SchM_Schedulable_Fee_Read_Start)
#undef SchM_Schedulable_Fee_Read_Start
extern void SchM_Schedulable_Fee_Read_Start(void);
#else
#define SchM_Schedulable_Fee_Read_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_Read_Start */

#if defined(SchM_Schedulable_Fee_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_SetMode_Return
#endif
#if defined(SchM_Schedulable_Fee_SetMode_Return)
#undef SchM_Schedulable_Fee_SetMode_Return
extern void SchM_Schedulable_Fee_SetMode_Return(void);
#else
#define SchM_Schedulable_Fee_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_SetMode_Return */

#if defined(SchM_Schedulable_Fee_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_SetMode_Start
#endif
#if defined(SchM_Schedulable_Fee_SetMode_Start)
#undef SchM_Schedulable_Fee_SetMode_Start
extern void SchM_Schedulable_Fee_SetMode_Start(void);
#else
#define SchM_Schedulable_Fee_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_SetMode_Start */

#if defined(SchM_Schedulable_Fee_Write_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Write_Return
#endif
#if defined(SchM_Schedulable_Fee_Write_Return)
#undef SchM_Schedulable_Fee_Write_Return
extern void SchM_Schedulable_Fee_Write_Return(void);
#else
#define SchM_Schedulable_Fee_Write_Return() ((void)(0))
#endif /* SchM_Schedulable_Fee_Write_Return */

#if defined(SchM_Schedulable_Fee_Write_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fee_Write_Start
#endif
#if defined(SchM_Schedulable_Fee_Write_Start)
#undef SchM_Schedulable_Fee_Write_Start
extern void SchM_Schedulable_Fee_Write_Start(void);
#else
#define SchM_Schedulable_Fee_Write_Start() ((void)(0))
#endif /* SchM_Schedulable_Fee_Write_Start */

#if defined(SchM_Schedulable_FiM_DemInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_DemInit_Return
#endif
#if defined(SchM_Schedulable_FiM_DemInit_Return)
#undef SchM_Schedulable_FiM_DemInit_Return
extern void SchM_Schedulable_FiM_DemInit_Return(void);
#else
#define SchM_Schedulable_FiM_DemInit_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_DemInit_Return */

#if defined(SchM_Schedulable_FiM_DemInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_DemInit_Start
#endif
#if defined(SchM_Schedulable_FiM_DemInit_Start)
#undef SchM_Schedulable_FiM_DemInit_Start
extern void SchM_Schedulable_FiM_DemInit_Start(void);
#else
#define SchM_Schedulable_FiM_DemInit_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_DemInit_Start */

#if defined(SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Return
#endif
#if defined(SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Return)
#undef SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Return
extern void SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Return(void);
#else
#define SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Return */

#if defined(SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Start
#endif
#if defined(SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Start)
#undef SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Start
extern void SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Start(void);
#else
#define SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_DemTriggerOnComponentStatus_Start */

#if defined(SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Return
#endif
#if defined(SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Return)
#undef SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Return
extern void SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Return(void);
#else
#define SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Return */

#if defined(SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Start
#endif
#if defined(SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Start)
#undef SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Start
extern void SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Start(void);
#else
#define SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_DemTriggerOnMonitorStatus_Start */

#if defined(SchM_Schedulable_FiM_GetFunctionPermission_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_GetFunctionPermission_Return
#endif
#if defined(SchM_Schedulable_FiM_GetFunctionPermission_Return)
#undef SchM_Schedulable_FiM_GetFunctionPermission_Return
extern void SchM_Schedulable_FiM_GetFunctionPermission_Return(void);
#else
#define SchM_Schedulable_FiM_GetFunctionPermission_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_GetFunctionPermission_Return */

#if defined(SchM_Schedulable_FiM_GetFunctionPermission_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_GetFunctionPermission_Start
#endif
#if defined(SchM_Schedulable_FiM_GetFunctionPermission_Start)
#undef SchM_Schedulable_FiM_GetFunctionPermission_Start
extern void SchM_Schedulable_FiM_GetFunctionPermission_Start(void);
#else
#define SchM_Schedulable_FiM_GetFunctionPermission_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_GetFunctionPermission_Start */

#if defined(SchM_Schedulable_FiM_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_FiM_GetVersionInfo_Return)
#undef SchM_Schedulable_FiM_GetVersionInfo_Return
extern void SchM_Schedulable_FiM_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_FiM_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_GetVersionInfo_Return */

#if defined(SchM_Schedulable_FiM_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_FiM_GetVersionInfo_Start)
#undef SchM_Schedulable_FiM_GetVersionInfo_Start
extern void SchM_Schedulable_FiM_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_FiM_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_GetVersionInfo_Start */

#if defined(SchM_Schedulable_FiM_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_Init_Return
#endif
#if defined(SchM_Schedulable_FiM_Init_Return)
#undef SchM_Schedulable_FiM_Init_Return
extern void SchM_Schedulable_FiM_Init_Return(void);
#else
#define SchM_Schedulable_FiM_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_Init_Return */

#if defined(SchM_Schedulable_FiM_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_Init_Start
#endif
#if defined(SchM_Schedulable_FiM_Init_Start)
#undef SchM_Schedulable_FiM_Init_Start
extern void SchM_Schedulable_FiM_Init_Start(void);
#else
#define SchM_Schedulable_FiM_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_Init_Start */

#if defined(SchM_Schedulable_FiM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_FiM_MainFunction_Return)
#undef SchM_Schedulable_FiM_MainFunction_Return
extern void SchM_Schedulable_FiM_MainFunction_Return(void);
#else
#define SchM_Schedulable_FiM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_MainFunction_Return */

#if defined(SchM_Schedulable_FiM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_FiM_MainFunction_Start)
#undef SchM_Schedulable_FiM_MainFunction_Start
extern void SchM_Schedulable_FiM_MainFunction_Start(void);
#else
#define SchM_Schedulable_FiM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_MainFunction_Start */

#if defined(SchM_Schedulable_FiM_SetFunctionAvailable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_SetFunctionAvailable_Return
#endif
#if defined(SchM_Schedulable_FiM_SetFunctionAvailable_Return)
#undef SchM_Schedulable_FiM_SetFunctionAvailable_Return
extern void SchM_Schedulable_FiM_SetFunctionAvailable_Return(void);
#else
#define SchM_Schedulable_FiM_SetFunctionAvailable_Return() ((void)(0))
#endif /* SchM_Schedulable_FiM_SetFunctionAvailable_Return */

#if defined(SchM_Schedulable_FiM_SetFunctionAvailable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_FiM_SetFunctionAvailable_Start
#endif
#if defined(SchM_Schedulable_FiM_SetFunctionAvailable_Start)
#undef SchM_Schedulable_FiM_SetFunctionAvailable_Start
extern void SchM_Schedulable_FiM_SetFunctionAvailable_Start(void);
#else
#define SchM_Schedulable_FiM_SetFunctionAvailable_Start() ((void)(0))
#endif /* SchM_Schedulable_FiM_SetFunctionAvailable_Start */

#if defined(SchM_Schedulable_Fls_BlankCheck_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_BlankCheck_Return
#endif
#if defined(SchM_Schedulable_Fls_BlankCheck_Return)
#undef SchM_Schedulable_Fls_BlankCheck_Return
extern void SchM_Schedulable_Fls_BlankCheck_Return(void);
#else
#define SchM_Schedulable_Fls_BlankCheck_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_BlankCheck_Return */

#if defined(SchM_Schedulable_Fls_BlankCheck_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_BlankCheck_Start
#endif
#if defined(SchM_Schedulable_Fls_BlankCheck_Start)
#undef SchM_Schedulable_Fls_BlankCheck_Start
extern void SchM_Schedulable_Fls_BlankCheck_Start(void);
#else
#define SchM_Schedulable_Fls_BlankCheck_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_BlankCheck_Start */

#if defined(SchM_Schedulable_Fls_Cancel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Cancel_Return
#endif
#if defined(SchM_Schedulable_Fls_Cancel_Return)
#undef SchM_Schedulable_Fls_Cancel_Return
extern void SchM_Schedulable_Fls_Cancel_Return(void);
#else
#define SchM_Schedulable_Fls_Cancel_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_Cancel_Return */

#if defined(SchM_Schedulable_Fls_Cancel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Cancel_Start
#endif
#if defined(SchM_Schedulable_Fls_Cancel_Start)
#undef SchM_Schedulable_Fls_Cancel_Start
extern void SchM_Schedulable_Fls_Cancel_Start(void);
#else
#define SchM_Schedulable_Fls_Cancel_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_Cancel_Start */

#if defined(SchM_Schedulable_Fls_Compare_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Compare_Return
#endif
#if defined(SchM_Schedulable_Fls_Compare_Return)
#undef SchM_Schedulable_Fls_Compare_Return
extern void SchM_Schedulable_Fls_Compare_Return(void);
#else
#define SchM_Schedulable_Fls_Compare_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_Compare_Return */

#if defined(SchM_Schedulable_Fls_Compare_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Compare_Start
#endif
#if defined(SchM_Schedulable_Fls_Compare_Start)
#undef SchM_Schedulable_Fls_Compare_Start
extern void SchM_Schedulable_Fls_Compare_Start(void);
#else
#define SchM_Schedulable_Fls_Compare_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_Compare_Start */

#if defined(SchM_Schedulable_Fls_Erase_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Erase_Return
#endif
#if defined(SchM_Schedulable_Fls_Erase_Return)
#undef SchM_Schedulable_Fls_Erase_Return
extern void SchM_Schedulable_Fls_Erase_Return(void);
#else
#define SchM_Schedulable_Fls_Erase_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_Erase_Return */

#if defined(SchM_Schedulable_Fls_Erase_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Erase_Start
#endif
#if defined(SchM_Schedulable_Fls_Erase_Start)
#undef SchM_Schedulable_Fls_Erase_Start
extern void SchM_Schedulable_Fls_Erase_Start(void);
#else
#define SchM_Schedulable_Fls_Erase_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_Erase_Start */

#if defined(SchM_Schedulable_Fls_GetJobResult_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_GetJobResult_Return
#endif
#if defined(SchM_Schedulable_Fls_GetJobResult_Return)
#undef SchM_Schedulable_Fls_GetJobResult_Return
extern void SchM_Schedulable_Fls_GetJobResult_Return(void);
#else
#define SchM_Schedulable_Fls_GetJobResult_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_GetJobResult_Return */

#if defined(SchM_Schedulable_Fls_GetJobResult_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_GetJobResult_Start
#endif
#if defined(SchM_Schedulable_Fls_GetJobResult_Start)
#undef SchM_Schedulable_Fls_GetJobResult_Start
extern void SchM_Schedulable_Fls_GetJobResult_Start(void);
#else
#define SchM_Schedulable_Fls_GetJobResult_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_GetJobResult_Start */

#if defined(SchM_Schedulable_Fls_GetStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_GetStatus_Return
#endif
#if defined(SchM_Schedulable_Fls_GetStatus_Return)
#undef SchM_Schedulable_Fls_GetStatus_Return
extern void SchM_Schedulable_Fls_GetStatus_Return(void);
#else
#define SchM_Schedulable_Fls_GetStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_GetStatus_Return */

#if defined(SchM_Schedulable_Fls_GetStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_GetStatus_Start
#endif
#if defined(SchM_Schedulable_Fls_GetStatus_Start)
#undef SchM_Schedulable_Fls_GetStatus_Start
extern void SchM_Schedulable_Fls_GetStatus_Start(void);
#else
#define SchM_Schedulable_Fls_GetStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_GetStatus_Start */

#if defined(SchM_Schedulable_Fls_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Fls_GetVersionInfo_Return)
#undef SchM_Schedulable_Fls_GetVersionInfo_Return
extern void SchM_Schedulable_Fls_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Fls_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Fls_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Fls_GetVersionInfo_Start)
#undef SchM_Schedulable_Fls_GetVersionInfo_Start
extern void SchM_Schedulable_Fls_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Fls_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Fls_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Init_Return
#endif
#if defined(SchM_Schedulable_Fls_Init_Return)
#undef SchM_Schedulable_Fls_Init_Return
extern void SchM_Schedulable_Fls_Init_Return(void);
#else
#define SchM_Schedulable_Fls_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_Init_Return */

#if defined(SchM_Schedulable_Fls_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Init_Start
#endif
#if defined(SchM_Schedulable_Fls_Init_Start)
#undef SchM_Schedulable_Fls_Init_Start
extern void SchM_Schedulable_Fls_Init_Start(void);
#else
#define SchM_Schedulable_Fls_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_Init_Start */

#if defined(SchM_Schedulable_Fls_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Fls_MainFunction_Return)
#undef SchM_Schedulable_Fls_MainFunction_Return
extern void SchM_Schedulable_Fls_MainFunction_Return(void);
#else
#define SchM_Schedulable_Fls_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_MainFunction_Return */

#if defined(SchM_Schedulable_Fls_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Fls_MainFunction_Start)
#undef SchM_Schedulable_Fls_MainFunction_Start
extern void SchM_Schedulable_Fls_MainFunction_Start(void);
#else
#define SchM_Schedulable_Fls_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_MainFunction_Start */

#if defined(SchM_Schedulable_Fls_Read_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Read_Return
#endif
#if defined(SchM_Schedulable_Fls_Read_Return)
#undef SchM_Schedulable_Fls_Read_Return
extern void SchM_Schedulable_Fls_Read_Return(void);
#else
#define SchM_Schedulable_Fls_Read_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_Read_Return */

#if defined(SchM_Schedulable_Fls_Read_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Read_Start
#endif
#if defined(SchM_Schedulable_Fls_Read_Start)
#undef SchM_Schedulable_Fls_Read_Start
extern void SchM_Schedulable_Fls_Read_Start(void);
#else
#define SchM_Schedulable_Fls_Read_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_Read_Start */

#if defined(SchM_Schedulable_Fls_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_SetMode_Return
#endif
#if defined(SchM_Schedulable_Fls_SetMode_Return)
#undef SchM_Schedulable_Fls_SetMode_Return
extern void SchM_Schedulable_Fls_SetMode_Return(void);
#else
#define SchM_Schedulable_Fls_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_SetMode_Return */

#if defined(SchM_Schedulable_Fls_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_SetMode_Start
#endif
#if defined(SchM_Schedulable_Fls_SetMode_Start)
#undef SchM_Schedulable_Fls_SetMode_Start
extern void SchM_Schedulable_Fls_SetMode_Start(void);
#else
#define SchM_Schedulable_Fls_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_SetMode_Start */

#if defined(SchM_Schedulable_Fls_Write_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Write_Return
#endif
#if defined(SchM_Schedulable_Fls_Write_Return)
#undef SchM_Schedulable_Fls_Write_Return
extern void SchM_Schedulable_Fls_Write_Return(void);
#else
#define SchM_Schedulable_Fls_Write_Return() ((void)(0))
#endif /* SchM_Schedulable_Fls_Write_Return */

#if defined(SchM_Schedulable_Fls_Write_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fls_Write_Start
#endif
#if defined(SchM_Schedulable_Fls_Write_Start)
#undef SchM_Schedulable_Fls_Write_Start
extern void SchM_Schedulable_Fls_Write_Start(void);
#else
#define SchM_Schedulable_Fls_Write_Start() ((void)(0))
#endif /* SchM_Schedulable_Fls_Write_Start */

#if defined(SchM_Schedulable_Fota_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fota_MainFunction_Return
#endif
#if defined(SchM_Schedulable_Fota_MainFunction_Return)
#undef SchM_Schedulable_Fota_MainFunction_Return
extern void SchM_Schedulable_Fota_MainFunction_Return(void);
#else
#define SchM_Schedulable_Fota_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_Fota_MainFunction_Return */

#if defined(SchM_Schedulable_Fota_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Fota_MainFunction_Start
#endif
#if defined(SchM_Schedulable_Fota_MainFunction_Start)
#undef SchM_Schedulable_Fota_MainFunction_Start
extern void SchM_Schedulable_Fota_MainFunction_Start(void);
#else
#define SchM_Schedulable_Fota_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_Fota_MainFunction_Start */

#if defined(SchM_Schedulable_Gpt_CE_PIT_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_0_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_PIT_0_ISR_Return
extern void SchM_Schedulable_Gpt_CE_PIT_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_PIT_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_0_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_PIT_0_ISR_Start
extern void SchM_Schedulable_Gpt_CE_PIT_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_PIT_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_1_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_PIT_1_ISR_Return
extern void SchM_Schedulable_Gpt_CE_PIT_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_PIT_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_1_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_PIT_1_ISR_Start
extern void SchM_Schedulable_Gpt_CE_PIT_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_PIT_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_2_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_PIT_2_ISR_Return
extern void SchM_Schedulable_Gpt_CE_PIT_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_PIT_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_2_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_PIT_2_ISR_Start
extern void SchM_Schedulable_Gpt_CE_PIT_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_PIT_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_3_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_PIT_3_ISR_Return
extern void SchM_Schedulable_Gpt_CE_PIT_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_PIT_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_3_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_PIT_3_ISR_Start
extern void SchM_Schedulable_Gpt_CE_PIT_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_PIT_4_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_4_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_4_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_PIT_4_ISR_Return
extern void SchM_Schedulable_Gpt_CE_PIT_4_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_4_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_4_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_PIT_4_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_4_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_4_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_PIT_4_ISR_Start
extern void SchM_Schedulable_Gpt_CE_PIT_4_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_4_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_4_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_PIT_5_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_5_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_5_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_PIT_5_ISR_Return
extern void SchM_Schedulable_Gpt_CE_PIT_5_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_5_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_5_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_PIT_5_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_PIT_5_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_PIT_5_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_PIT_5_ISR_Start
extern void SchM_Schedulable_Gpt_CE_PIT_5_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_PIT_5_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_PIT_5_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_STM_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_0_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_STM_0_ISR_Return
extern void SchM_Schedulable_Gpt_CE_STM_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_STM_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_0_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_STM_0_ISR_Start
extern void SchM_Schedulable_Gpt_CE_STM_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_STM_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_1_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_STM_1_ISR_Return
extern void SchM_Schedulable_Gpt_CE_STM_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_STM_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_1_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_STM_1_ISR_Start
extern void SchM_Schedulable_Gpt_CE_STM_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_STM_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_2_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_STM_2_ISR_Return
extern void SchM_Schedulable_Gpt_CE_STM_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_STM_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_2_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_STM_2_ISR_Start
extern void SchM_Schedulable_Gpt_CE_STM_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_CE_STM_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_3_ISR_Return)
#undef SchM_Schedulable_Gpt_CE_STM_3_ISR_Return
extern void SchM_Schedulable_Gpt_CE_STM_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_CE_STM_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CE_STM_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_CE_STM_3_ISR_Start)
#undef SchM_Schedulable_Gpt_CE_STM_3_ISR_Start
extern void SchM_Schedulable_Gpt_CE_STM_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_CE_STM_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CE_STM_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Return
#endif
#if defined(SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Return)
#undef SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Return
extern void SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Return(void);
#else
#define SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Return */

#if defined(SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Start
#endif
#if defined(SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Start)
#undef SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Start
extern void SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Start(void);
#else
#define SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_ChangeNextTimeoutValue_Start */

#if defined(SchM_Schedulable_Gpt_Channel_DisableChainMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Channel_DisableChainMode_Return
#endif
#if defined(SchM_Schedulable_Gpt_Channel_DisableChainMode_Return)
#undef SchM_Schedulable_Gpt_Channel_DisableChainMode_Return
extern void SchM_Schedulable_Gpt_Channel_DisableChainMode_Return(void);
#else
#define SchM_Schedulable_Gpt_Channel_DisableChainMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Channel_DisableChainMode_Return */

#if defined(SchM_Schedulable_Gpt_Channel_DisableChainMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Channel_DisableChainMode_Start
#endif
#if defined(SchM_Schedulable_Gpt_Channel_DisableChainMode_Start)
#undef SchM_Schedulable_Gpt_Channel_DisableChainMode_Start
extern void SchM_Schedulable_Gpt_Channel_DisableChainMode_Start(void);
#else
#define SchM_Schedulable_Gpt_Channel_DisableChainMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Channel_DisableChainMode_Start */

#if defined(SchM_Schedulable_Gpt_Channel_EnableChainMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Channel_EnableChainMode_Return
#endif
#if defined(SchM_Schedulable_Gpt_Channel_EnableChainMode_Return)
#undef SchM_Schedulable_Gpt_Channel_EnableChainMode_Return
extern void SchM_Schedulable_Gpt_Channel_EnableChainMode_Return(void);
#else
#define SchM_Schedulable_Gpt_Channel_EnableChainMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Channel_EnableChainMode_Return */

#if defined(SchM_Schedulable_Gpt_Channel_EnableChainMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Channel_EnableChainMode_Start
#endif
#if defined(SchM_Schedulable_Gpt_Channel_EnableChainMode_Start)
#undef SchM_Schedulable_Gpt_Channel_EnableChainMode_Start
extern void SchM_Schedulable_Gpt_Channel_EnableChainMode_Start(void);
#else
#define SchM_Schedulable_Gpt_Channel_EnableChainMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Channel_EnableChainMode_Start */

#if defined(SchM_Schedulable_Gpt_CheckWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CheckWakeup_Return
#endif
#if defined(SchM_Schedulable_Gpt_CheckWakeup_Return)
#undef SchM_Schedulable_Gpt_CheckWakeup_Return
extern void SchM_Schedulable_Gpt_CheckWakeup_Return(void);
#else
#define SchM_Schedulable_Gpt_CheckWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CheckWakeup_Return */

#if defined(SchM_Schedulable_Gpt_CheckWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_CheckWakeup_Start
#endif
#if defined(SchM_Schedulable_Gpt_CheckWakeup_Start)
#undef SchM_Schedulable_Gpt_CheckWakeup_Start
extern void SchM_Schedulable_Gpt_CheckWakeup_Start(void);
#else
#define SchM_Schedulable_Gpt_CheckWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_CheckWakeup_Start */

#if defined(SchM_Schedulable_Gpt_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_DeInit_Return
#endif
#if defined(SchM_Schedulable_Gpt_DeInit_Return)
#undef SchM_Schedulable_Gpt_DeInit_Return
extern void SchM_Schedulable_Gpt_DeInit_Return(void);
#else
#define SchM_Schedulable_Gpt_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_DeInit_Return */

#if defined(SchM_Schedulable_Gpt_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_DeInit_Start
#endif
#if defined(SchM_Schedulable_Gpt_DeInit_Start)
#undef SchM_Schedulable_Gpt_DeInit_Start
extern void SchM_Schedulable_Gpt_DeInit_Start(void);
#else
#define SchM_Schedulable_Gpt_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_DeInit_Start */

#if defined(SchM_Schedulable_Gpt_DisableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_DisableNotification_Return
#endif
#if defined(SchM_Schedulable_Gpt_DisableNotification_Return)
#undef SchM_Schedulable_Gpt_DisableNotification_Return
extern void SchM_Schedulable_Gpt_DisableNotification_Return(void);
#else
#define SchM_Schedulable_Gpt_DisableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_DisableNotification_Return */

#if defined(SchM_Schedulable_Gpt_DisableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_DisableNotification_Start
#endif
#if defined(SchM_Schedulable_Gpt_DisableNotification_Start)
#undef SchM_Schedulable_Gpt_DisableNotification_Start
extern void SchM_Schedulable_Gpt_DisableNotification_Start(void);
#else
#define SchM_Schedulable_Gpt_DisableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_DisableNotification_Start */

#if defined(SchM_Schedulable_Gpt_DisableWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_DisableWakeup_Return
#endif
#if defined(SchM_Schedulable_Gpt_DisableWakeup_Return)
#undef SchM_Schedulable_Gpt_DisableWakeup_Return
extern void SchM_Schedulable_Gpt_DisableWakeup_Return(void);
#else
#define SchM_Schedulable_Gpt_DisableWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_DisableWakeup_Return */

#if defined(SchM_Schedulable_Gpt_DisableWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_DisableWakeup_Start
#endif
#if defined(SchM_Schedulable_Gpt_DisableWakeup_Start)
#undef SchM_Schedulable_Gpt_DisableWakeup_Start
extern void SchM_Schedulable_Gpt_DisableWakeup_Start(void);
#else
#define SchM_Schedulable_Gpt_DisableWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_DisableWakeup_Start */

#if defined(SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Return)
#undef SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Return
extern void SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Return */

#if defined(SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Start)
#undef SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Start
extern void SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Emios_Gpt_Ip_IrqHandler_Start */

#if defined(SchM_Schedulable_Gpt_EnableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_EnableNotification_Return
#endif
#if defined(SchM_Schedulable_Gpt_EnableNotification_Return)
#undef SchM_Schedulable_Gpt_EnableNotification_Return
extern void SchM_Schedulable_Gpt_EnableNotification_Return(void);
#else
#define SchM_Schedulable_Gpt_EnableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_EnableNotification_Return */

#if defined(SchM_Schedulable_Gpt_EnableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_EnableNotification_Start
#endif
#if defined(SchM_Schedulable_Gpt_EnableNotification_Start)
#undef SchM_Schedulable_Gpt_EnableNotification_Start
extern void SchM_Schedulable_Gpt_EnableNotification_Start(void);
#else
#define SchM_Schedulable_Gpt_EnableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_EnableNotification_Start */

#if defined(SchM_Schedulable_Gpt_EnableWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_EnableWakeup_Return
#endif
#if defined(SchM_Schedulable_Gpt_EnableWakeup_Return)
#undef SchM_Schedulable_Gpt_EnableWakeup_Return
extern void SchM_Schedulable_Gpt_EnableWakeup_Return(void);
#else
#define SchM_Schedulable_Gpt_EnableWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_EnableWakeup_Return */

#if defined(SchM_Schedulable_Gpt_EnableWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_EnableWakeup_Start
#endif
#if defined(SchM_Schedulable_Gpt_EnableWakeup_Start)
#undef SchM_Schedulable_Gpt_EnableWakeup_Start
extern void SchM_Schedulable_Gpt_EnableWakeup_Start(void);
#else
#define SchM_Schedulable_Gpt_EnableWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_EnableWakeup_Start */

#if defined(SchM_Schedulable_Gpt_GetPredefTimerValue_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetPredefTimerValue_Return
#endif
#if defined(SchM_Schedulable_Gpt_GetPredefTimerValue_Return)
#undef SchM_Schedulable_Gpt_GetPredefTimerValue_Return
extern void SchM_Schedulable_Gpt_GetPredefTimerValue_Return(void);
#else
#define SchM_Schedulable_Gpt_GetPredefTimerValue_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetPredefTimerValue_Return */

#if defined(SchM_Schedulable_Gpt_GetPredefTimerValue_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetPredefTimerValue_Start
#endif
#if defined(SchM_Schedulable_Gpt_GetPredefTimerValue_Start)
#undef SchM_Schedulable_Gpt_GetPredefTimerValue_Start
extern void SchM_Schedulable_Gpt_GetPredefTimerValue_Start(void);
#else
#define SchM_Schedulable_Gpt_GetPredefTimerValue_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetPredefTimerValue_Start */

#if defined(SchM_Schedulable_Gpt_GetTimeElapsed_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetTimeElapsed_Return
#endif
#if defined(SchM_Schedulable_Gpt_GetTimeElapsed_Return)
#undef SchM_Schedulable_Gpt_GetTimeElapsed_Return
extern void SchM_Schedulable_Gpt_GetTimeElapsed_Return(void);
#else
#define SchM_Schedulable_Gpt_GetTimeElapsed_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetTimeElapsed_Return */

#if defined(SchM_Schedulable_Gpt_GetTimeElapsed_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetTimeElapsed_Start
#endif
#if defined(SchM_Schedulable_Gpt_GetTimeElapsed_Start)
#undef SchM_Schedulable_Gpt_GetTimeElapsed_Start
extern void SchM_Schedulable_Gpt_GetTimeElapsed_Start(void);
#else
#define SchM_Schedulable_Gpt_GetTimeElapsed_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetTimeElapsed_Start */

#if defined(SchM_Schedulable_Gpt_GetTimeRemaining_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetTimeRemaining_Return
#endif
#if defined(SchM_Schedulable_Gpt_GetTimeRemaining_Return)
#undef SchM_Schedulable_Gpt_GetTimeRemaining_Return
extern void SchM_Schedulable_Gpt_GetTimeRemaining_Return(void);
#else
#define SchM_Schedulable_Gpt_GetTimeRemaining_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetTimeRemaining_Return */

#if defined(SchM_Schedulable_Gpt_GetTimeRemaining_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetTimeRemaining_Start
#endif
#if defined(SchM_Schedulable_Gpt_GetTimeRemaining_Start)
#undef SchM_Schedulable_Gpt_GetTimeRemaining_Start
extern void SchM_Schedulable_Gpt_GetTimeRemaining_Start(void);
#else
#define SchM_Schedulable_Gpt_GetTimeRemaining_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetTimeRemaining_Start */

#if defined(SchM_Schedulable_Gpt_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Gpt_GetVersionInfo_Return)
#undef SchM_Schedulable_Gpt_GetVersionInfo_Return
extern void SchM_Schedulable_Gpt_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Gpt_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Gpt_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Gpt_GetVersionInfo_Start)
#undef SchM_Schedulable_Gpt_GetVersionInfo_Start
extern void SchM_Schedulable_Gpt_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Gpt_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Gpt_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Init_Return
#endif
#if defined(SchM_Schedulable_Gpt_Init_Return)
#undef SchM_Schedulable_Gpt_Init_Return
extern void SchM_Schedulable_Gpt_Init_Return(void);
#else
#define SchM_Schedulable_Gpt_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Init_Return */

#if defined(SchM_Schedulable_Gpt_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_Init_Start
#endif
#if defined(SchM_Schedulable_Gpt_Init_Start)
#undef SchM_Schedulable_Gpt_Init_Start
extern void SchM_Schedulable_Gpt_Init_Start(void);
#else
#define SchM_Schedulable_Gpt_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_Init_Start */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_4_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_CH_5_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_0_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_0_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_0_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_4_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_CH_5_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_1_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_1_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_1_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_2_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_2_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_2_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_2_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_3_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_3_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_3_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_3_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_4_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_4_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_4_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_4_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_4_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_4_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_4_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_4_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_4_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_4_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_4_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_4_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_4_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_4_ISR_Start */

#if defined(SchM_Schedulable_Gpt_PIT_5_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_5_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_PIT_5_ISR_Return)
#undef SchM_Schedulable_Gpt_PIT_5_ISR_Return
extern void SchM_Schedulable_Gpt_PIT_5_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_PIT_5_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_5_ISR_Return */

#if defined(SchM_Schedulable_Gpt_PIT_5_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_PIT_5_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_PIT_5_ISR_Start)
#undef SchM_Schedulable_Gpt_PIT_5_ISR_Start
extern void SchM_Schedulable_Gpt_PIT_5_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_PIT_5_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_PIT_5_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Return)
#undef SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Return
extern void SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Start)
#undef SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Start
extern void SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTC_0_Ch_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Return
extern void SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Start
extern void SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Return
extern void SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Start
extern void SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Return
extern void SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Start
extern void SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Return
extern void SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Start
extern void SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU0_STM_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Return
extern void SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Start
extern void SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Return
extern void SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Start
extern void SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Return
extern void SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Start
extern void SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Return
extern void SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Start
extern void SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU1_STM_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Return
extern void SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Start
extern void SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU_PIT_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Return)
#undef SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Return
extern void SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Start)
#undef SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Start
extern void SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_RTU_PIT_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_SMU_STM_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SMU_STM_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_SMU_STM_0_ISR_Return)
#undef SchM_Schedulable_Gpt_SMU_STM_0_ISR_Return
extern void SchM_Schedulable_Gpt_SMU_STM_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_SMU_STM_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SMU_STM_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_SMU_STM_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SMU_STM_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_SMU_STM_0_ISR_Start)
#undef SchM_Schedulable_Gpt_SMU_STM_0_ISR_Start
extern void SchM_Schedulable_Gpt_SMU_STM_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_SMU_STM_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SMU_STM_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_SMU_STM_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SMU_STM_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_SMU_STM_2_ISR_Return)
#undef SchM_Schedulable_Gpt_SMU_STM_2_ISR_Return
extern void SchM_Schedulable_Gpt_SMU_STM_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_SMU_STM_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SMU_STM_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_SMU_STM_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SMU_STM_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_SMU_STM_2_ISR_Start)
#undef SchM_Schedulable_Gpt_SMU_STM_2_ISR_Start
extern void SchM_Schedulable_Gpt_SMU_STM_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_SMU_STM_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SMU_STM_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_0_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_0_ISR_Return
extern void SchM_Schedulable_Gpt_STM_0_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_0_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_0_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_0_ISR_Start
extern void SchM_Schedulable_Gpt_STM_0_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_0_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_10_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_10_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_10_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_10_ISR_Return
extern void SchM_Schedulable_Gpt_STM_10_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_10_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_10_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_10_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_10_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_10_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_10_ISR_Start
extern void SchM_Schedulable_Gpt_STM_10_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_10_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_10_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_11_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_11_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_11_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_11_ISR_Return
extern void SchM_Schedulable_Gpt_STM_11_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_11_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_11_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_11_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_11_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_11_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_11_ISR_Start
extern void SchM_Schedulable_Gpt_STM_11_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_11_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_11_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_12_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_12_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_12_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_12_ISR_Return
extern void SchM_Schedulable_Gpt_STM_12_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_12_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_12_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_12_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_12_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_12_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_12_ISR_Start
extern void SchM_Schedulable_Gpt_STM_12_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_12_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_12_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_1_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_1_ISR_Return
extern void SchM_Schedulable_Gpt_STM_1_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_1_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_1_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_1_ISR_Start
extern void SchM_Schedulable_Gpt_STM_1_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_1_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_2_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_2_ISR_Return
extern void SchM_Schedulable_Gpt_STM_2_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_2_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_2_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_2_ISR_Start
extern void SchM_Schedulable_Gpt_STM_2_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_2_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_3_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_3_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_3_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_3_ISR_Return
extern void SchM_Schedulable_Gpt_STM_3_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_3_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_3_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_3_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_3_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_3_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_3_ISR_Start
extern void SchM_Schedulable_Gpt_STM_3_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_3_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_3_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_4_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_4_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_4_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_4_ISR_Return
extern void SchM_Schedulable_Gpt_STM_4_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_4_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_4_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_4_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_4_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_4_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_4_ISR_Start
extern void SchM_Schedulable_Gpt_STM_4_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_4_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_4_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_5_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_5_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_5_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_5_ISR_Return
extern void SchM_Schedulable_Gpt_STM_5_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_5_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_5_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_5_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_5_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_5_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_5_ISR_Start
extern void SchM_Schedulable_Gpt_STM_5_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_5_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_5_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_6_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_6_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_6_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_6_ISR_Return
extern void SchM_Schedulable_Gpt_STM_6_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_6_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_6_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_6_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_6_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_6_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_6_ISR_Start
extern void SchM_Schedulable_Gpt_STM_6_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_6_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_6_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_7_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_7_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_7_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_7_ISR_Return
extern void SchM_Schedulable_Gpt_STM_7_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_7_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_7_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_7_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_7_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_7_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_7_ISR_Start
extern void SchM_Schedulable_Gpt_STM_7_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_7_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_7_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_8_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_8_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_8_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_8_ISR_Return
extern void SchM_Schedulable_Gpt_STM_8_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_8_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_8_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_8_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_8_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_8_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_8_ISR_Start
extern void SchM_Schedulable_Gpt_STM_8_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_8_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_8_ISR_Start */

#if defined(SchM_Schedulable_Gpt_STM_9_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_9_ISR_Return
#endif
#if defined(SchM_Schedulable_Gpt_STM_9_ISR_Return)
#undef SchM_Schedulable_Gpt_STM_9_ISR_Return
extern void SchM_Schedulable_Gpt_STM_9_ISR_Return(void);
#else
#define SchM_Schedulable_Gpt_STM_9_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_9_ISR_Return */

#if defined(SchM_Schedulable_Gpt_STM_9_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_STM_9_ISR_Start
#endif
#if defined(SchM_Schedulable_Gpt_STM_9_ISR_Start)
#undef SchM_Schedulable_Gpt_STM_9_ISR_Start
extern void SchM_Schedulable_Gpt_STM_9_ISR_Start(void);
#else
#define SchM_Schedulable_Gpt_STM_9_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_STM_9_ISR_Start */

#if defined(SchM_Schedulable_Gpt_SetClockMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SetClockMode_Return
#endif
#if defined(SchM_Schedulable_Gpt_SetClockMode_Return)
#undef SchM_Schedulable_Gpt_SetClockMode_Return
extern void SchM_Schedulable_Gpt_SetClockMode_Return(void);
#else
#define SchM_Schedulable_Gpt_SetClockMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SetClockMode_Return */

#if defined(SchM_Schedulable_Gpt_SetClockMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SetClockMode_Start
#endif
#if defined(SchM_Schedulable_Gpt_SetClockMode_Start)
#undef SchM_Schedulable_Gpt_SetClockMode_Start
extern void SchM_Schedulable_Gpt_SetClockMode_Start(void);
#else
#define SchM_Schedulable_Gpt_SetClockMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SetClockMode_Start */

#if defined(SchM_Schedulable_Gpt_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SetMode_Return
#endif
#if defined(SchM_Schedulable_Gpt_SetMode_Return)
#undef SchM_Schedulable_Gpt_SetMode_Return
extern void SchM_Schedulable_Gpt_SetMode_Return(void);
#else
#define SchM_Schedulable_Gpt_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SetMode_Return */

#if defined(SchM_Schedulable_Gpt_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_SetMode_Start
#endif
#if defined(SchM_Schedulable_Gpt_SetMode_Start)
#undef SchM_Schedulable_Gpt_SetMode_Start
extern void SchM_Schedulable_Gpt_SetMode_Start(void);
#else
#define SchM_Schedulable_Gpt_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_SetMode_Start */

#if defined(SchM_Schedulable_Gpt_StartTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_StartTimer_Return
#endif
#if defined(SchM_Schedulable_Gpt_StartTimer_Return)
#undef SchM_Schedulable_Gpt_StartTimer_Return
extern void SchM_Schedulable_Gpt_StartTimer_Return(void);
#else
#define SchM_Schedulable_Gpt_StartTimer_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_StartTimer_Return */

#if defined(SchM_Schedulable_Gpt_StartTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_StartTimer_Start
#endif
#if defined(SchM_Schedulable_Gpt_StartTimer_Start)
#undef SchM_Schedulable_Gpt_StartTimer_Start
extern void SchM_Schedulable_Gpt_StartTimer_Start(void);
#else
#define SchM_Schedulable_Gpt_StartTimer_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_StartTimer_Start */

#if defined(SchM_Schedulable_Gpt_StopTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_StopTimer_Return
#endif
#if defined(SchM_Schedulable_Gpt_StopTimer_Return)
#undef SchM_Schedulable_Gpt_StopTimer_Return
extern void SchM_Schedulable_Gpt_StopTimer_Return(void);
#else
#define SchM_Schedulable_Gpt_StopTimer_Return() ((void)(0))
#endif /* SchM_Schedulable_Gpt_StopTimer_Return */

#if defined(SchM_Schedulable_Gpt_StopTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Gpt_StopTimer_Start
#endif
#if defined(SchM_Schedulable_Gpt_StopTimer_Start)
#undef SchM_Schedulable_Gpt_StopTimer_Start
extern void SchM_Schedulable_Gpt_StopTimer_Start(void);
#else
#define SchM_Schedulable_Gpt_StopTimer_Start() ((void)(0))
#endif /* SchM_Schedulable_Gpt_StopTimer_Start */

#if defined(SchM_Schedulable_Icu_CMP_0_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CMP_0_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_CMP_0_ISR_Return)
#undef SchM_Schedulable_Icu_CMP_0_ISR_Return
extern void SchM_Schedulable_Icu_CMP_0_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_CMP_0_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_CMP_0_ISR_Return */

#if defined(SchM_Schedulable_Icu_CMP_0_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CMP_0_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_CMP_0_ISR_Start)
#undef SchM_Schedulable_Icu_CMP_0_ISR_Start
extern void SchM_Schedulable_Icu_CMP_0_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_CMP_0_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_CMP_0_ISR_Start */

#if defined(SchM_Schedulable_Icu_CMP_1_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CMP_1_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_CMP_1_ISR_Return)
#undef SchM_Schedulable_Icu_CMP_1_ISR_Return
extern void SchM_Schedulable_Icu_CMP_1_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_CMP_1_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_CMP_1_ISR_Return */

#if defined(SchM_Schedulable_Icu_CMP_1_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CMP_1_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_CMP_1_ISR_Start)
#undef SchM_Schedulable_Icu_CMP_1_ISR_Start
extern void SchM_Schedulable_Icu_CMP_1_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_CMP_1_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_CMP_1_ISR_Start */

#if defined(SchM_Schedulable_Icu_CMP_2_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CMP_2_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_CMP_2_ISR_Return)
#undef SchM_Schedulable_Icu_CMP_2_ISR_Return
extern void SchM_Schedulable_Icu_CMP_2_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_CMP_2_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_CMP_2_ISR_Return */

#if defined(SchM_Schedulable_Icu_CMP_2_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CMP_2_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_CMP_2_ISR_Start)
#undef SchM_Schedulable_Icu_CMP_2_ISR_Start
extern void SchM_Schedulable_Icu_CMP_2_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_CMP_2_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_CMP_2_ISR_Start */

#if defined(SchM_Schedulable_Icu_CheckWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CheckWakeup_Return
#endif
#if defined(SchM_Schedulable_Icu_CheckWakeup_Return)
#undef SchM_Schedulable_Icu_CheckWakeup_Return
extern void SchM_Schedulable_Icu_CheckWakeup_Return(void);
#else
#define SchM_Schedulable_Icu_CheckWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_CheckWakeup_Return */

#if defined(SchM_Schedulable_Icu_CheckWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_CheckWakeup_Start
#endif
#if defined(SchM_Schedulable_Icu_CheckWakeup_Start)
#undef SchM_Schedulable_Icu_CheckWakeup_Start
extern void SchM_Schedulable_Icu_CheckWakeup_Start(void);
#else
#define SchM_Schedulable_Icu_CheckWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_CheckWakeup_Start */

#if defined(SchM_Schedulable_Icu_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DeInit_Return
#endif
#if defined(SchM_Schedulable_Icu_DeInit_Return)
#undef SchM_Schedulable_Icu_DeInit_Return
extern void SchM_Schedulable_Icu_DeInit_Return(void);
#else
#define SchM_Schedulable_Icu_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_DeInit_Return */

#if defined(SchM_Schedulable_Icu_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DeInit_Start
#endif
#if defined(SchM_Schedulable_Icu_DeInit_Start)
#undef SchM_Schedulable_Icu_DeInit_Start
extern void SchM_Schedulable_Icu_DeInit_Start(void);
#else
#define SchM_Schedulable_Icu_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_DeInit_Start */

#if defined(SchM_Schedulable_Icu_DisableEdgeCount_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableEdgeCount_Return
#endif
#if defined(SchM_Schedulable_Icu_DisableEdgeCount_Return)
#undef SchM_Schedulable_Icu_DisableEdgeCount_Return
extern void SchM_Schedulable_Icu_DisableEdgeCount_Return(void);
#else
#define SchM_Schedulable_Icu_DisableEdgeCount_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableEdgeCount_Return */

#if defined(SchM_Schedulable_Icu_DisableEdgeCount_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableEdgeCount_Start
#endif
#if defined(SchM_Schedulable_Icu_DisableEdgeCount_Start)
#undef SchM_Schedulable_Icu_DisableEdgeCount_Start
extern void SchM_Schedulable_Icu_DisableEdgeCount_Start(void);
#else
#define SchM_Schedulable_Icu_DisableEdgeCount_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableEdgeCount_Start */

#if defined(SchM_Schedulable_Icu_DisableEdgeDetection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableEdgeDetection_Return
#endif
#if defined(SchM_Schedulable_Icu_DisableEdgeDetection_Return)
#undef SchM_Schedulable_Icu_DisableEdgeDetection_Return
extern void SchM_Schedulable_Icu_DisableEdgeDetection_Return(void);
#else
#define SchM_Schedulable_Icu_DisableEdgeDetection_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableEdgeDetection_Return */

#if defined(SchM_Schedulable_Icu_DisableEdgeDetection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableEdgeDetection_Start
#endif
#if defined(SchM_Schedulable_Icu_DisableEdgeDetection_Start)
#undef SchM_Schedulable_Icu_DisableEdgeDetection_Start
extern void SchM_Schedulable_Icu_DisableEdgeDetection_Start(void);
#else
#define SchM_Schedulable_Icu_DisableEdgeDetection_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableEdgeDetection_Start */

#if defined(SchM_Schedulable_Icu_DisableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableNotification_Return
#endif
#if defined(SchM_Schedulable_Icu_DisableNotification_Return)
#undef SchM_Schedulable_Icu_DisableNotification_Return
extern void SchM_Schedulable_Icu_DisableNotification_Return(void);
#else
#define SchM_Schedulable_Icu_DisableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableNotification_Return */

#if defined(SchM_Schedulable_Icu_DisableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableNotification_Start
#endif
#if defined(SchM_Schedulable_Icu_DisableNotification_Start)
#undef SchM_Schedulable_Icu_DisableNotification_Start
extern void SchM_Schedulable_Icu_DisableNotification_Start(void);
#else
#define SchM_Schedulable_Icu_DisableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableNotification_Start */

#if defined(SchM_Schedulable_Icu_DisableWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableWakeup_Return
#endif
#if defined(SchM_Schedulable_Icu_DisableWakeup_Return)
#undef SchM_Schedulable_Icu_DisableWakeup_Return
extern void SchM_Schedulable_Icu_DisableWakeup_Return(void);
#else
#define SchM_Schedulable_Icu_DisableWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableWakeup_Return */

#if defined(SchM_Schedulable_Icu_DisableWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_DisableWakeup_Start
#endif
#if defined(SchM_Schedulable_Icu_DisableWakeup_Start)
#undef SchM_Schedulable_Icu_DisableWakeup_Start
extern void SchM_Schedulable_Icu_DisableWakeup_Start(void);
#else
#define SchM_Schedulable_Icu_DisableWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_DisableWakeup_Start */

#if defined(SchM_Schedulable_Icu_EnableEdgeCount_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableEdgeCount_Return
#endif
#if defined(SchM_Schedulable_Icu_EnableEdgeCount_Return)
#undef SchM_Schedulable_Icu_EnableEdgeCount_Return
extern void SchM_Schedulable_Icu_EnableEdgeCount_Return(void);
#else
#define SchM_Schedulable_Icu_EnableEdgeCount_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableEdgeCount_Return */

#if defined(SchM_Schedulable_Icu_EnableEdgeCount_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableEdgeCount_Start
#endif
#if defined(SchM_Schedulable_Icu_EnableEdgeCount_Start)
#undef SchM_Schedulable_Icu_EnableEdgeCount_Start
extern void SchM_Schedulable_Icu_EnableEdgeCount_Start(void);
#else
#define SchM_Schedulable_Icu_EnableEdgeCount_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableEdgeCount_Start */

#if defined(SchM_Schedulable_Icu_EnableEdgeDetection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableEdgeDetection_Return
#endif
#if defined(SchM_Schedulable_Icu_EnableEdgeDetection_Return)
#undef SchM_Schedulable_Icu_EnableEdgeDetection_Return
extern void SchM_Schedulable_Icu_EnableEdgeDetection_Return(void);
#else
#define SchM_Schedulable_Icu_EnableEdgeDetection_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableEdgeDetection_Return */

#if defined(SchM_Schedulable_Icu_EnableEdgeDetection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableEdgeDetection_Start
#endif
#if defined(SchM_Schedulable_Icu_EnableEdgeDetection_Start)
#undef SchM_Schedulable_Icu_EnableEdgeDetection_Start
extern void SchM_Schedulable_Icu_EnableEdgeDetection_Start(void);
#else
#define SchM_Schedulable_Icu_EnableEdgeDetection_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableEdgeDetection_Start */

#if defined(SchM_Schedulable_Icu_EnableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableNotification_Return
#endif
#if defined(SchM_Schedulable_Icu_EnableNotification_Return)
#undef SchM_Schedulable_Icu_EnableNotification_Return
extern void SchM_Schedulable_Icu_EnableNotification_Return(void);
#else
#define SchM_Schedulable_Icu_EnableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableNotification_Return */

#if defined(SchM_Schedulable_Icu_EnableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableNotification_Start
#endif
#if defined(SchM_Schedulable_Icu_EnableNotification_Start)
#undef SchM_Schedulable_Icu_EnableNotification_Start
extern void SchM_Schedulable_Icu_EnableNotification_Start(void);
#else
#define SchM_Schedulable_Icu_EnableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableNotification_Start */

#if defined(SchM_Schedulable_Icu_EnableWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableWakeup_Return
#endif
#if defined(SchM_Schedulable_Icu_EnableWakeup_Return)
#undef SchM_Schedulable_Icu_EnableWakeup_Return
extern void SchM_Schedulable_Icu_EnableWakeup_Return(void);
#else
#define SchM_Schedulable_Icu_EnableWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableWakeup_Return */

#if defined(SchM_Schedulable_Icu_EnableWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_EnableWakeup_Start
#endif
#if defined(SchM_Schedulable_Icu_EnableWakeup_Start)
#undef SchM_Schedulable_Icu_EnableWakeup_Start
extern void SchM_Schedulable_Icu_EnableWakeup_Start(void);
#else
#define SchM_Schedulable_Icu_EnableWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_EnableWakeup_Start */

#if defined(SchM_Schedulable_Icu_GetCaptureRegisterValue_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetCaptureRegisterValue_Return
#endif
#if defined(SchM_Schedulable_Icu_GetCaptureRegisterValue_Return)
#undef SchM_Schedulable_Icu_GetCaptureRegisterValue_Return
extern void SchM_Schedulable_Icu_GetCaptureRegisterValue_Return(void);
#else
#define SchM_Schedulable_Icu_GetCaptureRegisterValue_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetCaptureRegisterValue_Return */

#if defined(SchM_Schedulable_Icu_GetCaptureRegisterValue_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetCaptureRegisterValue_Start
#endif
#if defined(SchM_Schedulable_Icu_GetCaptureRegisterValue_Start)
#undef SchM_Schedulable_Icu_GetCaptureRegisterValue_Start
extern void SchM_Schedulable_Icu_GetCaptureRegisterValue_Start(void);
#else
#define SchM_Schedulable_Icu_GetCaptureRegisterValue_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetCaptureRegisterValue_Start */

#if defined(SchM_Schedulable_Icu_GetDutyCycleValues_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetDutyCycleValues_Return
#endif
#if defined(SchM_Schedulable_Icu_GetDutyCycleValues_Return)
#undef SchM_Schedulable_Icu_GetDutyCycleValues_Return
extern void SchM_Schedulable_Icu_GetDutyCycleValues_Return(void);
#else
#define SchM_Schedulable_Icu_GetDutyCycleValues_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetDutyCycleValues_Return */

#if defined(SchM_Schedulable_Icu_GetDutyCycleValues_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetDutyCycleValues_Start
#endif
#if defined(SchM_Schedulable_Icu_GetDutyCycleValues_Start)
#undef SchM_Schedulable_Icu_GetDutyCycleValues_Start
extern void SchM_Schedulable_Icu_GetDutyCycleValues_Start(void);
#else
#define SchM_Schedulable_Icu_GetDutyCycleValues_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetDutyCycleValues_Start */

#if defined(SchM_Schedulable_Icu_GetEdgeNumbers_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetEdgeNumbers_Return
#endif
#if defined(SchM_Schedulable_Icu_GetEdgeNumbers_Return)
#undef SchM_Schedulable_Icu_GetEdgeNumbers_Return
extern void SchM_Schedulable_Icu_GetEdgeNumbers_Return(void);
#else
#define SchM_Schedulable_Icu_GetEdgeNumbers_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetEdgeNumbers_Return */

#if defined(SchM_Schedulable_Icu_GetEdgeNumbers_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetEdgeNumbers_Start
#endif
#if defined(SchM_Schedulable_Icu_GetEdgeNumbers_Start)
#undef SchM_Schedulable_Icu_GetEdgeNumbers_Start
extern void SchM_Schedulable_Icu_GetEdgeNumbers_Start(void);
#else
#define SchM_Schedulable_Icu_GetEdgeNumbers_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetEdgeNumbers_Start */

#if defined(SchM_Schedulable_Icu_GetInputLevel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetInputLevel_Return
#endif
#if defined(SchM_Schedulable_Icu_GetInputLevel_Return)
#undef SchM_Schedulable_Icu_GetInputLevel_Return
extern void SchM_Schedulable_Icu_GetInputLevel_Return(void);
#else
#define SchM_Schedulable_Icu_GetInputLevel_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetInputLevel_Return */

#if defined(SchM_Schedulable_Icu_GetInputLevel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetInputLevel_Start
#endif
#if defined(SchM_Schedulable_Icu_GetInputLevel_Start)
#undef SchM_Schedulable_Icu_GetInputLevel_Start
extern void SchM_Schedulable_Icu_GetInputLevel_Start(void);
#else
#define SchM_Schedulable_Icu_GetInputLevel_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetInputLevel_Start */

#if defined(SchM_Schedulable_Icu_GetInputState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetInputState_Return
#endif
#if defined(SchM_Schedulable_Icu_GetInputState_Return)
#undef SchM_Schedulable_Icu_GetInputState_Return
extern void SchM_Schedulable_Icu_GetInputState_Return(void);
#else
#define SchM_Schedulable_Icu_GetInputState_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetInputState_Return */

#if defined(SchM_Schedulable_Icu_GetInputState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetInputState_Start
#endif
#if defined(SchM_Schedulable_Icu_GetInputState_Start)
#undef SchM_Schedulable_Icu_GetInputState_Start
extern void SchM_Schedulable_Icu_GetInputState_Start(void);
#else
#define SchM_Schedulable_Icu_GetInputState_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetInputState_Start */

#if defined(SchM_Schedulable_Icu_GetPulseWidth_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetPulseWidth_Return
#endif
#if defined(SchM_Schedulable_Icu_GetPulseWidth_Return)
#undef SchM_Schedulable_Icu_GetPulseWidth_Return
extern void SchM_Schedulable_Icu_GetPulseWidth_Return(void);
#else
#define SchM_Schedulable_Icu_GetPulseWidth_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetPulseWidth_Return */

#if defined(SchM_Schedulable_Icu_GetPulseWidth_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetPulseWidth_Start
#endif
#if defined(SchM_Schedulable_Icu_GetPulseWidth_Start)
#undef SchM_Schedulable_Icu_GetPulseWidth_Start
extern void SchM_Schedulable_Icu_GetPulseWidth_Start(void);
#else
#define SchM_Schedulable_Icu_GetPulseWidth_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetPulseWidth_Start */

#if defined(SchM_Schedulable_Icu_GetTimeElapsed_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetTimeElapsed_Return
#endif
#if defined(SchM_Schedulable_Icu_GetTimeElapsed_Return)
#undef SchM_Schedulable_Icu_GetTimeElapsed_Return
extern void SchM_Schedulable_Icu_GetTimeElapsed_Return(void);
#else
#define SchM_Schedulable_Icu_GetTimeElapsed_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetTimeElapsed_Return */

#if defined(SchM_Schedulable_Icu_GetTimeElapsed_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetTimeElapsed_Start
#endif
#if defined(SchM_Schedulable_Icu_GetTimeElapsed_Start)
#undef SchM_Schedulable_Icu_GetTimeElapsed_Start
extern void SchM_Schedulable_Icu_GetTimeElapsed_Start(void);
#else
#define SchM_Schedulable_Icu_GetTimeElapsed_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetTimeElapsed_Start */

#if defined(SchM_Schedulable_Icu_GetTimestampIndex_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetTimestampIndex_Return
#endif
#if defined(SchM_Schedulable_Icu_GetTimestampIndex_Return)
#undef SchM_Schedulable_Icu_GetTimestampIndex_Return
extern void SchM_Schedulable_Icu_GetTimestampIndex_Return(void);
#else
#define SchM_Schedulable_Icu_GetTimestampIndex_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetTimestampIndex_Return */

#if defined(SchM_Schedulable_Icu_GetTimestampIndex_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetTimestampIndex_Start
#endif
#if defined(SchM_Schedulable_Icu_GetTimestampIndex_Start)
#undef SchM_Schedulable_Icu_GetTimestampIndex_Start
extern void SchM_Schedulable_Icu_GetTimestampIndex_Start(void);
#else
#define SchM_Schedulable_Icu_GetTimestampIndex_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetTimestampIndex_Start */

#if defined(SchM_Schedulable_Icu_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Icu_GetVersionInfo_Return)
#undef SchM_Schedulable_Icu_GetVersionInfo_Return
extern void SchM_Schedulable_Icu_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Icu_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Icu_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Icu_GetVersionInfo_Start)
#undef SchM_Schedulable_Icu_GetVersionInfo_Start
extern void SchM_Schedulable_Icu_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Icu_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Icu_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_Init_Return
#endif
#if defined(SchM_Schedulable_Icu_Init_Return)
#undef SchM_Schedulable_Icu_Init_Return
extern void SchM_Schedulable_Icu_Init_Return(void);
#else
#define SchM_Schedulable_Icu_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_Init_Return */

#if defined(SchM_Schedulable_Icu_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_Init_Start
#endif
#if defined(SchM_Schedulable_Icu_Init_Start)
#undef SchM_Schedulable_Icu_Init_Start
extern void SchM_Schedulable_Icu_Init_Start(void);
#else
#define SchM_Schedulable_Icu_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_Init_Start */

#if defined(SchM_Schedulable_Icu_ResetEdgeCount_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_ResetEdgeCount_Return
#endif
#if defined(SchM_Schedulable_Icu_ResetEdgeCount_Return)
#undef SchM_Schedulable_Icu_ResetEdgeCount_Return
extern void SchM_Schedulable_Icu_ResetEdgeCount_Return(void);
#else
#define SchM_Schedulable_Icu_ResetEdgeCount_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_ResetEdgeCount_Return */

#if defined(SchM_Schedulable_Icu_ResetEdgeCount_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_ResetEdgeCount_Start
#endif
#if defined(SchM_Schedulable_Icu_ResetEdgeCount_Start)
#undef SchM_Schedulable_Icu_ResetEdgeCount_Start
extern void SchM_Schedulable_Icu_ResetEdgeCount_Start(void);
#else
#define SchM_Schedulable_Icu_ResetEdgeCount_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_ResetEdgeCount_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Return)
#undef SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Return
extern void SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Start)
#undef SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Start
extern void SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_0_ICU_EIRQ_SINGLE_INT_HANDLER_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Return)
#undef SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Return
extern void SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Start)
#undef SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Start
extern void SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_1_ICU_EIRQ_SINGLE_INT_HANDLER_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Return)
#undef SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Return
extern void SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Start)
#undef SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Start
extern void SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_4_ICU_EIRQ_SINGLE_INT_HANDLER_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Return)
#undef SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Return
extern void SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Start)
#undef SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Start
extern void SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_5_ICU_EIRQ_SINGLE_INT_HANDLER_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Return)
#undef SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Return
extern void SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Start)
#undef SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Start
extern void SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_AE_ICU_EIRQ_SINGLE_INT_HANDLER_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Return)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Return
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Start)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Start
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_0_7_ISR_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Return)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Return
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Start)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Start
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_16_23_ISR_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Return)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Return
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Start)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Start
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_24_31_ISR_Start */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Return)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Return
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Return */

#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Start)
#undef SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Start
extern void SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SIUL2_EXT_IRQ_8_15_ISR_Start */

#if defined(SchM_Schedulable_Icu_SetActivationCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SetActivationCondition_Return
#endif
#if defined(SchM_Schedulable_Icu_SetActivationCondition_Return)
#undef SchM_Schedulable_Icu_SetActivationCondition_Return
extern void SchM_Schedulable_Icu_SetActivationCondition_Return(void);
#else
#define SchM_Schedulable_Icu_SetActivationCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SetActivationCondition_Return */

#if defined(SchM_Schedulable_Icu_SetActivationCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SetActivationCondition_Start
#endif
#if defined(SchM_Schedulable_Icu_SetActivationCondition_Start)
#undef SchM_Schedulable_Icu_SetActivationCondition_Start
extern void SchM_Schedulable_Icu_SetActivationCondition_Start(void);
#else
#define SchM_Schedulable_Icu_SetActivationCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SetActivationCondition_Start */

#if defined(SchM_Schedulable_Icu_SetClockMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SetClockMode_Return
#endif
#if defined(SchM_Schedulable_Icu_SetClockMode_Return)
#undef SchM_Schedulable_Icu_SetClockMode_Return
extern void SchM_Schedulable_Icu_SetClockMode_Return(void);
#else
#define SchM_Schedulable_Icu_SetClockMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SetClockMode_Return */

#if defined(SchM_Schedulable_Icu_SetClockMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SetClockMode_Start
#endif
#if defined(SchM_Schedulable_Icu_SetClockMode_Start)
#undef SchM_Schedulable_Icu_SetClockMode_Start
extern void SchM_Schedulable_Icu_SetClockMode_Start(void);
#else
#define SchM_Schedulable_Icu_SetClockMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SetClockMode_Start */

#if defined(SchM_Schedulable_Icu_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SetMode_Return
#endif
#if defined(SchM_Schedulable_Icu_SetMode_Return)
#undef SchM_Schedulable_Icu_SetMode_Return
extern void SchM_Schedulable_Icu_SetMode_Return(void);
#else
#define SchM_Schedulable_Icu_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SetMode_Return */

#if defined(SchM_Schedulable_Icu_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SetMode_Start
#endif
#if defined(SchM_Schedulable_Icu_SetMode_Start)
#undef SchM_Schedulable_Icu_SetMode_Start
extern void SchM_Schedulable_Icu_SetMode_Start(void);
#else
#define SchM_Schedulable_Icu_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SetMode_Start */

#if defined(SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Return
#endif
#if defined(SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Return)
#undef SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Return
extern void SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Return(void);
#else
#define SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Return */

#if defined(SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Start
#endif
#if defined(SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Start)
#undef SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Start
extern void SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Start(void);
#else
#define SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_SignalMeasurementDmaProcessing_Start */

#if defined(SchM_Schedulable_Icu_StartSignalMeasurement_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StartSignalMeasurement_Return
#endif
#if defined(SchM_Schedulable_Icu_StartSignalMeasurement_Return)
#undef SchM_Schedulable_Icu_StartSignalMeasurement_Return
extern void SchM_Schedulable_Icu_StartSignalMeasurement_Return(void);
#else
#define SchM_Schedulable_Icu_StartSignalMeasurement_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_StartSignalMeasurement_Return */

#if defined(SchM_Schedulable_Icu_StartSignalMeasurement_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StartSignalMeasurement_Start
#endif
#if defined(SchM_Schedulable_Icu_StartSignalMeasurement_Start)
#undef SchM_Schedulable_Icu_StartSignalMeasurement_Start
extern void SchM_Schedulable_Icu_StartSignalMeasurement_Start(void);
#else
#define SchM_Schedulable_Icu_StartSignalMeasurement_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_StartSignalMeasurement_Start */

#if defined(SchM_Schedulable_Icu_StartTimestamp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StartTimestamp_Return
#endif
#if defined(SchM_Schedulable_Icu_StartTimestamp_Return)
#undef SchM_Schedulable_Icu_StartTimestamp_Return
extern void SchM_Schedulable_Icu_StartTimestamp_Return(void);
#else
#define SchM_Schedulable_Icu_StartTimestamp_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_StartTimestamp_Return */

#if defined(SchM_Schedulable_Icu_StartTimestamp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StartTimestamp_Start
#endif
#if defined(SchM_Schedulable_Icu_StartTimestamp_Start)
#undef SchM_Schedulable_Icu_StartTimestamp_Start
extern void SchM_Schedulable_Icu_StartTimestamp_Start(void);
#else
#define SchM_Schedulable_Icu_StartTimestamp_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_StartTimestamp_Start */

#if defined(SchM_Schedulable_Icu_StopSignalMeasurement_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StopSignalMeasurement_Return
#endif
#if defined(SchM_Schedulable_Icu_StopSignalMeasurement_Return)
#undef SchM_Schedulable_Icu_StopSignalMeasurement_Return
extern void SchM_Schedulable_Icu_StopSignalMeasurement_Return(void);
#else
#define SchM_Schedulable_Icu_StopSignalMeasurement_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_StopSignalMeasurement_Return */

#if defined(SchM_Schedulable_Icu_StopSignalMeasurement_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StopSignalMeasurement_Start
#endif
#if defined(SchM_Schedulable_Icu_StopSignalMeasurement_Start)
#undef SchM_Schedulable_Icu_StopSignalMeasurement_Start
extern void SchM_Schedulable_Icu_StopSignalMeasurement_Start(void);
#else
#define SchM_Schedulable_Icu_StopSignalMeasurement_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_StopSignalMeasurement_Start */

#if defined(SchM_Schedulable_Icu_StopTimestamp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StopTimestamp_Return
#endif
#if defined(SchM_Schedulable_Icu_StopTimestamp_Return)
#undef SchM_Schedulable_Icu_StopTimestamp_Return
extern void SchM_Schedulable_Icu_StopTimestamp_Return(void);
#else
#define SchM_Schedulable_Icu_StopTimestamp_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_StopTimestamp_Return */

#if defined(SchM_Schedulable_Icu_StopTimestamp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_StopTimestamp_Start
#endif
#if defined(SchM_Schedulable_Icu_StopTimestamp_Start)
#undef SchM_Schedulable_Icu_StopTimestamp_Start
extern void SchM_Schedulable_Icu_StopTimestamp_Start(void);
#else
#define SchM_Schedulable_Icu_StopTimestamp_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_StopTimestamp_Start */

#if defined(SchM_Schedulable_Icu_TimestampDmaProcessing_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_TimestampDmaProcessing_Return
#endif
#if defined(SchM_Schedulable_Icu_TimestampDmaProcessing_Return)
#undef SchM_Schedulable_Icu_TimestampDmaProcessing_Return
extern void SchM_Schedulable_Icu_TimestampDmaProcessing_Return(void);
#else
#define SchM_Schedulable_Icu_TimestampDmaProcessing_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_TimestampDmaProcessing_Return */

#if defined(SchM_Schedulable_Icu_TimestampDmaProcessing_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_TimestampDmaProcessing_Start
#endif
#if defined(SchM_Schedulable_Icu_TimestampDmaProcessing_Start)
#undef SchM_Schedulable_Icu_TimestampDmaProcessing_Start
extern void SchM_Schedulable_Icu_TimestampDmaProcessing_Start(void);
#else
#define SchM_Schedulable_Icu_TimestampDmaProcessing_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_TimestampDmaProcessing_Start */

#if defined(SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Return
#endif
#if defined(SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Return)
#undef SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Return
extern void SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Return(void);
#else
#define SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Return */

#if defined(SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Start
#endif
#if defined(SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Start)
#undef SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Start
extern void SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Start(void);
#else
#define SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Icu_WKPU_EXT_IRQ_SINGLE_ISR_Start */

#if defined(SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Return)
#undef SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Return
extern void SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Return(void);
#else
#define SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Return */

#if defined(SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Start)
#undef SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Start
extern void SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Start(void);
#else
#define SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_AnaInDirReadDirect_Start */

#if defined(SchM_Schedulable_IoHwAb_DigDirIsInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirIsInput_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirIsInput_Return)
#undef SchM_Schedulable_IoHwAb_DigDirIsInput_Return
extern void SchM_Schedulable_IoHwAb_DigDirIsInput_Return(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirIsInput_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirIsInput_Return */

#if defined(SchM_Schedulable_IoHwAb_DigDirIsInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirIsInput_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirIsInput_Start)
#undef SchM_Schedulable_IoHwAb_DigDirIsInput_Start
extern void SchM_Schedulable_IoHwAb_DigDirIsInput_Start(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirIsInput_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirIsInput_Start */

#if defined(SchM_Schedulable_IoHwAb_DigDirIsOutput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirIsOutput_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirIsOutput_Return)
#undef SchM_Schedulable_IoHwAb_DigDirIsOutput_Return
extern void SchM_Schedulable_IoHwAb_DigDirIsOutput_Return(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirIsOutput_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirIsOutput_Return */

#if defined(SchM_Schedulable_IoHwAb_DigDirIsOutput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirIsOutput_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirIsOutput_Start)
#undef SchM_Schedulable_IoHwAb_DigDirIsOutput_Start
extern void SchM_Schedulable_IoHwAb_DigDirIsOutput_Start(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirIsOutput_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirIsOutput_Start */

#if defined(SchM_Schedulable_IoHwAb_DigDirReadDirect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirReadDirect_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirReadDirect_Return)
#undef SchM_Schedulable_IoHwAb_DigDirReadDirect_Return
extern void SchM_Schedulable_IoHwAb_DigDirReadDirect_Return(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirReadDirect_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirReadDirect_Return */

#if defined(SchM_Schedulable_IoHwAb_DigDirReadDirect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirReadDirect_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirReadDirect_Start)
#undef SchM_Schedulable_IoHwAb_DigDirReadDirect_Start
extern void SchM_Schedulable_IoHwAb_DigDirReadDirect_Start(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirReadDirect_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirReadDirect_Start */

#if defined(SchM_Schedulable_IoHwAb_DigDirSetToInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirSetToInput_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirSetToInput_Return)
#undef SchM_Schedulable_IoHwAb_DigDirSetToInput_Return
extern void SchM_Schedulable_IoHwAb_DigDirSetToInput_Return(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirSetToInput_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirSetToInput_Return */

#if defined(SchM_Schedulable_IoHwAb_DigDirSetToInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirSetToInput_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirSetToInput_Start)
#undef SchM_Schedulable_IoHwAb_DigDirSetToInput_Start
extern void SchM_Schedulable_IoHwAb_DigDirSetToInput_Start(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirSetToInput_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirSetToInput_Start */

#if defined(SchM_Schedulable_IoHwAb_DigDirSetToOutput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirSetToOutput_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirSetToOutput_Return)
#undef SchM_Schedulable_IoHwAb_DigDirSetToOutput_Return
extern void SchM_Schedulable_IoHwAb_DigDirSetToOutput_Return(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirSetToOutput_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirSetToOutput_Return */

#if defined(SchM_Schedulable_IoHwAb_DigDirSetToOutput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirSetToOutput_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirSetToOutput_Start)
#undef SchM_Schedulable_IoHwAb_DigDirSetToOutput_Start
extern void SchM_Schedulable_IoHwAb_DigDirSetToOutput_Start(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirSetToOutput_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirSetToOutput_Start */

#if defined(SchM_Schedulable_IoHwAb_DigDirWriteDirect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirWriteDirect_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirWriteDirect_Return)
#undef SchM_Schedulable_IoHwAb_DigDirWriteDirect_Return
extern void SchM_Schedulable_IoHwAb_DigDirWriteDirect_Return(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirWriteDirect_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirWriteDirect_Return */

#if defined(SchM_Schedulable_IoHwAb_DigDirWriteDirect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_DigDirWriteDirect_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_DigDirWriteDirect_Start)
#undef SchM_Schedulable_IoHwAb_DigDirWriteDirect_Start
extern void SchM_Schedulable_IoHwAb_DigDirWriteDirect_Start(void);
#else
#define SchM_Schedulable_IoHwAb_DigDirWriteDirect_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_DigDirWriteDirect_Start */

#if defined(SchM_Schedulable_IoHwAb_GptStartTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_GptStartTimer_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_GptStartTimer_Return)
#undef SchM_Schedulable_IoHwAb_GptStartTimer_Return
extern void SchM_Schedulable_IoHwAb_GptStartTimer_Return(void);
#else
#define SchM_Schedulable_IoHwAb_GptStartTimer_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_GptStartTimer_Return */

#if defined(SchM_Schedulable_IoHwAb_GptStartTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_GptStartTimer_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_GptStartTimer_Start)
#undef SchM_Schedulable_IoHwAb_GptStartTimer_Start
extern void SchM_Schedulable_IoHwAb_GptStartTimer_Start(void);
#else
#define SchM_Schedulable_IoHwAb_GptStartTimer_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_GptStartTimer_Start */

#if defined(SchM_Schedulable_IoHwAb_GptStopTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_GptStopTimer_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_GptStopTimer_Return)
#undef SchM_Schedulable_IoHwAb_GptStopTimer_Return
extern void SchM_Schedulable_IoHwAb_GptStopTimer_Return(void);
#else
#define SchM_Schedulable_IoHwAb_GptStopTimer_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_GptStopTimer_Return */

#if defined(SchM_Schedulable_IoHwAb_GptStopTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_GptStopTimer_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_GptStopTimer_Start)
#undef SchM_Schedulable_IoHwAb_GptStopTimer_Start
extern void SchM_Schedulable_IoHwAb_GptStopTimer_Start(void);
#else
#define SchM_Schedulable_IoHwAb_GptStopTimer_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_GptStopTimer_Start */

#if defined(SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Return
#endif
#if defined(SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Return)
#undef SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Return
extern void SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Return(void);
#else
#define SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Return */

#if defined(SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Start
#endif
#if defined(SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Start)
#undef SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Start
extern void SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Start(void);
#else
#define SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_IoHwAb_IcuSetActivationCondition_Start */

#if defined(SchM_Schedulable_IpduM_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IpduM_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_IpduM_GetVersionInfo_Return)
#undef SchM_Schedulable_IpduM_GetVersionInfo_Return
extern void SchM_Schedulable_IpduM_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_IpduM_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_IpduM_GetVersionInfo_Return */

#if defined(SchM_Schedulable_IpduM_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IpduM_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_IpduM_GetVersionInfo_Start)
#undef SchM_Schedulable_IpduM_GetVersionInfo_Start
extern void SchM_Schedulable_IpduM_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_IpduM_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_IpduM_GetVersionInfo_Start */

#if defined(SchM_Schedulable_IpduM_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IpduM_Init_Return
#endif
#if defined(SchM_Schedulable_IpduM_Init_Return)
#undef SchM_Schedulable_IpduM_Init_Return
extern void SchM_Schedulable_IpduM_Init_Return(void);
#else
#define SchM_Schedulable_IpduM_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_IpduM_Init_Return */

#if defined(SchM_Schedulable_IpduM_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_IpduM_Init_Start
#endif
#if defined(SchM_Schedulable_IpduM_Init_Start)
#undef SchM_Schedulable_IpduM_Init_Start
extern void SchM_Schedulable_IpduM_Init_Start(void);
#else
#define SchM_Schedulable_IpduM_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_IpduM_Init_Start */

#if defined(SchM_Schedulable_KeyM_CertElementGet_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertElementGet_Return
#endif
#if defined(SchM_Schedulable_KeyM_CertElementGet_Return)
#undef SchM_Schedulable_KeyM_CertElementGet_Return
extern void SchM_Schedulable_KeyM_CertElementGet_Return(void);
#else
#define SchM_Schedulable_KeyM_CertElementGet_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertElementGet_Return */

#if defined(SchM_Schedulable_KeyM_CertElementGet_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertElementGet_Start
#endif
#if defined(SchM_Schedulable_KeyM_CertElementGet_Start)
#undef SchM_Schedulable_KeyM_CertElementGet_Start
extern void SchM_Schedulable_KeyM_CertElementGet_Start(void);
#else
#define SchM_Schedulable_KeyM_CertElementGet_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertElementGet_Start */

#if defined(SchM_Schedulable_KeyM_CertGetStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertGetStatus_Return
#endif
#if defined(SchM_Schedulable_KeyM_CertGetStatus_Return)
#undef SchM_Schedulable_KeyM_CertGetStatus_Return
extern void SchM_Schedulable_KeyM_CertGetStatus_Return(void);
#else
#define SchM_Schedulable_KeyM_CertGetStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertGetStatus_Return */

#if defined(SchM_Schedulable_KeyM_CertGetStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertGetStatus_Start
#endif
#if defined(SchM_Schedulable_KeyM_CertGetStatus_Start)
#undef SchM_Schedulable_KeyM_CertGetStatus_Start
extern void SchM_Schedulable_KeyM_CertGetStatus_Start(void);
#else
#define SchM_Schedulable_KeyM_CertGetStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertGetStatus_Start */

#if defined(SchM_Schedulable_KeyM_CertificateElementGetByIndex_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertificateElementGetByIndex_Return
#endif
#if defined(SchM_Schedulable_KeyM_CertificateElementGetByIndex_Return)
#undef SchM_Schedulable_KeyM_CertificateElementGetByIndex_Return
extern void SchM_Schedulable_KeyM_CertificateElementGetByIndex_Return(void);
#else
#define SchM_Schedulable_KeyM_CertificateElementGetByIndex_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertificateElementGetByIndex_Return */

#if defined(SchM_Schedulable_KeyM_CertificateElementGetByIndex_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertificateElementGetByIndex_Start
#endif
#if defined(SchM_Schedulable_KeyM_CertificateElementGetByIndex_Start)
#undef SchM_Schedulable_KeyM_CertificateElementGetByIndex_Start
extern void SchM_Schedulable_KeyM_CertificateElementGetByIndex_Start(void);
#else
#define SchM_Schedulable_KeyM_CertificateElementGetByIndex_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertificateElementGetByIndex_Start */

#if defined(SchM_Schedulable_KeyM_CertificateElementGetCount_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertificateElementGetCount_Return
#endif
#if defined(SchM_Schedulable_KeyM_CertificateElementGetCount_Return)
#undef SchM_Schedulable_KeyM_CertificateElementGetCount_Return
extern void SchM_Schedulable_KeyM_CertificateElementGetCount_Return(void);
#else
#define SchM_Schedulable_KeyM_CertificateElementGetCount_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertificateElementGetCount_Return */

#if defined(SchM_Schedulable_KeyM_CertificateElementGetCount_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertificateElementGetCount_Start
#endif
#if defined(SchM_Schedulable_KeyM_CertificateElementGetCount_Start)
#undef SchM_Schedulable_KeyM_CertificateElementGetCount_Start
extern void SchM_Schedulable_KeyM_CertificateElementGetCount_Start(void);
#else
#define SchM_Schedulable_KeyM_CertificateElementGetCount_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertificateElementGetCount_Start */

#if defined(SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Return
#endif
#if defined(SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Return)
#undef SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Return
extern void SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Return(void);
#else
#define SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Return */

#if defined(SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Start
#endif
#if defined(SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Start)
#undef SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Start
extern void SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Start(void);
#else
#define SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CertificateVerifyCallbackNotification_Start */

#if defined(SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Return
#endif
#if defined(SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Return)
#undef SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Return
extern void SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Return(void);
#else
#define SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Return */

#if defined(SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Start
#endif
#if defined(SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Start)
#undef SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Start
extern void SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Start(void);
#else
#define SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CryptoKeyFinalizeCallbackNotification_Start */

#if defined(SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Return
#endif
#if defined(SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Return)
#undef SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Return
extern void SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Return(void);
#else
#define SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Return */

#if defined(SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Start
#endif
#if defined(SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Start)
#undef SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Start
extern void SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Start(void);
#else
#define SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CryptoKeyUpdateCallbackNotification_Start */

#if defined(SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Return
#endif
#if defined(SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Return)
#undef SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Return
extern void SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Return(void);
#else
#define SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Return */

#if defined(SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Start
#endif
#if defined(SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Start)
#undef SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Start
extern void SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Start(void);
#else
#define SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_CryptoKeyVerifyCallbackNotification_Start */

#if defined(SchM_Schedulable_KeyM_Deinit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Deinit_Return
#endif
#if defined(SchM_Schedulable_KeyM_Deinit_Return)
#undef SchM_Schedulable_KeyM_Deinit_Return
extern void SchM_Schedulable_KeyM_Deinit_Return(void);
#else
#define SchM_Schedulable_KeyM_Deinit_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Deinit_Return */

#if defined(SchM_Schedulable_KeyM_Deinit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Deinit_Start
#endif
#if defined(SchM_Schedulable_KeyM_Deinit_Start)
#undef SchM_Schedulable_KeyM_Deinit_Start
extern void SchM_Schedulable_KeyM_Deinit_Start(void);
#else
#define SchM_Schedulable_KeyM_Deinit_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Deinit_Start */

#if defined(SchM_Schedulable_KeyM_Finalize_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Finalize_Return
#endif
#if defined(SchM_Schedulable_KeyM_Finalize_Return)
#undef SchM_Schedulable_KeyM_Finalize_Return
extern void SchM_Schedulable_KeyM_Finalize_Return(void);
#else
#define SchM_Schedulable_KeyM_Finalize_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Finalize_Return */

#if defined(SchM_Schedulable_KeyM_Finalize_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Finalize_Start
#endif
#if defined(SchM_Schedulable_KeyM_Finalize_Start)
#undef SchM_Schedulable_KeyM_Finalize_Start
extern void SchM_Schedulable_KeyM_Finalize_Start(void);
#else
#define SchM_Schedulable_KeyM_Finalize_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Finalize_Start */

#if defined(SchM_Schedulable_KeyM_GetCertificate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_GetCertificate_Return
#endif
#if defined(SchM_Schedulable_KeyM_GetCertificate_Return)
#undef SchM_Schedulable_KeyM_GetCertificate_Return
extern void SchM_Schedulable_KeyM_GetCertificate_Return(void);
#else
#define SchM_Schedulable_KeyM_GetCertificate_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_GetCertificate_Return */

#if defined(SchM_Schedulable_KeyM_GetCertificate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_GetCertificate_Start
#endif
#if defined(SchM_Schedulable_KeyM_GetCertificate_Start)
#undef SchM_Schedulable_KeyM_GetCertificate_Start
extern void SchM_Schedulable_KeyM_GetCertificate_Start(void);
#else
#define SchM_Schedulable_KeyM_GetCertificate_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_GetCertificate_Start */

#if defined(SchM_Schedulable_KeyM_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_KeyM_GetVersionInfo_Return)
#undef SchM_Schedulable_KeyM_GetVersionInfo_Return
extern void SchM_Schedulable_KeyM_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_KeyM_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_GetVersionInfo_Return */

#if defined(SchM_Schedulable_KeyM_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_KeyM_GetVersionInfo_Start)
#undef SchM_Schedulable_KeyM_GetVersionInfo_Start
extern void SchM_Schedulable_KeyM_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_KeyM_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_GetVersionInfo_Start */

#if defined(SchM_Schedulable_KeyM_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Init_Return
#endif
#if defined(SchM_Schedulable_KeyM_Init_Return)
#undef SchM_Schedulable_KeyM_Init_Return
extern void SchM_Schedulable_KeyM_Init_Return(void);
#else
#define SchM_Schedulable_KeyM_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Init_Return */

#if defined(SchM_Schedulable_KeyM_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Init_Start
#endif
#if defined(SchM_Schedulable_KeyM_Init_Start)
#undef SchM_Schedulable_KeyM_Init_Start
extern void SchM_Schedulable_KeyM_Init_Start(void);
#else
#define SchM_Schedulable_KeyM_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Init_Start */

#if defined(SchM_Schedulable_KeyM_MainBackgroundFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_MainBackgroundFunction_Return
#endif
#if defined(SchM_Schedulable_KeyM_MainBackgroundFunction_Return)
#undef SchM_Schedulable_KeyM_MainBackgroundFunction_Return
extern void SchM_Schedulable_KeyM_MainBackgroundFunction_Return(void);
#else
#define SchM_Schedulable_KeyM_MainBackgroundFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_MainBackgroundFunction_Return */

#if defined(SchM_Schedulable_KeyM_MainBackgroundFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_MainBackgroundFunction_Start
#endif
#if defined(SchM_Schedulable_KeyM_MainBackgroundFunction_Start)
#undef SchM_Schedulable_KeyM_MainBackgroundFunction_Start
extern void SchM_Schedulable_KeyM_MainBackgroundFunction_Start(void);
#else
#define SchM_Schedulable_KeyM_MainBackgroundFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_MainBackgroundFunction_Start */

#if defined(SchM_Schedulable_KeyM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_KeyM_MainFunction_Return)
#undef SchM_Schedulable_KeyM_MainFunction_Return
extern void SchM_Schedulable_KeyM_MainFunction_Return(void);
#else
#define SchM_Schedulable_KeyM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_MainFunction_Return */

#if defined(SchM_Schedulable_KeyM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_KeyM_MainFunction_Start)
#undef SchM_Schedulable_KeyM_MainFunction_Start
extern void SchM_Schedulable_KeyM_MainFunction_Start(void);
#else
#define SchM_Schedulable_KeyM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_MainFunction_Start */

#if defined(SchM_Schedulable_KeyM_Prepare_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Prepare_Return
#endif
#if defined(SchM_Schedulable_KeyM_Prepare_Return)
#undef SchM_Schedulable_KeyM_Prepare_Return
extern void SchM_Schedulable_KeyM_Prepare_Return(void);
#else
#define SchM_Schedulable_KeyM_Prepare_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Prepare_Return */

#if defined(SchM_Schedulable_KeyM_Prepare_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Prepare_Start
#endif
#if defined(SchM_Schedulable_KeyM_Prepare_Start)
#undef SchM_Schedulable_KeyM_Prepare_Start
extern void SchM_Schedulable_KeyM_Prepare_Start(void);
#else
#define SchM_Schedulable_KeyM_Prepare_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Prepare_Start */

#if defined(SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Return
#endif
#if defined(SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Return)
#undef SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Return
extern void SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Return(void);
#else
#define SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Return */

#if defined(SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Start
#endif
#if defined(SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Start)
#undef SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Start
extern void SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Start(void);
#else
#define SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_ServiceCertificateCallbackNotification_Start */

#if defined(SchM_Schedulable_KeyM_ServiceCertificate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_ServiceCertificate_Return
#endif
#if defined(SchM_Schedulable_KeyM_ServiceCertificate_Return)
#undef SchM_Schedulable_KeyM_ServiceCertificate_Return
extern void SchM_Schedulable_KeyM_ServiceCertificate_Return(void);
#else
#define SchM_Schedulable_KeyM_ServiceCertificate_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_ServiceCertificate_Return */

#if defined(SchM_Schedulable_KeyM_ServiceCertificate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_ServiceCertificate_Start
#endif
#if defined(SchM_Schedulable_KeyM_ServiceCertificate_Start)
#undef SchM_Schedulable_KeyM_ServiceCertificate_Start
extern void SchM_Schedulable_KeyM_ServiceCertificate_Start(void);
#else
#define SchM_Schedulable_KeyM_ServiceCertificate_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_ServiceCertificate_Start */

#if defined(SchM_Schedulable_KeyM_SetCertificate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_SetCertificate_Return
#endif
#if defined(SchM_Schedulable_KeyM_SetCertificate_Return)
#undef SchM_Schedulable_KeyM_SetCertificate_Return
extern void SchM_Schedulable_KeyM_SetCertificate_Return(void);
#else
#define SchM_Schedulable_KeyM_SetCertificate_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_SetCertificate_Return */

#if defined(SchM_Schedulable_KeyM_SetCertificate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_SetCertificate_Start
#endif
#if defined(SchM_Schedulable_KeyM_SetCertificate_Start)
#undef SchM_Schedulable_KeyM_SetCertificate_Start
extern void SchM_Schedulable_KeyM_SetCertificate_Start(void);
#else
#define SchM_Schedulable_KeyM_SetCertificate_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_SetCertificate_Start */

#if defined(SchM_Schedulable_KeyM_Start_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Start_Return
#endif
#if defined(SchM_Schedulable_KeyM_Start_Return)
#undef SchM_Schedulable_KeyM_Start_Return
extern void SchM_Schedulable_KeyM_Start_Return(void);
#else
#define SchM_Schedulable_KeyM_Start_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Start_Return */

#if defined(SchM_Schedulable_KeyM_Start_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Start_Start
#endif
#if defined(SchM_Schedulable_KeyM_Start_Start)
#undef SchM_Schedulable_KeyM_Start_Start
extern void SchM_Schedulable_KeyM_Start_Start(void);
#else
#define SchM_Schedulable_KeyM_Start_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Start_Start */

#if defined(SchM_Schedulable_KeyM_Update_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Update_Return
#endif
#if defined(SchM_Schedulable_KeyM_Update_Return)
#undef SchM_Schedulable_KeyM_Update_Return
extern void SchM_Schedulable_KeyM_Update_Return(void);
#else
#define SchM_Schedulable_KeyM_Update_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Update_Return */

#if defined(SchM_Schedulable_KeyM_Update_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Update_Start
#endif
#if defined(SchM_Schedulable_KeyM_Update_Start)
#undef SchM_Schedulable_KeyM_Update_Start
extern void SchM_Schedulable_KeyM_Update_Start(void);
#else
#define SchM_Schedulable_KeyM_Update_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Update_Start */

#if defined(SchM_Schedulable_KeyM_VerifyCertificateChain_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_VerifyCertificateChain_Return
#endif
#if defined(SchM_Schedulable_KeyM_VerifyCertificateChain_Return)
#undef SchM_Schedulable_KeyM_VerifyCertificateChain_Return
extern void SchM_Schedulable_KeyM_VerifyCertificateChain_Return(void);
#else
#define SchM_Schedulable_KeyM_VerifyCertificateChain_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_VerifyCertificateChain_Return */

#if defined(SchM_Schedulable_KeyM_VerifyCertificateChain_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_VerifyCertificateChain_Start
#endif
#if defined(SchM_Schedulable_KeyM_VerifyCertificateChain_Start)
#undef SchM_Schedulable_KeyM_VerifyCertificateChain_Start
extern void SchM_Schedulable_KeyM_VerifyCertificateChain_Start(void);
#else
#define SchM_Schedulable_KeyM_VerifyCertificateChain_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_VerifyCertificateChain_Start */

#if defined(SchM_Schedulable_KeyM_VerifyCertificate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_VerifyCertificate_Return
#endif
#if defined(SchM_Schedulable_KeyM_VerifyCertificate_Return)
#undef SchM_Schedulable_KeyM_VerifyCertificate_Return
extern void SchM_Schedulable_KeyM_VerifyCertificate_Return(void);
#else
#define SchM_Schedulable_KeyM_VerifyCertificate_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_VerifyCertificate_Return */

#if defined(SchM_Schedulable_KeyM_VerifyCertificate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_VerifyCertificate_Start
#endif
#if defined(SchM_Schedulable_KeyM_VerifyCertificate_Start)
#undef SchM_Schedulable_KeyM_VerifyCertificate_Start
extern void SchM_Schedulable_KeyM_VerifyCertificate_Start(void);
#else
#define SchM_Schedulable_KeyM_VerifyCertificate_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_VerifyCertificate_Start */

#if defined(SchM_Schedulable_KeyM_VerifyCertificates_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_VerifyCertificates_Return
#endif
#if defined(SchM_Schedulable_KeyM_VerifyCertificates_Return)
#undef SchM_Schedulable_KeyM_VerifyCertificates_Return
extern void SchM_Schedulable_KeyM_VerifyCertificates_Return(void);
#else
#define SchM_Schedulable_KeyM_VerifyCertificates_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_VerifyCertificates_Return */

#if defined(SchM_Schedulable_KeyM_VerifyCertificates_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_VerifyCertificates_Start
#endif
#if defined(SchM_Schedulable_KeyM_VerifyCertificates_Start)
#undef SchM_Schedulable_KeyM_VerifyCertificates_Start
extern void SchM_Schedulable_KeyM_VerifyCertificates_Start(void);
#else
#define SchM_Schedulable_KeyM_VerifyCertificates_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_VerifyCertificates_Start */

#if defined(SchM_Schedulable_KeyM_Verify_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Verify_Return
#endif
#if defined(SchM_Schedulable_KeyM_Verify_Return)
#undef SchM_Schedulable_KeyM_Verify_Return
extern void SchM_Schedulable_KeyM_Verify_Return(void);
#else
#define SchM_Schedulable_KeyM_Verify_Return() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Verify_Return */

#if defined(SchM_Schedulable_KeyM_Verify_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_KeyM_Verify_Start
#endif
#if defined(SchM_Schedulable_KeyM_Verify_Start)
#undef SchM_Schedulable_KeyM_Verify_Start
extern void SchM_Schedulable_KeyM_Verify_Start(void);
#else
#define SchM_Schedulable_KeyM_Verify_Start() ((void)(0))
#endif /* SchM_Schedulable_KeyM_Verify_Start */

#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Return
#endif
#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Return)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Return
extern void SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Return(void);
#else
#define SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Return() ((void)(0))
#endif /* SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Return */

#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Start
#endif
#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Start)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Start
extern void SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Start(void);
#else
#define SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Start() ((void)(0))
#endif /* SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN1_Start */

#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Return
#endif
#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Return)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Return
extern void SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Return(void);
#else
#define SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Return() ((void)(0))
#endif /* SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Return */

#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Start
#endif
#if defined(SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Start)
#undef SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Start
extern void SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Start(void);
#else
#define SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Start() ((void)(0))
#endif /* SchM_Schedulable_LinIf_MainFunction_LinIfChannel_LIN2_Start */

#if defined(SchM_Schedulable_LinSM_GetCurrentComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_GetCurrentComMode_Return
#endif
#if defined(SchM_Schedulable_LinSM_GetCurrentComMode_Return)
#undef SchM_Schedulable_LinSM_GetCurrentComMode_Return
extern void SchM_Schedulable_LinSM_GetCurrentComMode_Return(void);
#else
#define SchM_Schedulable_LinSM_GetCurrentComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_GetCurrentComMode_Return */

#if defined(SchM_Schedulable_LinSM_GetCurrentComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_GetCurrentComMode_Start
#endif
#if defined(SchM_Schedulable_LinSM_GetCurrentComMode_Start)
#undef SchM_Schedulable_LinSM_GetCurrentComMode_Start
extern void SchM_Schedulable_LinSM_GetCurrentComMode_Start(void);
#else
#define SchM_Schedulable_LinSM_GetCurrentComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_GetCurrentComMode_Start */

#if defined(SchM_Schedulable_LinSM_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_LinSM_GetVersionInfo_Return)
#undef SchM_Schedulable_LinSM_GetVersionInfo_Return
extern void SchM_Schedulable_LinSM_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_LinSM_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_GetVersionInfo_Return */

#if defined(SchM_Schedulable_LinSM_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_LinSM_GetVersionInfo_Start)
#undef SchM_Schedulable_LinSM_GetVersionInfo_Start
extern void SchM_Schedulable_LinSM_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_LinSM_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_GetVersionInfo_Start */

#if defined(SchM_Schedulable_LinSM_GotoSleepConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_GotoSleepConfirmation_Return
#endif
#if defined(SchM_Schedulable_LinSM_GotoSleepConfirmation_Return)
#undef SchM_Schedulable_LinSM_GotoSleepConfirmation_Return
extern void SchM_Schedulable_LinSM_GotoSleepConfirmation_Return(void);
#else
#define SchM_Schedulable_LinSM_GotoSleepConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_GotoSleepConfirmation_Return */

#if defined(SchM_Schedulable_LinSM_GotoSleepConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_GotoSleepConfirmation_Start
#endif
#if defined(SchM_Schedulable_LinSM_GotoSleepConfirmation_Start)
#undef SchM_Schedulable_LinSM_GotoSleepConfirmation_Start
extern void SchM_Schedulable_LinSM_GotoSleepConfirmation_Start(void);
#else
#define SchM_Schedulable_LinSM_GotoSleepConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_GotoSleepConfirmation_Start */

#if defined(SchM_Schedulable_LinSM_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_Init_Return
#endif
#if defined(SchM_Schedulable_LinSM_Init_Return)
#undef SchM_Schedulable_LinSM_Init_Return
extern void SchM_Schedulable_LinSM_Init_Return(void);
#else
#define SchM_Schedulable_LinSM_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_Init_Return */

#if defined(SchM_Schedulable_LinSM_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_Init_Start
#endif
#if defined(SchM_Schedulable_LinSM_Init_Start)
#undef SchM_Schedulable_LinSM_Init_Start
extern void SchM_Schedulable_LinSM_Init_Start(void);
#else
#define SchM_Schedulable_LinSM_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_Init_Start */

#if defined(SchM_Schedulable_LinSM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_LinSM_MainFunction_Return)
#undef SchM_Schedulable_LinSM_MainFunction_Return
extern void SchM_Schedulable_LinSM_MainFunction_Return(void);
#else
#define SchM_Schedulable_LinSM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_MainFunction_Return */

#if defined(SchM_Schedulable_LinSM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_LinSM_MainFunction_Start)
#undef SchM_Schedulable_LinSM_MainFunction_Start
extern void SchM_Schedulable_LinSM_MainFunction_Start(void);
#else
#define SchM_Schedulable_LinSM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_MainFunction_Start */

#if defined(SchM_Schedulable_LinSM_RequestComMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_RequestComMode_Return
#endif
#if defined(SchM_Schedulable_LinSM_RequestComMode_Return)
#undef SchM_Schedulable_LinSM_RequestComMode_Return
extern void SchM_Schedulable_LinSM_RequestComMode_Return(void);
#else
#define SchM_Schedulable_LinSM_RequestComMode_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_RequestComMode_Return */

#if defined(SchM_Schedulable_LinSM_RequestComMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_RequestComMode_Start
#endif
#if defined(SchM_Schedulable_LinSM_RequestComMode_Start)
#undef SchM_Schedulable_LinSM_RequestComMode_Start
extern void SchM_Schedulable_LinSM_RequestComMode_Start(void);
#else
#define SchM_Schedulable_LinSM_RequestComMode_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_RequestComMode_Start */

#if defined(SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Return
#endif
#if defined(SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Return)
#undef SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Return
extern void SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Return(void);
#else
#define SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Return */

#if defined(SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Start
#endif
#if defined(SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Start)
#undef SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Start
extern void SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Start(void);
#else
#define SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_ScheduleRequestConfirmation_Start */

#if defined(SchM_Schedulable_LinSM_ScheduleRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_ScheduleRequest_Return
#endif
#if defined(SchM_Schedulable_LinSM_ScheduleRequest_Return)
#undef SchM_Schedulable_LinSM_ScheduleRequest_Return
extern void SchM_Schedulable_LinSM_ScheduleRequest_Return(void);
#else
#define SchM_Schedulable_LinSM_ScheduleRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_ScheduleRequest_Return */

#if defined(SchM_Schedulable_LinSM_ScheduleRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_ScheduleRequest_Start
#endif
#if defined(SchM_Schedulable_LinSM_ScheduleRequest_Start)
#undef SchM_Schedulable_LinSM_ScheduleRequest_Start
extern void SchM_Schedulable_LinSM_ScheduleRequest_Start(void);
#else
#define SchM_Schedulable_LinSM_ScheduleRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_ScheduleRequest_Start */

#if defined(SchM_Schedulable_LinSM_WakeupConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_WakeupConfirmation_Return
#endif
#if defined(SchM_Schedulable_LinSM_WakeupConfirmation_Return)
#undef SchM_Schedulable_LinSM_WakeupConfirmation_Return
extern void SchM_Schedulable_LinSM_WakeupConfirmation_Return(void);
#else
#define SchM_Schedulable_LinSM_WakeupConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_LinSM_WakeupConfirmation_Return */

#if defined(SchM_Schedulable_LinSM_WakeupConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinSM_WakeupConfirmation_Start
#endif
#if defined(SchM_Schedulable_LinSM_WakeupConfirmation_Start)
#undef SchM_Schedulable_LinSM_WakeupConfirmation_Start
extern void SchM_Schedulable_LinSM_WakeupConfirmation_Start(void);
#else
#define SchM_Schedulable_LinSM_WakeupConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_LinSM_WakeupConfirmation_Start */

#if defined(SchM_Schedulable_LinTrcv_CheckWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_CheckWakeup_Return
#endif
#if defined(SchM_Schedulable_LinTrcv_CheckWakeup_Return)
#undef SchM_Schedulable_LinTrcv_CheckWakeup_Return
extern void SchM_Schedulable_LinTrcv_CheckWakeup_Return(void);
#else
#define SchM_Schedulable_LinTrcv_CheckWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_CheckWakeup_Return */

#if defined(SchM_Schedulable_LinTrcv_CheckWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_CheckWakeup_Start
#endif
#if defined(SchM_Schedulable_LinTrcv_CheckWakeup_Start)
#undef SchM_Schedulable_LinTrcv_CheckWakeup_Start
extern void SchM_Schedulable_LinTrcv_CheckWakeup_Start(void);
#else
#define SchM_Schedulable_LinTrcv_CheckWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_CheckWakeup_Start */

#if defined(SchM_Schedulable_LinTrcv_GetBusWuReason_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_GetBusWuReason_Return
#endif
#if defined(SchM_Schedulable_LinTrcv_GetBusWuReason_Return)
#undef SchM_Schedulable_LinTrcv_GetBusWuReason_Return
extern void SchM_Schedulable_LinTrcv_GetBusWuReason_Return(void);
#else
#define SchM_Schedulable_LinTrcv_GetBusWuReason_Return() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_GetBusWuReason_Return */

#if defined(SchM_Schedulable_LinTrcv_GetBusWuReason_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_GetBusWuReason_Start
#endif
#if defined(SchM_Schedulable_LinTrcv_GetBusWuReason_Start)
#undef SchM_Schedulable_LinTrcv_GetBusWuReason_Start
extern void SchM_Schedulable_LinTrcv_GetBusWuReason_Start(void);
#else
#define SchM_Schedulable_LinTrcv_GetBusWuReason_Start() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_GetBusWuReason_Start */

#if defined(SchM_Schedulable_LinTrcv_GetOpMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_GetOpMode_Return
#endif
#if defined(SchM_Schedulable_LinTrcv_GetOpMode_Return)
#undef SchM_Schedulable_LinTrcv_GetOpMode_Return
extern void SchM_Schedulable_LinTrcv_GetOpMode_Return(void);
#else
#define SchM_Schedulable_LinTrcv_GetOpMode_Return() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_GetOpMode_Return */

#if defined(SchM_Schedulable_LinTrcv_GetOpMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_GetOpMode_Start
#endif
#if defined(SchM_Schedulable_LinTrcv_GetOpMode_Start)
#undef SchM_Schedulable_LinTrcv_GetOpMode_Start
extern void SchM_Schedulable_LinTrcv_GetOpMode_Start(void);
#else
#define SchM_Schedulable_LinTrcv_GetOpMode_Start() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_GetOpMode_Start */

#if defined(SchM_Schedulable_LinTrcv_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_LinTrcv_GetVersionInfo_Return)
#undef SchM_Schedulable_LinTrcv_GetVersionInfo_Return
extern void SchM_Schedulable_LinTrcv_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_LinTrcv_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_GetVersionInfo_Return */

#if defined(SchM_Schedulable_LinTrcv_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_LinTrcv_GetVersionInfo_Start)
#undef SchM_Schedulable_LinTrcv_GetVersionInfo_Start
extern void SchM_Schedulable_LinTrcv_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_LinTrcv_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_GetVersionInfo_Start */

#if defined(SchM_Schedulable_LinTrcv_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_Init_Return
#endif
#if defined(SchM_Schedulable_LinTrcv_Init_Return)
#undef SchM_Schedulable_LinTrcv_Init_Return
extern void SchM_Schedulable_LinTrcv_Init_Return(void);
#else
#define SchM_Schedulable_LinTrcv_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_Init_Return */

#if defined(SchM_Schedulable_LinTrcv_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_Init_Start
#endif
#if defined(SchM_Schedulable_LinTrcv_Init_Start)
#undef SchM_Schedulable_LinTrcv_Init_Start
extern void SchM_Schedulable_LinTrcv_Init_Start(void);
#else
#define SchM_Schedulable_LinTrcv_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_Init_Start */

#if defined(SchM_Schedulable_LinTrcv_SetOpMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_SetOpMode_Return
#endif
#if defined(SchM_Schedulable_LinTrcv_SetOpMode_Return)
#undef SchM_Schedulable_LinTrcv_SetOpMode_Return
extern void SchM_Schedulable_LinTrcv_SetOpMode_Return(void);
#else
#define SchM_Schedulable_LinTrcv_SetOpMode_Return() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_SetOpMode_Return */

#if defined(SchM_Schedulable_LinTrcv_SetOpMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_SetOpMode_Start
#endif
#if defined(SchM_Schedulable_LinTrcv_SetOpMode_Start)
#undef SchM_Schedulable_LinTrcv_SetOpMode_Start
extern void SchM_Schedulable_LinTrcv_SetOpMode_Start(void);
#else
#define SchM_Schedulable_LinTrcv_SetOpMode_Start() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_SetOpMode_Start */

#if defined(SchM_Schedulable_LinTrcv_SetWakeupMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_SetWakeupMode_Return
#endif
#if defined(SchM_Schedulable_LinTrcv_SetWakeupMode_Return)
#undef SchM_Schedulable_LinTrcv_SetWakeupMode_Return
extern void SchM_Schedulable_LinTrcv_SetWakeupMode_Return(void);
#else
#define SchM_Schedulable_LinTrcv_SetWakeupMode_Return() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_SetWakeupMode_Return */

#if defined(SchM_Schedulable_LinTrcv_SetWakeupMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_LinTrcv_SetWakeupMode_Start
#endif
#if defined(SchM_Schedulable_LinTrcv_SetWakeupMode_Start)
#undef SchM_Schedulable_LinTrcv_SetWakeupMode_Start
extern void SchM_Schedulable_LinTrcv_SetWakeupMode_Start(void);
#else
#define SchM_Schedulable_LinTrcv_SetWakeupMode_Start() ((void)(0))
#endif /* SchM_Schedulable_LinTrcv_SetWakeupMode_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_CheckWakeup_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_Flexio_Lin_Ip_Deinit_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetStatus_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleepInternal_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_GoToSleep_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_Init_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART0_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART10_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART11_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART12_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART13_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART14_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART15_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART1_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART2_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART3_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART4_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART5_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART6_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART7_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART8_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUART9_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_ERR_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_LPUARTMSC_LIN_IP_RxTx_IRQHandler_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_SendFrame_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_SetClockMode_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_WakeupInternal_Start */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Return
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Return)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Return
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Return(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Return() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Return */

#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Start
#endif
#if defined(SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Start)
#undef SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Start
extern void SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Start(void);
#else
#define SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Start() ((void)(0))
#endif /* SchM_Schedulable_Lin_43_LPUART_FLEXIO_Wakeup_Start */

#if defined(SchM_Schedulable_Mcl_CacheCleanByAddr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheCleanByAddr_Return
#endif
#if defined(SchM_Schedulable_Mcl_CacheCleanByAddr_Return)
#undef SchM_Schedulable_Mcl_CacheCleanByAddr_Return
extern void SchM_Schedulable_Mcl_CacheCleanByAddr_Return(void);
#else
#define SchM_Schedulable_Mcl_CacheCleanByAddr_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheCleanByAddr_Return */

#if defined(SchM_Schedulable_Mcl_CacheCleanByAddr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheCleanByAddr_Start
#endif
#if defined(SchM_Schedulable_Mcl_CacheCleanByAddr_Start)
#undef SchM_Schedulable_Mcl_CacheCleanByAddr_Start
extern void SchM_Schedulable_Mcl_CacheCleanByAddr_Start(void);
#else
#define SchM_Schedulable_Mcl_CacheCleanByAddr_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheCleanByAddr_Start */

#if defined(SchM_Schedulable_Mcl_CacheClean_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheClean_Return
#endif
#if defined(SchM_Schedulable_Mcl_CacheClean_Return)
#undef SchM_Schedulable_Mcl_CacheClean_Return
extern void SchM_Schedulable_Mcl_CacheClean_Return(void);
#else
#define SchM_Schedulable_Mcl_CacheClean_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheClean_Return */

#if defined(SchM_Schedulable_Mcl_CacheClean_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheClean_Start
#endif
#if defined(SchM_Schedulable_Mcl_CacheClean_Start)
#undef SchM_Schedulable_Mcl_CacheClean_Start
extern void SchM_Schedulable_Mcl_CacheClean_Start(void);
#else
#define SchM_Schedulable_Mcl_CacheClean_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheClean_Start */

#if defined(SchM_Schedulable_Mcl_CacheDisable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheDisable_Return
#endif
#if defined(SchM_Schedulable_Mcl_CacheDisable_Return)
#undef SchM_Schedulable_Mcl_CacheDisable_Return
extern void SchM_Schedulable_Mcl_CacheDisable_Return(void);
#else
#define SchM_Schedulable_Mcl_CacheDisable_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheDisable_Return */

#if defined(SchM_Schedulable_Mcl_CacheDisable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheDisable_Start
#endif
#if defined(SchM_Schedulable_Mcl_CacheDisable_Start)
#undef SchM_Schedulable_Mcl_CacheDisable_Start
extern void SchM_Schedulable_Mcl_CacheDisable_Start(void);
#else
#define SchM_Schedulable_Mcl_CacheDisable_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheDisable_Start */

#if defined(SchM_Schedulable_Mcl_CacheEnable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheEnable_Return
#endif
#if defined(SchM_Schedulable_Mcl_CacheEnable_Return)
#undef SchM_Schedulable_Mcl_CacheEnable_Return
extern void SchM_Schedulable_Mcl_CacheEnable_Return(void);
#else
#define SchM_Schedulable_Mcl_CacheEnable_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheEnable_Return */

#if defined(SchM_Schedulable_Mcl_CacheEnable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheEnable_Start
#endif
#if defined(SchM_Schedulable_Mcl_CacheEnable_Start)
#undef SchM_Schedulable_Mcl_CacheEnable_Start
extern void SchM_Schedulable_Mcl_CacheEnable_Start(void);
#else
#define SchM_Schedulable_Mcl_CacheEnable_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheEnable_Start */

#if defined(SchM_Schedulable_Mcl_CacheInvalidateByAddr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheInvalidateByAddr_Return
#endif
#if defined(SchM_Schedulable_Mcl_CacheInvalidateByAddr_Return)
#undef SchM_Schedulable_Mcl_CacheInvalidateByAddr_Return
extern void SchM_Schedulable_Mcl_CacheInvalidateByAddr_Return(void);
#else
#define SchM_Schedulable_Mcl_CacheInvalidateByAddr_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheInvalidateByAddr_Return */

#if defined(SchM_Schedulable_Mcl_CacheInvalidateByAddr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheInvalidateByAddr_Start
#endif
#if defined(SchM_Schedulable_Mcl_CacheInvalidateByAddr_Start)
#undef SchM_Schedulable_Mcl_CacheInvalidateByAddr_Start
extern void SchM_Schedulable_Mcl_CacheInvalidateByAddr_Start(void);
#else
#define SchM_Schedulable_Mcl_CacheInvalidateByAddr_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheInvalidateByAddr_Start */

#if defined(SchM_Schedulable_Mcl_CacheInvalidate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheInvalidate_Return
#endif
#if defined(SchM_Schedulable_Mcl_CacheInvalidate_Return)
#undef SchM_Schedulable_Mcl_CacheInvalidate_Return
extern void SchM_Schedulable_Mcl_CacheInvalidate_Return(void);
#else
#define SchM_Schedulable_Mcl_CacheInvalidate_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheInvalidate_Return */

#if defined(SchM_Schedulable_Mcl_CacheInvalidate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_CacheInvalidate_Start
#endif
#if defined(SchM_Schedulable_Mcl_CacheInvalidate_Start)
#undef SchM_Schedulable_Mcl_CacheInvalidate_Start
extern void SchM_Schedulable_Mcl_CacheInvalidate_Start(void);
#else
#define SchM_Schedulable_Mcl_CacheInvalidate_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_CacheInvalidate_Start */

#if defined(SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Return
#endif
#if defined(SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Return)
#undef SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Return
extern void SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Return(void);
#else
#define SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Return */

#if defined(SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Start
#endif
#if defined(SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Start)
#undef SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Start
extern void SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Start(void);
#else
#define SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_ClearLcuSyncOutputForceEvent_Start */

#if defined(SchM_Schedulable_Mcl_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_DeInit_Return
#endif
#if defined(SchM_Schedulable_Mcl_DeInit_Return)
#undef SchM_Schedulable_Mcl_DeInit_Return
extern void SchM_Schedulable_Mcl_DeInit_Return(void);
#else
#define SchM_Schedulable_Mcl_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_DeInit_Return */

#if defined(SchM_Schedulable_Mcl_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_DeInit_Start
#endif
#if defined(SchM_Schedulable_Mcl_DeInit_Start)
#undef SchM_Schedulable_Mcl_DeInit_Start
extern void SchM_Schedulable_Mcl_DeInit_Start(void);
#else
#define SchM_Schedulable_Mcl_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_DeInit_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch0_Ch1_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch0_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch10_Ch11_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch10_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch11_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch12_Ch13_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch12_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch13_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch14_Ch15_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch14_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch15_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch16_Ch17_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch16_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch17_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch18_Ch19_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch18_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch19_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch1_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch20_Ch21_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch20_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch21_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch22_Ch23_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch22_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch23_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch24_Ch25_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch24_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch25_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch26_Ch27_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch26_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch27_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch28_Ch29_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch28_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch29_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch2_Ch3_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch2_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch30_Ch31_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch30_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch31_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch3_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch4_Ch5_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch4_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch5_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch6_Ch7_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch6_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch7_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch8_Ch9_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch8_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma0_Ch9_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch0_Ch1_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch10_Ch11_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch12_Ch13_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch14_Ch15_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch16_Ch17_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch18_Ch19_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch20_Ch21_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch22_Ch23_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch24_Ch25_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch26_Ch27_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch28_Ch29_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch2_Ch3_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch30_Ch31_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch4_Ch5_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch6_Ch7_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Return)
#undef SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Return
extern void SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Return */

#if defined(SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Start)
#undef SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Start
extern void SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Dma1_Ch8_Ch9_IrqHandler_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_0_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_1_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_2_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_3_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_4_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS0_5_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_0_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_1_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_2_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_3_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_4_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS1_5_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_0_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_1_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_2_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_3_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_4_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Return
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Return)
#undef SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Return
extern void SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Return(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Return */

#if defined(SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Start
#endif
#if defined(SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Start)
#undef SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Start
extern void SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Start(void);
#else
#define SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_EMIOS2_5_IRQ_Start */

#if defined(SchM_Schedulable_Mcl_GetDmaChannelParam_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetDmaChannelParam_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetDmaChannelParam_Return)
#undef SchM_Schedulable_Mcl_GetDmaChannelParam_Return
extern void SchM_Schedulable_Mcl_GetDmaChannelParam_Return(void);
#else
#define SchM_Schedulable_Mcl_GetDmaChannelParam_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetDmaChannelParam_Return */

#if defined(SchM_Schedulable_Mcl_GetDmaChannelParam_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetDmaChannelParam_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetDmaChannelParam_Start)
#undef SchM_Schedulable_Mcl_GetDmaChannelParam_Start
extern void SchM_Schedulable_Mcl_GetDmaChannelParam_Start(void);
#else
#define SchM_Schedulable_Mcl_GetDmaChannelParam_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetDmaChannelParam_Start */

#if defined(SchM_Schedulable_Mcl_GetDmaChannelStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetDmaChannelStatus_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetDmaChannelStatus_Return)
#undef SchM_Schedulable_Mcl_GetDmaChannelStatus_Return
extern void SchM_Schedulable_Mcl_GetDmaChannelStatus_Return(void);
#else
#define SchM_Schedulable_Mcl_GetDmaChannelStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetDmaChannelStatus_Return */

#if defined(SchM_Schedulable_Mcl_GetDmaChannelStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetDmaChannelStatus_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetDmaChannelStatus_Start)
#undef SchM_Schedulable_Mcl_GetDmaChannelStatus_Start
extern void SchM_Schedulable_Mcl_GetDmaChannelStatus_Start(void);
#else
#define SchM_Schedulable_Mcl_GetDmaChannelStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetDmaChannelStatus_Start */

#if defined(SchM_Schedulable_Mcl_GetDmaInstanceStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetDmaInstanceStatus_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetDmaInstanceStatus_Return)
#undef SchM_Schedulable_Mcl_GetDmaInstanceStatus_Return
extern void SchM_Schedulable_Mcl_GetDmaInstanceStatus_Return(void);
#else
#define SchM_Schedulable_Mcl_GetDmaInstanceStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetDmaInstanceStatus_Return */

#if defined(SchM_Schedulable_Mcl_GetDmaInstanceStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetDmaInstanceStatus_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetDmaInstanceStatus_Start)
#undef SchM_Schedulable_Mcl_GetDmaInstanceStatus_Start
extern void SchM_Schedulable_Mcl_GetDmaInstanceStatus_Start(void);
#else
#define SchM_Schedulable_Mcl_GetDmaInstanceStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetDmaInstanceStatus_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Return)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Return
extern void SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Start)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Start
extern void SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuAsyncLogicInputInfo_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Return)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Return
extern void SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Start)
#undef SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Start
extern void SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuAsyncLogicOutputInfo_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Return)
#undef SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Return
extern void SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Start)
#undef SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Start
extern void SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncCombineForceInput_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Return)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Return
extern void SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Start)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Start
extern void SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncForceOutput_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Return)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Return
extern void SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Start)
#undef SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Start
extern void SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncForceStatus_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Return)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Return
extern void SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Start)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Start
extern void SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncLogicInput_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Return)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Return
extern void SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Start)
#undef SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Start
extern void SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncLogicOutput_Start */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Return)
#undef SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Return
extern void SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Return(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Return */

#if defined(SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Start)
#undef SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Start
extern void SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Start(void);
#else
#define SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetLcuSyncSwOverrideInput_Start */

#if defined(SchM_Schedulable_Mcl_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Mcl_GetVersionInfo_Return)
#undef SchM_Schedulable_Mcl_GetVersionInfo_Return
extern void SchM_Schedulable_Mcl_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Mcl_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Mcl_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Mcl_GetVersionInfo_Start)
#undef SchM_Schedulable_Mcl_GetVersionInfo_Start
extern void SchM_Schedulable_Mcl_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Mcl_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Mcl_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Init_Return
#endif
#if defined(SchM_Schedulable_Mcl_Init_Return)
#undef SchM_Schedulable_Mcl_Init_Return
extern void SchM_Schedulable_Mcl_Init_Return(void);
#else
#define SchM_Schedulable_Mcl_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Init_Return */

#if defined(SchM_Schedulable_Mcl_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Init_Start
#endif
#if defined(SchM_Schedulable_Mcl_Init_Start)
#undef SchM_Schedulable_Mcl_Init_Start
extern void SchM_Schedulable_Mcl_Init_Start(void);
#else
#define SchM_Schedulable_Mcl_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Init_Start */

#if defined(SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu0_Ip_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Return)
#undef SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Return
extern void SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Start)
#undef SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Start
extern void SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu1_Ip_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncInputList_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetAsyncOutputList_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwOverrideValue_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncInputSwSyncMode_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputDebugMode_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputEnable_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputFallFilter_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceClearingMode_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceDma_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInputSensitivity_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceInt_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputForceSyncSelect_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutDma_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputLutInt_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputPolarity_Start */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Return
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Return)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Return
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Return(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Return */

#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Start
#endif
#if defined(SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Start)
#undef SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Start
extern void SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Start(void);
#else
#define SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_Lcu_Ip_SetSyncOutputRiseFilter_Start */

#if defined(SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Return
#endif
#if defined(SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Return)
#undef SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Return
extern void SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Return(void);
#else
#define SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Return */

#if defined(SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Start
#endif
#if defined(SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Start)
#undef SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Start
extern void SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Start(void);
#else
#define SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_MCL_FLEXIO_ISR_Start */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelCommand_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelCommand_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelCommand_Return)
#undef SchM_Schedulable_Mcl_SetDmaChannelCommand_Return
extern void SchM_Schedulable_Mcl_SetDmaChannelCommand_Return(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelCommand_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelCommand_Return */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelCommand_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelCommand_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelCommand_Start)
#undef SchM_Schedulable_Mcl_SetDmaChannelCommand_Start
extern void SchM_Schedulable_Mcl_SetDmaChannelCommand_Start(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelCommand_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelCommand_Start */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Return)
#undef SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Return
extern void SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Return(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Return */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Start)
#undef SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Start
extern void SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Start(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelGlobalList_Start */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Return)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Return
extern void SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Return(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Return */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Start)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Start
extern void SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Start(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelScatterGatherConfig_Start */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Return)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Return
extern void SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Return(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Return */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Start)
#undef SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Start
extern void SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Start(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelScatterGatherList_Start */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelTransferList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelTransferList_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelTransferList_Return)
#undef SchM_Schedulable_Mcl_SetDmaChannelTransferList_Return
extern void SchM_Schedulable_Mcl_SetDmaChannelTransferList_Return(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelTransferList_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelTransferList_Return */

#if defined(SchM_Schedulable_Mcl_SetDmaChannelTransferList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaChannelTransferList_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaChannelTransferList_Start)
#undef SchM_Schedulable_Mcl_SetDmaChannelTransferList_Start
extern void SchM_Schedulable_Mcl_SetDmaChannelTransferList_Start(void);
#else
#define SchM_Schedulable_Mcl_SetDmaChannelTransferList_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaChannelTransferList_Start */

#if defined(SchM_Schedulable_Mcl_SetDmaInstanceCommand_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaInstanceCommand_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaInstanceCommand_Return)
#undef SchM_Schedulable_Mcl_SetDmaInstanceCommand_Return
extern void SchM_Schedulable_Mcl_SetDmaInstanceCommand_Return(void);
#else
#define SchM_Schedulable_Mcl_SetDmaInstanceCommand_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaInstanceCommand_Return */

#if defined(SchM_Schedulable_Mcl_SetDmaInstanceCommand_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetDmaInstanceCommand_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetDmaInstanceCommand_Start)
#undef SchM_Schedulable_Mcl_SetDmaInstanceCommand_Start
extern void SchM_Schedulable_Mcl_SetDmaInstanceCommand_Start(void);
#else
#define SchM_Schedulable_Mcl_SetDmaInstanceCommand_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetDmaInstanceCommand_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuAsyncInputList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuAsyncInputList_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuAsyncInputList_Return)
#undef SchM_Schedulable_Mcl_SetLcuAsyncInputList_Return
extern void SchM_Schedulable_Mcl_SetLcuAsyncInputList_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuAsyncInputList_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuAsyncInputList_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuAsyncInputList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuAsyncInputList_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuAsyncInputList_Start)
#undef SchM_Schedulable_Mcl_SetLcuAsyncInputList_Start
extern void SchM_Schedulable_Mcl_SetLcuAsyncInputList_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuAsyncInputList_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuAsyncInputList_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Return)
#undef SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Return
extern void SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Start)
#undef SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Start
extern void SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuAsyncOutputList_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputMuxSelect_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideEnable_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputSwOverrideValue_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncInputSwSyncMode_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputDebugMode_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputEnable_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputFallFilter_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceClearingMode_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceDma_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceInputSensitivity_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceInt_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputForceSyncSelect_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputLutControl_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputLutDma_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputLutInt_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputPolarity_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Return)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Return
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Start)
#undef SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Start
extern void SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuSyncOutputRiseFilter_Start */

#if defined(SchM_Schedulable_Mcl_SetLcuWriteProtect_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuWriteProtect_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuWriteProtect_Return)
#undef SchM_Schedulable_Mcl_SetLcuWriteProtect_Return
extern void SchM_Schedulable_Mcl_SetLcuWriteProtect_Return(void);
#else
#define SchM_Schedulable_Mcl_SetLcuWriteProtect_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuWriteProtect_Return */

#if defined(SchM_Schedulable_Mcl_SetLcuWriteProtect_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetLcuWriteProtect_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetLcuWriteProtect_Start)
#undef SchM_Schedulable_Mcl_SetLcuWriteProtect_Start
extern void SchM_Schedulable_Mcl_SetLcuWriteProtect_Start(void);
#else
#define SchM_Schedulable_Mcl_SetLcuWriteProtect_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetLcuWriteProtect_Start */

#if defined(SchM_Schedulable_Mcl_SetTrgMuxInput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetTrgMuxInput_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetTrgMuxInput_Return)
#undef SchM_Schedulable_Mcl_SetTrgMuxInput_Return
extern void SchM_Schedulable_Mcl_SetTrgMuxInput_Return(void);
#else
#define SchM_Schedulable_Mcl_SetTrgMuxInput_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetTrgMuxInput_Return */

#if defined(SchM_Schedulable_Mcl_SetTrgMuxInput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetTrgMuxInput_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetTrgMuxInput_Start)
#undef SchM_Schedulable_Mcl_SetTrgMuxInput_Start
extern void SchM_Schedulable_Mcl_SetTrgMuxInput_Start(void);
#else
#define SchM_Schedulable_Mcl_SetTrgMuxInput_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetTrgMuxInput_Start */

#if defined(SchM_Schedulable_Mcl_SetTrgMuxLock_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetTrgMuxLock_Return
#endif
#if defined(SchM_Schedulable_Mcl_SetTrgMuxLock_Return)
#undef SchM_Schedulable_Mcl_SetTrgMuxLock_Return
extern void SchM_Schedulable_Mcl_SetTrgMuxLock_Return(void);
#else
#define SchM_Schedulable_Mcl_SetTrgMuxLock_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetTrgMuxLock_Return */

#if defined(SchM_Schedulable_Mcl_SetTrgMuxLock_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcl_SetTrgMuxLock_Start
#endif
#if defined(SchM_Schedulable_Mcl_SetTrgMuxLock_Start)
#undef SchM_Schedulable_Mcl_SetTrgMuxLock_Start
extern void SchM_Schedulable_Mcl_SetTrgMuxLock_Start(void);
#else
#define SchM_Schedulable_Mcl_SetTrgMuxLock_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcl_SetTrgMuxLock_Start */

#if defined(SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Return)
#undef SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Return
extern void SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Start)
#undef SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Start
extern void SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Cmu_ClockFail_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcu_DisableCmu_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_DisableCmu_Return
#endif
#if defined(SchM_Schedulable_Mcu_DisableCmu_Return)
#undef SchM_Schedulable_Mcu_DisableCmu_Return
extern void SchM_Schedulable_Mcu_DisableCmu_Return(void);
#else
#define SchM_Schedulable_Mcu_DisableCmu_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_DisableCmu_Return */

#if defined(SchM_Schedulable_Mcu_DisableCmu_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_DisableCmu_Start
#endif
#if defined(SchM_Schedulable_Mcu_DisableCmu_Start)
#undef SchM_Schedulable_Mcu_DisableCmu_Start
extern void SchM_Schedulable_Mcu_DisableCmu_Start(void);
#else
#define SchM_Schedulable_Mcu_DisableCmu_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_DisableCmu_Start */

#if defined(SchM_Schedulable_Mcu_DistributePllClock_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_DistributePllClock_Return
#endif
#if defined(SchM_Schedulable_Mcu_DistributePllClock_Return)
#undef SchM_Schedulable_Mcu_DistributePllClock_Return
extern void SchM_Schedulable_Mcu_DistributePllClock_Return(void);
#else
#define SchM_Schedulable_Mcu_DistributePllClock_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_DistributePllClock_Return */

#if defined(SchM_Schedulable_Mcu_DistributePllClock_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_DistributePllClock_Start
#endif
#if defined(SchM_Schedulable_Mcu_DistributePllClock_Start)
#undef SchM_Schedulable_Mcu_DistributePllClock_Start
extern void SchM_Schedulable_Mcu_DistributePllClock_Start(void);
#else
#define SchM_Schedulable_Mcu_DistributePllClock_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_DistributePllClock_Start */

#if defined(SchM_Schedulable_Mcu_EmiosConfigureGpren_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_EmiosConfigureGpren_Return
#endif
#if defined(SchM_Schedulable_Mcu_EmiosConfigureGpren_Return)
#undef SchM_Schedulable_Mcu_EmiosConfigureGpren_Return
extern void SchM_Schedulable_Mcu_EmiosConfigureGpren_Return(void);
#else
#define SchM_Schedulable_Mcu_EmiosConfigureGpren_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_EmiosConfigureGpren_Return */

#if defined(SchM_Schedulable_Mcu_EmiosConfigureGpren_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_EmiosConfigureGpren_Start
#endif
#if defined(SchM_Schedulable_Mcu_EmiosConfigureGpren_Start)
#undef SchM_Schedulable_Mcu_EmiosConfigureGpren_Start
extern void SchM_Schedulable_Mcu_EmiosConfigureGpren_Start(void);
#else
#define SchM_Schedulable_Mcu_EmiosConfigureGpren_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_EmiosConfigureGpren_Start */

#if defined(SchM_Schedulable_Mcu_GetClockFrequency_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetClockFrequency_Return
#endif
#if defined(SchM_Schedulable_Mcu_GetClockFrequency_Return)
#undef SchM_Schedulable_Mcu_GetClockFrequency_Return
extern void SchM_Schedulable_Mcu_GetClockFrequency_Return(void);
#else
#define SchM_Schedulable_Mcu_GetClockFrequency_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetClockFrequency_Return */

#if defined(SchM_Schedulable_Mcu_GetClockFrequency_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetClockFrequency_Start
#endif
#if defined(SchM_Schedulable_Mcu_GetClockFrequency_Start)
#undef SchM_Schedulable_Mcu_GetClockFrequency_Start
extern void SchM_Schedulable_Mcu_GetClockFrequency_Start(void);
#else
#define SchM_Schedulable_Mcu_GetClockFrequency_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetClockFrequency_Start */

#if defined(SchM_Schedulable_Mcu_GetMidrStructure_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetMidrStructure_Return
#endif
#if defined(SchM_Schedulable_Mcu_GetMidrStructure_Return)
#undef SchM_Schedulable_Mcu_GetMidrStructure_Return
extern void SchM_Schedulable_Mcu_GetMidrStructure_Return(void);
#else
#define SchM_Schedulable_Mcu_GetMidrStructure_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetMidrStructure_Return */

#if defined(SchM_Schedulable_Mcu_GetMidrStructure_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetMidrStructure_Start
#endif
#if defined(SchM_Schedulable_Mcu_GetMidrStructure_Start)
#undef SchM_Schedulable_Mcu_GetMidrStructure_Start
extern void SchM_Schedulable_Mcu_GetMidrStructure_Start(void);
#else
#define SchM_Schedulable_Mcu_GetMidrStructure_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetMidrStructure_Start */

#if defined(SchM_Schedulable_Mcu_GetPllStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetPllStatus_Return
#endif
#if defined(SchM_Schedulable_Mcu_GetPllStatus_Return)
#undef SchM_Schedulable_Mcu_GetPllStatus_Return
extern void SchM_Schedulable_Mcu_GetPllStatus_Return(void);
#else
#define SchM_Schedulable_Mcu_GetPllStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetPllStatus_Return */

#if defined(SchM_Schedulable_Mcu_GetPllStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetPllStatus_Start
#endif
#if defined(SchM_Schedulable_Mcu_GetPllStatus_Start)
#undef SchM_Schedulable_Mcu_GetPllStatus_Start
extern void SchM_Schedulable_Mcu_GetPllStatus_Start(void);
#else
#define SchM_Schedulable_Mcu_GetPllStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetPllStatus_Start */

#if defined(SchM_Schedulable_Mcu_GetRamState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetRamState_Return
#endif
#if defined(SchM_Schedulable_Mcu_GetRamState_Return)
#undef SchM_Schedulable_Mcu_GetRamState_Return
extern void SchM_Schedulable_Mcu_GetRamState_Return(void);
#else
#define SchM_Schedulable_Mcu_GetRamState_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetRamState_Return */

#if defined(SchM_Schedulable_Mcu_GetRamState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetRamState_Start
#endif
#if defined(SchM_Schedulable_Mcu_GetRamState_Start)
#undef SchM_Schedulable_Mcu_GetRamState_Start
extern void SchM_Schedulable_Mcu_GetRamState_Start(void);
#else
#define SchM_Schedulable_Mcu_GetRamState_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetRamState_Start */

#if defined(SchM_Schedulable_Mcu_GetResetRawValue_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetResetRawValue_Return
#endif
#if defined(SchM_Schedulable_Mcu_GetResetRawValue_Return)
#undef SchM_Schedulable_Mcu_GetResetRawValue_Return
extern void SchM_Schedulable_Mcu_GetResetRawValue_Return(void);
#else
#define SchM_Schedulable_Mcu_GetResetRawValue_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetResetRawValue_Return */

#if defined(SchM_Schedulable_Mcu_GetResetRawValue_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetResetRawValue_Start
#endif
#if defined(SchM_Schedulable_Mcu_GetResetRawValue_Start)
#undef SchM_Schedulable_Mcu_GetResetRawValue_Start
extern void SchM_Schedulable_Mcu_GetResetRawValue_Start(void);
#else
#define SchM_Schedulable_Mcu_GetResetRawValue_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetResetRawValue_Start */

#if defined(SchM_Schedulable_Mcu_GetResetReason_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetResetReason_Return
#endif
#if defined(SchM_Schedulable_Mcu_GetResetReason_Return)
#undef SchM_Schedulable_Mcu_GetResetReason_Return
extern void SchM_Schedulable_Mcu_GetResetReason_Return(void);
#else
#define SchM_Schedulable_Mcu_GetResetReason_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetResetReason_Return */

#if defined(SchM_Schedulable_Mcu_GetResetReason_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetResetReason_Start
#endif
#if defined(SchM_Schedulable_Mcu_GetResetReason_Start)
#undef SchM_Schedulable_Mcu_GetResetReason_Start
extern void SchM_Schedulable_Mcu_GetResetReason_Start(void);
#else
#define SchM_Schedulable_Mcu_GetResetReason_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetResetReason_Start */

#if defined(SchM_Schedulable_Mcu_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Mcu_GetVersionInfo_Return)
#undef SchM_Schedulable_Mcu_GetVersionInfo_Return
extern void SchM_Schedulable_Mcu_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Mcu_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Mcu_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Mcu_GetVersionInfo_Start)
#undef SchM_Schedulable_Mcu_GetVersionInfo_Start
extern void SchM_Schedulable_Mcu_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Mcu_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Mcu_InitClock_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_InitClock_Return
#endif
#if defined(SchM_Schedulable_Mcu_InitClock_Return)
#undef SchM_Schedulable_Mcu_InitClock_Return
extern void SchM_Schedulable_Mcu_InitClock_Return(void);
#else
#define SchM_Schedulable_Mcu_InitClock_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_InitClock_Return */

#if defined(SchM_Schedulable_Mcu_InitClock_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_InitClock_Start
#endif
#if defined(SchM_Schedulable_Mcu_InitClock_Start)
#undef SchM_Schedulable_Mcu_InitClock_Start
extern void SchM_Schedulable_Mcu_InitClock_Start(void);
#else
#define SchM_Schedulable_Mcu_InitClock_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_InitClock_Start */

#if defined(SchM_Schedulable_Mcu_InitRamSection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_InitRamSection_Return
#endif
#if defined(SchM_Schedulable_Mcu_InitRamSection_Return)
#undef SchM_Schedulable_Mcu_InitRamSection_Return
extern void SchM_Schedulable_Mcu_InitRamSection_Return(void);
#else
#define SchM_Schedulable_Mcu_InitRamSection_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_InitRamSection_Return */

#if defined(SchM_Schedulable_Mcu_InitRamSection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_InitRamSection_Start
#endif
#if defined(SchM_Schedulable_Mcu_InitRamSection_Start)
#undef SchM_Schedulable_Mcu_InitRamSection_Start
extern void SchM_Schedulable_Mcu_InitRamSection_Start(void);
#else
#define SchM_Schedulable_Mcu_InitRamSection_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_InitRamSection_Start */

#if defined(SchM_Schedulable_Mcu_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Init_Return
#endif
#if defined(SchM_Schedulable_Mcu_Init_Return)
#undef SchM_Schedulable_Mcu_Init_Return
extern void SchM_Schedulable_Mcu_Init_Return(void);
#else
#define SchM_Schedulable_Mcu_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Init_Return */

#if defined(SchM_Schedulable_Mcu_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Init_Start
#endif
#if defined(SchM_Schedulable_Mcu_Init_Start)
#undef SchM_Schedulable_Mcu_Init_Start
extern void SchM_Schedulable_Mcu_Init_Start(void);
#else
#define SchM_Schedulable_Mcu_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Init_Start */

#if defined(SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Return)
#undef SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Return
extern void SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Start)
#undef SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Start
extern void SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_MC_RGM_ResetAlt_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Return)
#undef SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Return
extern void SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Return */

#if defined(SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Start)
#undef SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Start
extern void SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_PMC_VoltageError_IRQHandler_Start */

#if defined(SchM_Schedulable_Mcu_PerformReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_PerformReset_Return
#endif
#if defined(SchM_Schedulable_Mcu_PerformReset_Return)
#undef SchM_Schedulable_Mcu_PerformReset_Return
extern void SchM_Schedulable_Mcu_PerformReset_Return(void);
#else
#define SchM_Schedulable_Mcu_PerformReset_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_PerformReset_Return */

#if defined(SchM_Schedulable_Mcu_PerformReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_PerformReset_Start
#endif
#if defined(SchM_Schedulable_Mcu_PerformReset_Start)
#undef SchM_Schedulable_Mcu_PerformReset_Start
extern void SchM_Schedulable_Mcu_PerformReset_Start(void);
#else
#define SchM_Schedulable_Mcu_PerformReset_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_PerformReset_Start */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Return
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Return)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Return
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Return(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Return */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Start
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Start)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Start
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Start(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVdd_ISR_Start */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Return
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Return)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Return
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Return(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Return */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Start
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Start)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Start
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Start(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectHvdOnVddintVdd15_ISR_Start */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Return
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Return)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Return
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Return(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Return */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Start
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Start)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Start
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Start(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVddc_ISR_Start */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Return
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Return)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Return
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Return(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Return */

#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Start
#endif
#if defined(SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Start)
#undef SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Start
extern void SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Start(void);
#else
#define SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_Power_Ip_PMC_AE_VoltageDetectLvdOnVls_ISR_Start */

#if defined(SchM_Schedulable_Mcu_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_SetMode_Return
#endif
#if defined(SchM_Schedulable_Mcu_SetMode_Return)
#undef SchM_Schedulable_Mcu_SetMode_Return
extern void SchM_Schedulable_Mcu_SetMode_Return(void);
#else
#define SchM_Schedulable_Mcu_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_SetMode_Return */

#if defined(SchM_Schedulable_Mcu_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_SetMode_Start
#endif
#if defined(SchM_Schedulable_Mcu_SetMode_Start)
#undef SchM_Schedulable_Mcu_SetMode_Start
extern void SchM_Schedulable_Mcu_SetMode_Start(void);
#else
#define SchM_Schedulable_Mcu_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_SetMode_Start */

#if defined(SchM_Schedulable_Mcu_SleepOnExit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_SleepOnExit_Return
#endif
#if defined(SchM_Schedulable_Mcu_SleepOnExit_Return)
#undef SchM_Schedulable_Mcu_SleepOnExit_Return
extern void SchM_Schedulable_Mcu_SleepOnExit_Return(void);
#else
#define SchM_Schedulable_Mcu_SleepOnExit_Return() ((void)(0))
#endif /* SchM_Schedulable_Mcu_SleepOnExit_Return */

#if defined(SchM_Schedulable_Mcu_SleepOnExit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Mcu_SleepOnExit_Start
#endif
#if defined(SchM_Schedulable_Mcu_SleepOnExit_Start)
#undef SchM_Schedulable_Mcu_SleepOnExit_Start
extern void SchM_Schedulable_Mcu_SleepOnExit_Start(void);
#else
#define SchM_Schedulable_Mcu_SleepOnExit_Start() ((void)(0))
#endif /* SchM_Schedulable_Mcu_SleepOnExit_Start */

#if defined(SchM_Schedulable_Nm_BusSleepMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_BusSleepMode_Return
#endif
#if defined(SchM_Schedulable_Nm_BusSleepMode_Return)
#undef SchM_Schedulable_Nm_BusSleepMode_Return
extern void SchM_Schedulable_Nm_BusSleepMode_Return(void);
#else
#define SchM_Schedulable_Nm_BusSleepMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_BusSleepMode_Return */

#if defined(SchM_Schedulable_Nm_BusSleepMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_BusSleepMode_Start
#endif
#if defined(SchM_Schedulable_Nm_BusSleepMode_Start)
#undef SchM_Schedulable_Nm_BusSleepMode_Start
extern void SchM_Schedulable_Nm_BusSleepMode_Start(void);
#else
#define SchM_Schedulable_Nm_BusSleepMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_BusSleepMode_Start */

#if defined(SchM_Schedulable_Nm_DisableCommunication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_DisableCommunication_Return
#endif
#if defined(SchM_Schedulable_Nm_DisableCommunication_Return)
#undef SchM_Schedulable_Nm_DisableCommunication_Return
extern void SchM_Schedulable_Nm_DisableCommunication_Return(void);
#else
#define SchM_Schedulable_Nm_DisableCommunication_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_DisableCommunication_Return */

#if defined(SchM_Schedulable_Nm_DisableCommunication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_DisableCommunication_Start
#endif
#if defined(SchM_Schedulable_Nm_DisableCommunication_Start)
#undef SchM_Schedulable_Nm_DisableCommunication_Start
extern void SchM_Schedulable_Nm_DisableCommunication_Start(void);
#else
#define SchM_Schedulable_Nm_DisableCommunication_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_DisableCommunication_Start */

#if defined(SchM_Schedulable_Nm_EnableCommunication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_EnableCommunication_Return
#endif
#if defined(SchM_Schedulable_Nm_EnableCommunication_Return)
#undef SchM_Schedulable_Nm_EnableCommunication_Return
extern void SchM_Schedulable_Nm_EnableCommunication_Return(void);
#else
#define SchM_Schedulable_Nm_EnableCommunication_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_EnableCommunication_Return */

#if defined(SchM_Schedulable_Nm_EnableCommunication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_EnableCommunication_Start
#endif
#if defined(SchM_Schedulable_Nm_EnableCommunication_Start)
#undef SchM_Schedulable_Nm_EnableCommunication_Start
extern void SchM_Schedulable_Nm_EnableCommunication_Start(void);
#else
#define SchM_Schedulable_Nm_EnableCommunication_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_EnableCommunication_Start */

#if defined(SchM_Schedulable_Nm_GetLocalNodeIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetLocalNodeIdentifier_Return
#endif
#if defined(SchM_Schedulable_Nm_GetLocalNodeIdentifier_Return)
#undef SchM_Schedulable_Nm_GetLocalNodeIdentifier_Return
extern void SchM_Schedulable_Nm_GetLocalNodeIdentifier_Return(void);
#else
#define SchM_Schedulable_Nm_GetLocalNodeIdentifier_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetLocalNodeIdentifier_Return */

#if defined(SchM_Schedulable_Nm_GetLocalNodeIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetLocalNodeIdentifier_Start
#endif
#if defined(SchM_Schedulable_Nm_GetLocalNodeIdentifier_Start)
#undef SchM_Schedulable_Nm_GetLocalNodeIdentifier_Start
extern void SchM_Schedulable_Nm_GetLocalNodeIdentifier_Start(void);
#else
#define SchM_Schedulable_Nm_GetLocalNodeIdentifier_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetLocalNodeIdentifier_Start */

#if defined(SchM_Schedulable_Nm_GetNodeIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetNodeIdentifier_Return
#endif
#if defined(SchM_Schedulable_Nm_GetNodeIdentifier_Return)
#undef SchM_Schedulable_Nm_GetNodeIdentifier_Return
extern void SchM_Schedulable_Nm_GetNodeIdentifier_Return(void);
#else
#define SchM_Schedulable_Nm_GetNodeIdentifier_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetNodeIdentifier_Return */

#if defined(SchM_Schedulable_Nm_GetNodeIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetNodeIdentifier_Start
#endif
#if defined(SchM_Schedulable_Nm_GetNodeIdentifier_Start)
#undef SchM_Schedulable_Nm_GetNodeIdentifier_Start
extern void SchM_Schedulable_Nm_GetNodeIdentifier_Start(void);
#else
#define SchM_Schedulable_Nm_GetNodeIdentifier_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetNodeIdentifier_Start */

#if defined(SchM_Schedulable_Nm_GetPduData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetPduData_Return
#endif
#if defined(SchM_Schedulable_Nm_GetPduData_Return)
#undef SchM_Schedulable_Nm_GetPduData_Return
extern void SchM_Schedulable_Nm_GetPduData_Return(void);
#else
#define SchM_Schedulable_Nm_GetPduData_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetPduData_Return */

#if defined(SchM_Schedulable_Nm_GetPduData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetPduData_Start
#endif
#if defined(SchM_Schedulable_Nm_GetPduData_Start)
#undef SchM_Schedulable_Nm_GetPduData_Start
extern void SchM_Schedulable_Nm_GetPduData_Start(void);
#else
#define SchM_Schedulable_Nm_GetPduData_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetPduData_Start */

#if defined(SchM_Schedulable_Nm_GetState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetState_Return
#endif
#if defined(SchM_Schedulable_Nm_GetState_Return)
#undef SchM_Schedulable_Nm_GetState_Return
extern void SchM_Schedulable_Nm_GetState_Return(void);
#else
#define SchM_Schedulable_Nm_GetState_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetState_Return */

#if defined(SchM_Schedulable_Nm_GetState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetState_Start
#endif
#if defined(SchM_Schedulable_Nm_GetState_Start)
#undef SchM_Schedulable_Nm_GetState_Start
extern void SchM_Schedulable_Nm_GetState_Start(void);
#else
#define SchM_Schedulable_Nm_GetState_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetState_Start */

#if defined(SchM_Schedulable_Nm_GetUserData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetUserData_Return
#endif
#if defined(SchM_Schedulable_Nm_GetUserData_Return)
#undef SchM_Schedulable_Nm_GetUserData_Return
extern void SchM_Schedulable_Nm_GetUserData_Return(void);
#else
#define SchM_Schedulable_Nm_GetUserData_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetUserData_Return */

#if defined(SchM_Schedulable_Nm_GetUserData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetUserData_Start
#endif
#if defined(SchM_Schedulable_Nm_GetUserData_Start)
#undef SchM_Schedulable_Nm_GetUserData_Start
extern void SchM_Schedulable_Nm_GetUserData_Start(void);
#else
#define SchM_Schedulable_Nm_GetUserData_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetUserData_Start */

#if defined(SchM_Schedulable_Nm_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Nm_GetVersionInfo_Return)
#undef SchM_Schedulable_Nm_GetVersionInfo_Return
extern void SchM_Schedulable_Nm_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Nm_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Nm_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Nm_GetVersionInfo_Start)
#undef SchM_Schedulable_Nm_GetVersionInfo_Start
extern void SchM_Schedulable_Nm_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Nm_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Nm_NetworkMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkMode_Return
#endif
#if defined(SchM_Schedulable_Nm_NetworkMode_Return)
#undef SchM_Schedulable_Nm_NetworkMode_Return
extern void SchM_Schedulable_Nm_NetworkMode_Return(void);
#else
#define SchM_Schedulable_Nm_NetworkMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkMode_Return */

#if defined(SchM_Schedulable_Nm_NetworkMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkMode_Start
#endif
#if defined(SchM_Schedulable_Nm_NetworkMode_Start)
#undef SchM_Schedulable_Nm_NetworkMode_Start
extern void SchM_Schedulable_Nm_NetworkMode_Start(void);
#else
#define SchM_Schedulable_Nm_NetworkMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkMode_Start */

#if defined(SchM_Schedulable_Nm_NetworkRelease_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkRelease_Return
#endif
#if defined(SchM_Schedulable_Nm_NetworkRelease_Return)
#undef SchM_Schedulable_Nm_NetworkRelease_Return
extern void SchM_Schedulable_Nm_NetworkRelease_Return(void);
#else
#define SchM_Schedulable_Nm_NetworkRelease_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkRelease_Return */

#if defined(SchM_Schedulable_Nm_NetworkRelease_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkRelease_Start
#endif
#if defined(SchM_Schedulable_Nm_NetworkRelease_Start)
#undef SchM_Schedulable_Nm_NetworkRelease_Start
extern void SchM_Schedulable_Nm_NetworkRelease_Start(void);
#else
#define SchM_Schedulable_Nm_NetworkRelease_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkRelease_Start */

#if defined(SchM_Schedulable_Nm_NetworkRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkRequest_Return
#endif
#if defined(SchM_Schedulable_Nm_NetworkRequest_Return)
#undef SchM_Schedulable_Nm_NetworkRequest_Return
extern void SchM_Schedulable_Nm_NetworkRequest_Return(void);
#else
#define SchM_Schedulable_Nm_NetworkRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkRequest_Return */

#if defined(SchM_Schedulable_Nm_NetworkRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkRequest_Start
#endif
#if defined(SchM_Schedulable_Nm_NetworkRequest_Start)
#undef SchM_Schedulable_Nm_NetworkRequest_Start
extern void SchM_Schedulable_Nm_NetworkRequest_Start(void);
#else
#define SchM_Schedulable_Nm_NetworkRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkRequest_Start */

#if defined(SchM_Schedulable_Nm_NetworkStartIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkStartIndication_Return
#endif
#if defined(SchM_Schedulable_Nm_NetworkStartIndication_Return)
#undef SchM_Schedulable_Nm_NetworkStartIndication_Return
extern void SchM_Schedulable_Nm_NetworkStartIndication_Return(void);
#else
#define SchM_Schedulable_Nm_NetworkStartIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkStartIndication_Return */

#if defined(SchM_Schedulable_Nm_NetworkStartIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_NetworkStartIndication_Start
#endif
#if defined(SchM_Schedulable_Nm_NetworkStartIndication_Start)
#undef SchM_Schedulable_Nm_NetworkStartIndication_Start
extern void SchM_Schedulable_Nm_NetworkStartIndication_Start(void);
#else
#define SchM_Schedulable_Nm_NetworkStartIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_NetworkStartIndication_Start */

#if defined(SchM_Schedulable_Nm_PassiveStartUp_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_PassiveStartUp_Return
#endif
#if defined(SchM_Schedulable_Nm_PassiveStartUp_Return)
#undef SchM_Schedulable_Nm_PassiveStartUp_Return
extern void SchM_Schedulable_Nm_PassiveStartUp_Return(void);
#else
#define SchM_Schedulable_Nm_PassiveStartUp_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_PassiveStartUp_Return */

#if defined(SchM_Schedulable_Nm_PassiveStartUp_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_PassiveStartUp_Start
#endif
#if defined(SchM_Schedulable_Nm_PassiveStartUp_Start)
#undef SchM_Schedulable_Nm_PassiveStartUp_Start
extern void SchM_Schedulable_Nm_PassiveStartUp_Start(void);
#else
#define SchM_Schedulable_Nm_PassiveStartUp_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_PassiveStartUp_Start */

#if defined(SchM_Schedulable_Nm_PrepareBusSleepMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_PrepareBusSleepMode_Return
#endif
#if defined(SchM_Schedulable_Nm_PrepareBusSleepMode_Return)
#undef SchM_Schedulable_Nm_PrepareBusSleepMode_Return
extern void SchM_Schedulable_Nm_PrepareBusSleepMode_Return(void);
#else
#define SchM_Schedulable_Nm_PrepareBusSleepMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_PrepareBusSleepMode_Return */

#if defined(SchM_Schedulable_Nm_PrepareBusSleepMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_PrepareBusSleepMode_Start
#endif
#if defined(SchM_Schedulable_Nm_PrepareBusSleepMode_Start)
#undef SchM_Schedulable_Nm_PrepareBusSleepMode_Start
extern void SchM_Schedulable_Nm_PrepareBusSleepMode_Start(void);
#else
#define SchM_Schedulable_Nm_PrepareBusSleepMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_PrepareBusSleepMode_Start */

#if defined(SchM_Schedulable_Nm_RepeatMessageIndication_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_RepeatMessageIndication_Return
#endif
#if defined(SchM_Schedulable_Nm_RepeatMessageIndication_Return)
#undef SchM_Schedulable_Nm_RepeatMessageIndication_Return
extern void SchM_Schedulable_Nm_RepeatMessageIndication_Return(void);
#else
#define SchM_Schedulable_Nm_RepeatMessageIndication_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_RepeatMessageIndication_Return */

#if defined(SchM_Schedulable_Nm_RepeatMessageIndication_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_RepeatMessageIndication_Start
#endif
#if defined(SchM_Schedulable_Nm_RepeatMessageIndication_Start)
#undef SchM_Schedulable_Nm_RepeatMessageIndication_Start
extern void SchM_Schedulable_Nm_RepeatMessageIndication_Start(void);
#else
#define SchM_Schedulable_Nm_RepeatMessageIndication_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_RepeatMessageIndication_Start */

#if defined(SchM_Schedulable_Nm_RepeatMessageRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_RepeatMessageRequest_Return
#endif
#if defined(SchM_Schedulable_Nm_RepeatMessageRequest_Return)
#undef SchM_Schedulable_Nm_RepeatMessageRequest_Return
extern void SchM_Schedulable_Nm_RepeatMessageRequest_Return(void);
#else
#define SchM_Schedulable_Nm_RepeatMessageRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_RepeatMessageRequest_Return */

#if defined(SchM_Schedulable_Nm_RepeatMessageRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_RepeatMessageRequest_Start
#endif
#if defined(SchM_Schedulable_Nm_RepeatMessageRequest_Start)
#undef SchM_Schedulable_Nm_RepeatMessageRequest_Start
extern void SchM_Schedulable_Nm_RepeatMessageRequest_Start(void);
#else
#define SchM_Schedulable_Nm_RepeatMessageRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_RepeatMessageRequest_Start */

#if defined(SchM_Schedulable_Nm_SetUserData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_SetUserData_Return
#endif
#if defined(SchM_Schedulable_Nm_SetUserData_Return)
#undef SchM_Schedulable_Nm_SetUserData_Return
extern void SchM_Schedulable_Nm_SetUserData_Return(void);
#else
#define SchM_Schedulable_Nm_SetUserData_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_SetUserData_Return */

#if defined(SchM_Schedulable_Nm_SetUserData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_SetUserData_Start
#endif
#if defined(SchM_Schedulable_Nm_SetUserData_Start)
#undef SchM_Schedulable_Nm_SetUserData_Start
extern void SchM_Schedulable_Nm_SetUserData_Start(void);
#else
#define SchM_Schedulable_Nm_SetUserData_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_SetUserData_Start */

#if defined(SchM_Schedulable_Nm_TxTimeoutException_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_TxTimeoutException_Return
#endif
#if defined(SchM_Schedulable_Nm_TxTimeoutException_Return)
#undef SchM_Schedulable_Nm_TxTimeoutException_Return
extern void SchM_Schedulable_Nm_TxTimeoutException_Return(void);
#else
#define SchM_Schedulable_Nm_TxTimeoutException_Return() ((void)(0))
#endif /* SchM_Schedulable_Nm_TxTimeoutException_Return */

#if defined(SchM_Schedulable_Nm_TxTimeoutException_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Nm_TxTimeoutException_Start
#endif
#if defined(SchM_Schedulable_Nm_TxTimeoutException_Start)
#undef SchM_Schedulable_Nm_TxTimeoutException_Start
extern void SchM_Schedulable_Nm_TxTimeoutException_Start(void);
#else
#define SchM_Schedulable_Nm_TxTimeoutException_Start() ((void)(0))
#endif /* SchM_Schedulable_Nm_TxTimeoutException_Start */

#if defined(SchM_Schedulable_NvM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_NvM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_NvM_MainFunction_Return)
#undef SchM_Schedulable_NvM_MainFunction_Return
extern void SchM_Schedulable_NvM_MainFunction_Return(void);
#else
#define SchM_Schedulable_NvM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_NvM_MainFunction_Return */

#if defined(SchM_Schedulable_NvM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_NvM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_NvM_MainFunction_Start)
#undef SchM_Schedulable_NvM_MainFunction_Start
extern void SchM_Schedulable_NvM_MainFunction_Start(void);
#else
#define SchM_Schedulable_NvM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_NvM_MainFunction_Start */

#if defined(SchM_Schedulable_PduR_LoTpTxConfirmation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_PduR_LoTpTxConfirmation_Return
#endif
#if defined(SchM_Schedulable_PduR_LoTpTxConfirmation_Return)
#undef SchM_Schedulable_PduR_LoTpTxConfirmation_Return
extern void SchM_Schedulable_PduR_LoTpTxConfirmation_Return(void);
#else
#define SchM_Schedulable_PduR_LoTpTxConfirmation_Return() ((void)(0))
#endif /* SchM_Schedulable_PduR_LoTpTxConfirmation_Return */

#if defined(SchM_Schedulable_PduR_LoTpTxConfirmation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_PduR_LoTpTxConfirmation_Start
#endif
#if defined(SchM_Schedulable_PduR_LoTpTxConfirmation_Start)
#undef SchM_Schedulable_PduR_LoTpTxConfirmation_Start
extern void SchM_Schedulable_PduR_LoTpTxConfirmation_Start(void);
#else
#define SchM_Schedulable_PduR_LoTpTxConfirmation_Start() ((void)(0))
#endif /* SchM_Schedulable_PduR_LoTpTxConfirmation_Start */

#if defined(SchM_Schedulable_Port_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Port_GetVersionInfo_Return)
#undef SchM_Schedulable_Port_GetVersionInfo_Return
extern void SchM_Schedulable_Port_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Port_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Port_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Port_GetVersionInfo_Start)
#undef SchM_Schedulable_Port_GetVersionInfo_Start
extern void SchM_Schedulable_Port_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Port_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Port_Igf_Port_Ip_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Igf_Port_Ip_Init_Return
#endif
#if defined(SchM_Schedulable_Port_Igf_Port_Ip_Init_Return)
#undef SchM_Schedulable_Port_Igf_Port_Ip_Init_Return
extern void SchM_Schedulable_Port_Igf_Port_Ip_Init_Return(void);
#else
#define SchM_Schedulable_Port_Igf_Port_Ip_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Igf_Port_Ip_Init_Return */

#if defined(SchM_Schedulable_Port_Igf_Port_Ip_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Igf_Port_Ip_Init_Start
#endif
#if defined(SchM_Schedulable_Port_Igf_Port_Ip_Init_Start)
#undef SchM_Schedulable_Port_Igf_Port_Ip_Init_Start
extern void SchM_Schedulable_Port_Igf_Port_Ip_Init_Start(void);
#else
#define SchM_Schedulable_Port_Igf_Port_Ip_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Igf_Port_Ip_Init_Start */

#if defined(SchM_Schedulable_Port_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Init_Return
#endif
#if defined(SchM_Schedulable_Port_Init_Return)
#undef SchM_Schedulable_Port_Init_Return
extern void SchM_Schedulable_Port_Init_Return(void);
#else
#define SchM_Schedulable_Port_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Init_Return */

#if defined(SchM_Schedulable_Port_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Init_Start
#endif
#if defined(SchM_Schedulable_Port_Init_Start)
#undef SchM_Schedulable_Port_Init_Start
extern void SchM_Schedulable_Port_Init_Start(void);
#else
#define SchM_Schedulable_Port_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Init_Start */

#if defined(SchM_Schedulable_Port_RefreshPortDirection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_RefreshPortDirection_Return
#endif
#if defined(SchM_Schedulable_Port_RefreshPortDirection_Return)
#undef SchM_Schedulable_Port_RefreshPortDirection_Return
extern void SchM_Schedulable_Port_RefreshPortDirection_Return(void);
#else
#define SchM_Schedulable_Port_RefreshPortDirection_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_RefreshPortDirection_Return */

#if defined(SchM_Schedulable_Port_RefreshPortDirection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_RefreshPortDirection_Start
#endif
#if defined(SchM_Schedulable_Port_RefreshPortDirection_Start)
#undef SchM_Schedulable_Port_RefreshPortDirection_Start
extern void SchM_Schedulable_Port_RefreshPortDirection_Start(void);
#else
#define SchM_Schedulable_Port_RefreshPortDirection_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_RefreshPortDirection_Start */

#if defined(SchM_Schedulable_Port_ResetPinMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_ResetPinMode_Return
#endif
#if defined(SchM_Schedulable_Port_ResetPinMode_Return)
#undef SchM_Schedulable_Port_ResetPinMode_Return
extern void SchM_Schedulable_Port_ResetPinMode_Return(void);
#else
#define SchM_Schedulable_Port_ResetPinMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_ResetPinMode_Return */

#if defined(SchM_Schedulable_Port_ResetPinMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_ResetPinMode_Start
#endif
#if defined(SchM_Schedulable_Port_ResetPinMode_Start)
#undef SchM_Schedulable_Port_ResetPinMode_Start
extern void SchM_Schedulable_Port_ResetPinMode_Start(void);
#else
#define SchM_Schedulable_Port_ResetPinMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_ResetPinMode_Start */

#if defined(SchM_Schedulable_Port_SetAsUnusedPin_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetAsUnusedPin_Return
#endif
#if defined(SchM_Schedulable_Port_SetAsUnusedPin_Return)
#undef SchM_Schedulable_Port_SetAsUnusedPin_Return
extern void SchM_Schedulable_Port_SetAsUnusedPin_Return(void);
#else
#define SchM_Schedulable_Port_SetAsUnusedPin_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_SetAsUnusedPin_Return */

#if defined(SchM_Schedulable_Port_SetAsUnusedPin_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetAsUnusedPin_Start
#endif
#if defined(SchM_Schedulable_Port_SetAsUnusedPin_Start)
#undef SchM_Schedulable_Port_SetAsUnusedPin_Start
extern void SchM_Schedulable_Port_SetAsUnusedPin_Start(void);
#else
#define SchM_Schedulable_Port_SetAsUnusedPin_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_SetAsUnusedPin_Start */

#if defined(SchM_Schedulable_Port_SetAsUsedPin_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetAsUsedPin_Return
#endif
#if defined(SchM_Schedulable_Port_SetAsUsedPin_Return)
#undef SchM_Schedulable_Port_SetAsUsedPin_Return
extern void SchM_Schedulable_Port_SetAsUsedPin_Return(void);
#else
#define SchM_Schedulable_Port_SetAsUsedPin_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_SetAsUsedPin_Return */

#if defined(SchM_Schedulable_Port_SetAsUsedPin_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetAsUsedPin_Start
#endif
#if defined(SchM_Schedulable_Port_SetAsUsedPin_Start)
#undef SchM_Schedulable_Port_SetAsUsedPin_Start
extern void SchM_Schedulable_Port_SetAsUsedPin_Start(void);
#else
#define SchM_Schedulable_Port_SetAsUsedPin_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_SetAsUsedPin_Start */

#if defined(SchM_Schedulable_Port_SetPinDirection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetPinDirection_Return
#endif
#if defined(SchM_Schedulable_Port_SetPinDirection_Return)
#undef SchM_Schedulable_Port_SetPinDirection_Return
extern void SchM_Schedulable_Port_SetPinDirection_Return(void);
#else
#define SchM_Schedulable_Port_SetPinDirection_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_SetPinDirection_Return */

#if defined(SchM_Schedulable_Port_SetPinDirection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetPinDirection_Start
#endif
#if defined(SchM_Schedulable_Port_SetPinDirection_Start)
#undef SchM_Schedulable_Port_SetPinDirection_Start
extern void SchM_Schedulable_Port_SetPinDirection_Start(void);
#else
#define SchM_Schedulable_Port_SetPinDirection_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_SetPinDirection_Start */

#if defined(SchM_Schedulable_Port_SetPinMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetPinMode_Return
#endif
#if defined(SchM_Schedulable_Port_SetPinMode_Return)
#undef SchM_Schedulable_Port_SetPinMode_Return
extern void SchM_Schedulable_Port_SetPinMode_Return(void);
#else
#define SchM_Schedulable_Port_SetPinMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_SetPinMode_Return */

#if defined(SchM_Schedulable_Port_SetPinMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_SetPinMode_Start
#endif
#if defined(SchM_Schedulable_Port_SetPinMode_Start)
#undef SchM_Schedulable_Port_SetPinMode_Start
extern void SchM_Schedulable_Port_SetPinMode_Start(void);
#else
#define SchM_Schedulable_Port_SetPinMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_SetPinMode_Start */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Return
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Return)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Return
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Return(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Return */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Start
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Start)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Start
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Start(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetInputBuffer_Start */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Return
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Return)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Return
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Return(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Return */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Start
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Start)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Start
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Start(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetOutputBuffer_Start */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Return
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Return)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Return
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Return(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Return */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Start
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Start)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Start
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Start(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetPinDirection_Start */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Return
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Return)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Return
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Return(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Return */

#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Start
#endif
#if defined(SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Start)
#undef SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Start
extern void SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Start(void);
#else
#define SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Siul2_Port_Ip_SetPullSel_Start */

#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Return
#endif
#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Return)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Return
extern void SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Return(void);
#else
#define SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Return */

#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Start
#endif
#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Start)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Start
extern void SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Start(void);
#else
#define SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Tspc_Port_Ip_ConfigureObeGroup_Start */

#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Return
#endif
#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Return)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Return
extern void SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Return(void);
#else
#define SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Return() ((void)(0))
#endif /* SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Return */

#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Start
#endif
#if defined(SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Start)
#undef SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Start
extern void SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Start(void);
#else
#define SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Start() ((void)(0))
#endif /* SchM_Schedulable_Port_Tspc_Port_Ip_EnableObeGroup_Start */

#if defined(SchM_Schedulable_Pwm_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_DeInit_Return
#endif
#if defined(SchM_Schedulable_Pwm_DeInit_Return)
#undef SchM_Schedulable_Pwm_DeInit_Return
extern void SchM_Schedulable_Pwm_DeInit_Return(void);
#else
#define SchM_Schedulable_Pwm_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_DeInit_Return */

#if defined(SchM_Schedulable_Pwm_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_DeInit_Start
#endif
#if defined(SchM_Schedulable_Pwm_DeInit_Start)
#undef SchM_Schedulable_Pwm_DeInit_Start
extern void SchM_Schedulable_Pwm_DeInit_Start(void);
#else
#define SchM_Schedulable_Pwm_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_DeInit_Start */

#if defined(SchM_Schedulable_Pwm_DisableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_DisableNotification_Return
#endif
#if defined(SchM_Schedulable_Pwm_DisableNotification_Return)
#undef SchM_Schedulable_Pwm_DisableNotification_Return
extern void SchM_Schedulable_Pwm_DisableNotification_Return(void);
#else
#define SchM_Schedulable_Pwm_DisableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_DisableNotification_Return */

#if defined(SchM_Schedulable_Pwm_DisableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_DisableNotification_Start
#endif
#if defined(SchM_Schedulable_Pwm_DisableNotification_Start)
#undef SchM_Schedulable_Pwm_DisableNotification_Start
extern void SchM_Schedulable_Pwm_DisableNotification_Start(void);
#else
#define SchM_Schedulable_Pwm_DisableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_DisableNotification_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelEnterDebugMode_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ChannelStopDebugMode_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_DeInitChannel_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchLeadingEdge_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_ForceMatchTrailingEdge_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDeadTime_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetDutyCycle_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetFlagRequest_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPeriod_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetPhaseShift_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_GetTriggerPlacement_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_InitChannel_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDeadTime_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetDutyCycle_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetFlagRequest_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPeriod_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetPhaseShift_Start */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Return
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Return)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Return
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Return(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Return */

#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Start
#endif
#if defined(SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Start)
#undef SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Start
extern void SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Start(void);
#else
#define SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Emios_Pwm_Ip_SetTriggerPlacement_Start */

#if defined(SchM_Schedulable_Pwm_EnableNotification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_EnableNotification_Return
#endif
#if defined(SchM_Schedulable_Pwm_EnableNotification_Return)
#undef SchM_Schedulable_Pwm_EnableNotification_Return
extern void SchM_Schedulable_Pwm_EnableNotification_Return(void);
#else
#define SchM_Schedulable_Pwm_EnableNotification_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_EnableNotification_Return */

#if defined(SchM_Schedulable_Pwm_EnableNotification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_EnableNotification_Start
#endif
#if defined(SchM_Schedulable_Pwm_EnableNotification_Start)
#undef SchM_Schedulable_Pwm_EnableNotification_Start
extern void SchM_Schedulable_Pwm_EnableNotification_Start(void);
#else
#define SchM_Schedulable_Pwm_EnableNotification_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_EnableNotification_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_FAULT_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_0_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_1_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_2_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_0_SUBMOD_3_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_0_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_1_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_2_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_1_SUBMOD_3_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_0_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_1_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_2_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Return
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Return)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Return
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Return(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Return */

#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Start
#endif
#if defined(SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Start)
#undef SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Start
extern void SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Start(void);
#else
#define SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_FLEXPWM_IP_INS_2_SUBMOD_3_CMP_ISR_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_DeInitChannel_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_ForceOuputLevel_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetOutputState_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_GetPeriod_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_InitChannel_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateClockPrescaler_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdateInterruptMode_Start */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Return
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Return)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Return
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Return(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Return */

#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Start
#endif
#if defined(SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Start)
#undef SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Start
extern void SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Start(void);
#else
#define SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Flexio_Pwm_Ip_UpdatePeriodDuty_Start */

#if defined(SchM_Schedulable_Pwm_GetChannelState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetChannelState_Return
#endif
#if defined(SchM_Schedulable_Pwm_GetChannelState_Return)
#undef SchM_Schedulable_Pwm_GetChannelState_Return
extern void SchM_Schedulable_Pwm_GetChannelState_Return(void);
#else
#define SchM_Schedulable_Pwm_GetChannelState_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetChannelState_Return */

#if defined(SchM_Schedulable_Pwm_GetChannelState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetChannelState_Start
#endif
#if defined(SchM_Schedulable_Pwm_GetChannelState_Start)
#undef SchM_Schedulable_Pwm_GetChannelState_Start
extern void SchM_Schedulable_Pwm_GetChannelState_Start(void);
#else
#define SchM_Schedulable_Pwm_GetChannelState_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetChannelState_Start */

#if defined(SchM_Schedulable_Pwm_GetCurrentPowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetCurrentPowerState_Return
#endif
#if defined(SchM_Schedulable_Pwm_GetCurrentPowerState_Return)
#undef SchM_Schedulable_Pwm_GetCurrentPowerState_Return
extern void SchM_Schedulable_Pwm_GetCurrentPowerState_Return(void);
#else
#define SchM_Schedulable_Pwm_GetCurrentPowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetCurrentPowerState_Return */

#if defined(SchM_Schedulable_Pwm_GetCurrentPowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetCurrentPowerState_Start
#endif
#if defined(SchM_Schedulable_Pwm_GetCurrentPowerState_Start)
#undef SchM_Schedulable_Pwm_GetCurrentPowerState_Start
extern void SchM_Schedulable_Pwm_GetCurrentPowerState_Start(void);
#else
#define SchM_Schedulable_Pwm_GetCurrentPowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetCurrentPowerState_Start */

#if defined(SchM_Schedulable_Pwm_GetOutputState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetOutputState_Return
#endif
#if defined(SchM_Schedulable_Pwm_GetOutputState_Return)
#undef SchM_Schedulable_Pwm_GetOutputState_Return
extern void SchM_Schedulable_Pwm_GetOutputState_Return(void);
#else
#define SchM_Schedulable_Pwm_GetOutputState_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetOutputState_Return */

#if defined(SchM_Schedulable_Pwm_GetOutputState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetOutputState_Start
#endif
#if defined(SchM_Schedulable_Pwm_GetOutputState_Start)
#undef SchM_Schedulable_Pwm_GetOutputState_Start
extern void SchM_Schedulable_Pwm_GetOutputState_Start(void);
#else
#define SchM_Schedulable_Pwm_GetOutputState_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetOutputState_Start */

#if defined(SchM_Schedulable_Pwm_GetTargetPowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetTargetPowerState_Return
#endif
#if defined(SchM_Schedulable_Pwm_GetTargetPowerState_Return)
#undef SchM_Schedulable_Pwm_GetTargetPowerState_Return
extern void SchM_Schedulable_Pwm_GetTargetPowerState_Return(void);
#else
#define SchM_Schedulable_Pwm_GetTargetPowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetTargetPowerState_Return */

#if defined(SchM_Schedulable_Pwm_GetTargetPowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetTargetPowerState_Start
#endif
#if defined(SchM_Schedulable_Pwm_GetTargetPowerState_Start)
#undef SchM_Schedulable_Pwm_GetTargetPowerState_Start
extern void SchM_Schedulable_Pwm_GetTargetPowerState_Start(void);
#else
#define SchM_Schedulable_Pwm_GetTargetPowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetTargetPowerState_Start */

#if defined(SchM_Schedulable_Pwm_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Pwm_GetVersionInfo_Return)
#undef SchM_Schedulable_Pwm_GetVersionInfo_Return
extern void SchM_Schedulable_Pwm_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Pwm_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Pwm_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Pwm_GetVersionInfo_Start)
#undef SchM_Schedulable_Pwm_GetVersionInfo_Start
extern void SchM_Schedulable_Pwm_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Pwm_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Pwm_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Init_Return
#endif
#if defined(SchM_Schedulable_Pwm_Init_Return)
#undef SchM_Schedulable_Pwm_Init_Return
extern void SchM_Schedulable_Pwm_Init_Return(void);
#else
#define SchM_Schedulable_Pwm_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Init_Return */

#if defined(SchM_Schedulable_Pwm_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Init_Start
#endif
#if defined(SchM_Schedulable_Pwm_Init_Start)
#undef SchM_Schedulable_Pwm_Init_Start
extern void SchM_Schedulable_Pwm_Init_Start(void);
#else
#define SchM_Schedulable_Pwm_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Init_Start */

#if defined(SchM_Schedulable_Pwm_Notification_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Notification_Return
#endif
#if defined(SchM_Schedulable_Pwm_Notification_Return)
#undef SchM_Schedulable_Pwm_Notification_Return
extern void SchM_Schedulable_Pwm_Notification_Return(void);
#else
#define SchM_Schedulable_Pwm_Notification_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Notification_Return */

#if defined(SchM_Schedulable_Pwm_Notification_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_Notification_Start
#endif
#if defined(SchM_Schedulable_Pwm_Notification_Start)
#undef SchM_Schedulable_Pwm_Notification_Start
extern void SchM_Schedulable_Pwm_Notification_Start(void);
#else
#define SchM_Schedulable_Pwm_Notification_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_Notification_Start */

#if defined(SchM_Schedulable_Pwm_PreparePowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_PreparePowerState_Return
#endif
#if defined(SchM_Schedulable_Pwm_PreparePowerState_Return)
#undef SchM_Schedulable_Pwm_PreparePowerState_Return
extern void SchM_Schedulable_Pwm_PreparePowerState_Return(void);
#else
#define SchM_Schedulable_Pwm_PreparePowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_PreparePowerState_Return */

#if defined(SchM_Schedulable_Pwm_PreparePowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_PreparePowerState_Start
#endif
#if defined(SchM_Schedulable_Pwm_PreparePowerState_Start)
#undef SchM_Schedulable_Pwm_PreparePowerState_Start
extern void SchM_Schedulable_Pwm_PreparePowerState_Start(void);
#else
#define SchM_Schedulable_Pwm_PreparePowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_PreparePowerState_Start */

#if defined(SchM_Schedulable_Pwm_SetChannelDeadTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetChannelDeadTime_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetChannelDeadTime_Return)
#undef SchM_Schedulable_Pwm_SetChannelDeadTime_Return
extern void SchM_Schedulable_Pwm_SetChannelDeadTime_Return(void);
#else
#define SchM_Schedulable_Pwm_SetChannelDeadTime_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetChannelDeadTime_Return */

#if defined(SchM_Schedulable_Pwm_SetChannelDeadTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetChannelDeadTime_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetChannelDeadTime_Start)
#undef SchM_Schedulable_Pwm_SetChannelDeadTime_Start
extern void SchM_Schedulable_Pwm_SetChannelDeadTime_Start(void);
#else
#define SchM_Schedulable_Pwm_SetChannelDeadTime_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetChannelDeadTime_Start */

#if defined(SchM_Schedulable_Pwm_SetChannelOutput_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetChannelOutput_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetChannelOutput_Return)
#undef SchM_Schedulable_Pwm_SetChannelOutput_Return
extern void SchM_Schedulable_Pwm_SetChannelOutput_Return(void);
#else
#define SchM_Schedulable_Pwm_SetChannelOutput_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetChannelOutput_Return */

#if defined(SchM_Schedulable_Pwm_SetChannelOutput_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetChannelOutput_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetChannelOutput_Start)
#undef SchM_Schedulable_Pwm_SetChannelOutput_Start
extern void SchM_Schedulable_Pwm_SetChannelOutput_Start(void);
#else
#define SchM_Schedulable_Pwm_SetChannelOutput_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetChannelOutput_Start */

#if defined(SchM_Schedulable_Pwm_SetClockMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetClockMode_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetClockMode_Return)
#undef SchM_Schedulable_Pwm_SetClockMode_Return
extern void SchM_Schedulable_Pwm_SetClockMode_Return(void);
#else
#define SchM_Schedulable_Pwm_SetClockMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetClockMode_Return */

#if defined(SchM_Schedulable_Pwm_SetClockMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetClockMode_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetClockMode_Start)
#undef SchM_Schedulable_Pwm_SetClockMode_Start
extern void SchM_Schedulable_Pwm_SetClockMode_Start(void);
#else
#define SchM_Schedulable_Pwm_SetClockMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetClockMode_Start */

#if defined(SchM_Schedulable_Pwm_SetCounterBus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetCounterBus_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetCounterBus_Return)
#undef SchM_Schedulable_Pwm_SetCounterBus_Return
extern void SchM_Schedulable_Pwm_SetCounterBus_Return(void);
#else
#define SchM_Schedulable_Pwm_SetCounterBus_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetCounterBus_Return */

#if defined(SchM_Schedulable_Pwm_SetCounterBus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetCounterBus_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetCounterBus_Start)
#undef SchM_Schedulable_Pwm_SetCounterBus_Start
extern void SchM_Schedulable_Pwm_SetCounterBus_Start(void);
#else
#define SchM_Schedulable_Pwm_SetCounterBus_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetCounterBus_Start */

#if defined(SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Return)
#undef SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Return
extern void SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Return(void);
#else
#define SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Return */

#if defined(SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Start)
#undef SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Start
extern void SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Start(void);
#else
#define SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetDutyCycle_NoUpdate_Start */

#if defined(SchM_Schedulable_Pwm_SetDutyCycle_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetDutyCycle_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetDutyCycle_Return)
#undef SchM_Schedulable_Pwm_SetDutyCycle_Return
extern void SchM_Schedulable_Pwm_SetDutyCycle_Return(void);
#else
#define SchM_Schedulable_Pwm_SetDutyCycle_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetDutyCycle_Return */

#if defined(SchM_Schedulable_Pwm_SetDutyCycle_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetDutyCycle_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetDutyCycle_Start)
#undef SchM_Schedulable_Pwm_SetDutyCycle_Start
extern void SchM_Schedulable_Pwm_SetDutyCycle_Start(void);
#else
#define SchM_Schedulable_Pwm_SetDutyCycle_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetDutyCycle_Start */

#if defined(SchM_Schedulable_Pwm_SetDutyPhaseShift_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetDutyPhaseShift_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetDutyPhaseShift_Return)
#undef SchM_Schedulable_Pwm_SetDutyPhaseShift_Return
extern void SchM_Schedulable_Pwm_SetDutyPhaseShift_Return(void);
#else
#define SchM_Schedulable_Pwm_SetDutyPhaseShift_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetDutyPhaseShift_Return */

#if defined(SchM_Schedulable_Pwm_SetDutyPhaseShift_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetDutyPhaseShift_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetDutyPhaseShift_Start)
#undef SchM_Schedulable_Pwm_SetDutyPhaseShift_Start
extern void SchM_Schedulable_Pwm_SetDutyPhaseShift_Start(void);
#else
#define SchM_Schedulable_Pwm_SetDutyPhaseShift_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetDutyPhaseShift_Start */

#if defined(SchM_Schedulable_Pwm_SetOutputToIdle_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetOutputToIdle_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetOutputToIdle_Return)
#undef SchM_Schedulable_Pwm_SetOutputToIdle_Return
extern void SchM_Schedulable_Pwm_SetOutputToIdle_Return(void);
#else
#define SchM_Schedulable_Pwm_SetOutputToIdle_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetOutputToIdle_Return */

#if defined(SchM_Schedulable_Pwm_SetOutputToIdle_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetOutputToIdle_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetOutputToIdle_Start)
#undef SchM_Schedulable_Pwm_SetOutputToIdle_Start
extern void SchM_Schedulable_Pwm_SetOutputToIdle_Start(void);
#else
#define SchM_Schedulable_Pwm_SetOutputToIdle_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetOutputToIdle_Start */

#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Return)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Return
extern void SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Return(void);
#else
#define SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Return */

#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Start)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Start
extern void SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Start(void);
#else
#define SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPeriodAndDuty_NoUpdate_Start */

#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_Return)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_Return
extern void SchM_Schedulable_Pwm_SetPeriodAndDuty_Return(void);
#else
#define SchM_Schedulable_Pwm_SetPeriodAndDuty_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPeriodAndDuty_Return */

#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetPeriodAndDuty_Start)
#undef SchM_Schedulable_Pwm_SetPeriodAndDuty_Start
extern void SchM_Schedulable_Pwm_SetPeriodAndDuty_Start(void);
#else
#define SchM_Schedulable_Pwm_SetPeriodAndDuty_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPeriodAndDuty_Start */

#if defined(SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Return)
#undef SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Return
extern void SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Return(void);
#else
#define SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Return */

#if defined(SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Start)
#undef SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Start
extern void SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Start(void);
#else
#define SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPhaseShift_NoUpdate_Start */

#if defined(SchM_Schedulable_Pwm_SetPhaseShift_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPhaseShift_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetPhaseShift_Return)
#undef SchM_Schedulable_Pwm_SetPhaseShift_Return
extern void SchM_Schedulable_Pwm_SetPhaseShift_Return(void);
#else
#define SchM_Schedulable_Pwm_SetPhaseShift_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPhaseShift_Return */

#if defined(SchM_Schedulable_Pwm_SetPhaseShift_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPhaseShift_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetPhaseShift_Start)
#undef SchM_Schedulable_Pwm_SetPhaseShift_Start
extern void SchM_Schedulable_Pwm_SetPhaseShift_Start(void);
#else
#define SchM_Schedulable_Pwm_SetPhaseShift_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPhaseShift_Start */

#if defined(SchM_Schedulable_Pwm_SetPowerState_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPowerState_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetPowerState_Return)
#undef SchM_Schedulable_Pwm_SetPowerState_Return
extern void SchM_Schedulable_Pwm_SetPowerState_Return(void);
#else
#define SchM_Schedulable_Pwm_SetPowerState_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPowerState_Return */

#if defined(SchM_Schedulable_Pwm_SetPowerState_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetPowerState_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetPowerState_Start)
#undef SchM_Schedulable_Pwm_SetPowerState_Start
extern void SchM_Schedulable_Pwm_SetPowerState_Start(void);
#else
#define SchM_Schedulable_Pwm_SetPowerState_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetPowerState_Start */

#if defined(SchM_Schedulable_Pwm_SetTriggerDelay_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetTriggerDelay_Return
#endif
#if defined(SchM_Schedulable_Pwm_SetTriggerDelay_Return)
#undef SchM_Schedulable_Pwm_SetTriggerDelay_Return
extern void SchM_Schedulable_Pwm_SetTriggerDelay_Return(void);
#else
#define SchM_Schedulable_Pwm_SetTriggerDelay_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetTriggerDelay_Return */

#if defined(SchM_Schedulable_Pwm_SetTriggerDelay_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SetTriggerDelay_Start
#endif
#if defined(SchM_Schedulable_Pwm_SetTriggerDelay_Start)
#undef SchM_Schedulable_Pwm_SetTriggerDelay_Start
extern void SchM_Schedulable_Pwm_SetTriggerDelay_Start(void);
#else
#define SchM_Schedulable_Pwm_SetTriggerDelay_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SetTriggerDelay_Start */

#if defined(SchM_Schedulable_Pwm_SyncUpdate_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SyncUpdate_Return
#endif
#if defined(SchM_Schedulable_Pwm_SyncUpdate_Return)
#undef SchM_Schedulable_Pwm_SyncUpdate_Return
extern void SchM_Schedulable_Pwm_SyncUpdate_Return(void);
#else
#define SchM_Schedulable_Pwm_SyncUpdate_Return() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SyncUpdate_Return */

#if defined(SchM_Schedulable_Pwm_SyncUpdate_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Pwm_SyncUpdate_Start
#endif
#if defined(SchM_Schedulable_Pwm_SyncUpdate_Start)
#undef SchM_Schedulable_Pwm_SyncUpdate_Start
extern void SchM_Schedulable_Pwm_SyncUpdate_Start(void);
#else
#define SchM_Schedulable_Pwm_SyncUpdate_Start() ((void)(0))
#endif /* SchM_Schedulable_Pwm_SyncUpdate_Start */

#if defined(SchM_Schedulable_Spi_AsyncTransmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_AsyncTransmit_Return
#endif
#if defined(SchM_Schedulable_Spi_AsyncTransmit_Return)
#undef SchM_Schedulable_Spi_AsyncTransmit_Return
extern void SchM_Schedulable_Spi_AsyncTransmit_Return(void);
#else
#define SchM_Schedulable_Spi_AsyncTransmit_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_AsyncTransmit_Return */

#if defined(SchM_Schedulable_Spi_AsyncTransmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_AsyncTransmit_Start
#endif
#if defined(SchM_Schedulable_Spi_AsyncTransmit_Start)
#undef SchM_Schedulable_Spi_AsyncTransmit_Start
extern void SchM_Schedulable_Spi_AsyncTransmit_Start(void);
#else
#define SchM_Schedulable_Spi_AsyncTransmit_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_AsyncTransmit_Start */

#if defined(SchM_Schedulable_Spi_Cancel_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Cancel_Return
#endif
#if defined(SchM_Schedulable_Spi_Cancel_Return)
#undef SchM_Schedulable_Spi_Cancel_Return
extern void SchM_Schedulable_Spi_Cancel_Return(void);
#else
#define SchM_Schedulable_Spi_Cancel_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Cancel_Return */

#if defined(SchM_Schedulable_Spi_Cancel_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Cancel_Start
#endif
#if defined(SchM_Schedulable_Spi_Cancel_Start)
#undef SchM_Schedulable_Spi_Cancel_Start
extern void SchM_Schedulable_Spi_Cancel_Start(void);
#else
#define SchM_Schedulable_Spi_Cancel_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Cancel_Start */

#if defined(SchM_Schedulable_Spi_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_DeInit_Return
#endif
#if defined(SchM_Schedulable_Spi_DeInit_Return)
#undef SchM_Schedulable_Spi_DeInit_Return
extern void SchM_Schedulable_Spi_DeInit_Return(void);
#else
#define SchM_Schedulable_Spi_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_DeInit_Return */

#if defined(SchM_Schedulable_Spi_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_DeInit_Start
#endif
#if defined(SchM_Schedulable_Spi_DeInit_Start)
#undef SchM_Schedulable_Spi_DeInit_Start
extern void SchM_Schedulable_Spi_DeInit_Start(void);
#else
#define SchM_Schedulable_Spi_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_DeInit_Start */

#if defined(SchM_Schedulable_Spi_GetHWUnitStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetHWUnitStatus_Return
#endif
#if defined(SchM_Schedulable_Spi_GetHWUnitStatus_Return)
#undef SchM_Schedulable_Spi_GetHWUnitStatus_Return
extern void SchM_Schedulable_Spi_GetHWUnitStatus_Return(void);
#else
#define SchM_Schedulable_Spi_GetHWUnitStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetHWUnitStatus_Return */

#if defined(SchM_Schedulable_Spi_GetHWUnitStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetHWUnitStatus_Start
#endif
#if defined(SchM_Schedulable_Spi_GetHWUnitStatus_Start)
#undef SchM_Schedulable_Spi_GetHWUnitStatus_Start
extern void SchM_Schedulable_Spi_GetHWUnitStatus_Start(void);
#else
#define SchM_Schedulable_Spi_GetHWUnitStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetHWUnitStatus_Start */

#if defined(SchM_Schedulable_Spi_GetJobResult_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetJobResult_Return
#endif
#if defined(SchM_Schedulable_Spi_GetJobResult_Return)
#undef SchM_Schedulable_Spi_GetJobResult_Return
extern void SchM_Schedulable_Spi_GetJobResult_Return(void);
#else
#define SchM_Schedulable_Spi_GetJobResult_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetJobResult_Return */

#if defined(SchM_Schedulable_Spi_GetJobResult_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetJobResult_Start
#endif
#if defined(SchM_Schedulable_Spi_GetJobResult_Start)
#undef SchM_Schedulable_Spi_GetJobResult_Start
extern void SchM_Schedulable_Spi_GetJobResult_Start(void);
#else
#define SchM_Schedulable_Spi_GetJobResult_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetJobResult_Start */

#if defined(SchM_Schedulable_Spi_GetSequenceResult_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetSequenceResult_Return
#endif
#if defined(SchM_Schedulable_Spi_GetSequenceResult_Return)
#undef SchM_Schedulable_Spi_GetSequenceResult_Return
extern void SchM_Schedulable_Spi_GetSequenceResult_Return(void);
#else
#define SchM_Schedulable_Spi_GetSequenceResult_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetSequenceResult_Return */

#if defined(SchM_Schedulable_Spi_GetSequenceResult_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetSequenceResult_Start
#endif
#if defined(SchM_Schedulable_Spi_GetSequenceResult_Start)
#undef SchM_Schedulable_Spi_GetSequenceResult_Start
extern void SchM_Schedulable_Spi_GetSequenceResult_Start(void);
#else
#define SchM_Schedulable_Spi_GetSequenceResult_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetSequenceResult_Start */

#if defined(SchM_Schedulable_Spi_GetStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetStatus_Return
#endif
#if defined(SchM_Schedulable_Spi_GetStatus_Return)
#undef SchM_Schedulable_Spi_GetStatus_Return
extern void SchM_Schedulable_Spi_GetStatus_Return(void);
#else
#define SchM_Schedulable_Spi_GetStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetStatus_Return */

#if defined(SchM_Schedulable_Spi_GetStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetStatus_Start
#endif
#if defined(SchM_Schedulable_Spi_GetStatus_Start)
#undef SchM_Schedulable_Spi_GetStatus_Start
extern void SchM_Schedulable_Spi_GetStatus_Start(void);
#else
#define SchM_Schedulable_Spi_GetStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetStatus_Start */

#if defined(SchM_Schedulable_Spi_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Spi_GetVersionInfo_Return)
#undef SchM_Schedulable_Spi_GetVersionInfo_Return
extern void SchM_Schedulable_Spi_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Spi_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Spi_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Spi_GetVersionInfo_Start)
#undef SchM_Schedulable_Spi_GetVersionInfo_Start
extern void SchM_Schedulable_Spi_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Spi_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Spi_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Init_Return
#endif
#if defined(SchM_Schedulable_Spi_Init_Return)
#undef SchM_Schedulable_Spi_Init_Return
extern void SchM_Schedulable_Spi_Init_Return(void);
#else
#define SchM_Schedulable_Spi_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Init_Return */

#if defined(SchM_Schedulable_Spi_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Init_Start
#endif
#if defined(SchM_Schedulable_Spi_Init_Start)
#undef SchM_Schedulable_Spi_Init_Start
extern void SchM_Schedulable_Spi_Init_Start(void);
#else
#define SchM_Schedulable_Spi_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Init_Start */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Return)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Return
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Return */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Start)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Start
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_0_IRQHandler_Start */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Return)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Return
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Return */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Start)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Start
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_1_IRQHandler_Start */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Return)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Return
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Return */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Start)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Start
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_2_IRQHandler_Start */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Return)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Return
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Return */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Start)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Start
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_3_IRQHandler_Start */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Return)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Return
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Return */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Start)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Start
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_4_IRQHandler_Start */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Return
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Return)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Return
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Return(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Return */

#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Start
#endif
#if defined(SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Start)
#undef SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Start
extern void SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Start(void);
#else
#define SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_Lpspi_Ip_LPSPI_5_IRQHandler_Start */

#if defined(SchM_Schedulable_Spi_MainFunction_Handling_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_MainFunction_Handling_Return
#endif
#if defined(SchM_Schedulable_Spi_MainFunction_Handling_Return)
#undef SchM_Schedulable_Spi_MainFunction_Handling_Return
extern void SchM_Schedulable_Spi_MainFunction_Handling_Return(void);
#else
#define SchM_Schedulable_Spi_MainFunction_Handling_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_MainFunction_Handling_Return */

#if defined(SchM_Schedulable_Spi_MainFunction_Handling_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_MainFunction_Handling_Start
#endif
#if defined(SchM_Schedulable_Spi_MainFunction_Handling_Start)
#undef SchM_Schedulable_Spi_MainFunction_Handling_Start
extern void SchM_Schedulable_Spi_MainFunction_Handling_Start(void);
#else
#define SchM_Schedulable_Spi_MainFunction_Handling_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_MainFunction_Handling_Start */

#if defined(SchM_Schedulable_Spi_ReadIB_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_ReadIB_Return
#endif
#if defined(SchM_Schedulable_Spi_ReadIB_Return)
#undef SchM_Schedulable_Spi_ReadIB_Return
extern void SchM_Schedulable_Spi_ReadIB_Return(void);
#else
#define SchM_Schedulable_Spi_ReadIB_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_ReadIB_Return */

#if defined(SchM_Schedulable_Spi_ReadIB_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_ReadIB_Start
#endif
#if defined(SchM_Schedulable_Spi_ReadIB_Start)
#undef SchM_Schedulable_Spi_ReadIB_Start
extern void SchM_Schedulable_Spi_ReadIB_Start(void);
#else
#define SchM_Schedulable_Spi_ReadIB_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_ReadIB_Start */

#if defined(SchM_Schedulable_Spi_SetAsyncMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_SetAsyncMode_Return
#endif
#if defined(SchM_Schedulable_Spi_SetAsyncMode_Return)
#undef SchM_Schedulable_Spi_SetAsyncMode_Return
extern void SchM_Schedulable_Spi_SetAsyncMode_Return(void);
#else
#define SchM_Schedulable_Spi_SetAsyncMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_SetAsyncMode_Return */

#if defined(SchM_Schedulable_Spi_SetAsyncMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_SetAsyncMode_Start
#endif
#if defined(SchM_Schedulable_Spi_SetAsyncMode_Start)
#undef SchM_Schedulable_Spi_SetAsyncMode_Start
extern void SchM_Schedulable_Spi_SetAsyncMode_Start(void);
#else
#define SchM_Schedulable_Spi_SetAsyncMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_SetAsyncMode_Start */

#if defined(SchM_Schedulable_Spi_SetupEB_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_SetupEB_Return
#endif
#if defined(SchM_Schedulable_Spi_SetupEB_Return)
#undef SchM_Schedulable_Spi_SetupEB_Return
extern void SchM_Schedulable_Spi_SetupEB_Return(void);
#else
#define SchM_Schedulable_Spi_SetupEB_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_SetupEB_Return */

#if defined(SchM_Schedulable_Spi_SetupEB_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_SetupEB_Start
#endif
#if defined(SchM_Schedulable_Spi_SetupEB_Start)
#undef SchM_Schedulable_Spi_SetupEB_Start
extern void SchM_Schedulable_Spi_SetupEB_Start(void);
#else
#define SchM_Schedulable_Spi_SetupEB_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_SetupEB_Start */

#if defined(SchM_Schedulable_Spi_SyncTransmit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_SyncTransmit_Return
#endif
#if defined(SchM_Schedulable_Spi_SyncTransmit_Return)
#undef SchM_Schedulable_Spi_SyncTransmit_Return
extern void SchM_Schedulable_Spi_SyncTransmit_Return(void);
#else
#define SchM_Schedulable_Spi_SyncTransmit_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_SyncTransmit_Return */

#if defined(SchM_Schedulable_Spi_SyncTransmit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_SyncTransmit_Start
#endif
#if defined(SchM_Schedulable_Spi_SyncTransmit_Start)
#undef SchM_Schedulable_Spi_SyncTransmit_Start
extern void SchM_Schedulable_Spi_SyncTransmit_Start(void);
#else
#define SchM_Schedulable_Spi_SyncTransmit_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_SyncTransmit_Start */

#if defined(SchM_Schedulable_Spi_WriteIB_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_WriteIB_Return
#endif
#if defined(SchM_Schedulable_Spi_WriteIB_Return)
#undef SchM_Schedulable_Spi_WriteIB_Return
extern void SchM_Schedulable_Spi_WriteIB_Return(void);
#else
#define SchM_Schedulable_Spi_WriteIB_Return() ((void)(0))
#endif /* SchM_Schedulable_Spi_WriteIB_Return */

#if defined(SchM_Schedulable_Spi_WriteIB_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Spi_WriteIB_Start
#endif
#if defined(SchM_Schedulable_Spi_WriteIB_Start)
#undef SchM_Schedulable_Spi_WriteIB_Start
extern void SchM_Schedulable_Spi_WriteIB_Start(void);
#else
#define SchM_Schedulable_Spi_WriteIB_Start() ((void)(0))
#endif /* SchM_Schedulable_Spi_WriteIB_Start */

#if defined(SchM_Schedulable_StbM_BusGetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_BusGetCurrentTime_Return
#endif
#if defined(SchM_Schedulable_StbM_BusGetCurrentTime_Return)
#undef SchM_Schedulable_StbM_BusGetCurrentTime_Return
extern void SchM_Schedulable_StbM_BusGetCurrentTime_Return(void);
#else
#define SchM_Schedulable_StbM_BusGetCurrentTime_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_BusGetCurrentTime_Return */

#if defined(SchM_Schedulable_StbM_BusGetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_BusGetCurrentTime_Start
#endif
#if defined(SchM_Schedulable_StbM_BusGetCurrentTime_Start)
#undef SchM_Schedulable_StbM_BusGetCurrentTime_Start
extern void SchM_Schedulable_StbM_BusGetCurrentTime_Start(void);
#else
#define SchM_Schedulable_StbM_BusGetCurrentTime_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_BusGetCurrentTime_Start */

#if defined(SchM_Schedulable_StbM_BusSetGlobalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_BusSetGlobalTime_Return
#endif
#if defined(SchM_Schedulable_StbM_BusSetGlobalTime_Return)
#undef SchM_Schedulable_StbM_BusSetGlobalTime_Return
extern void SchM_Schedulable_StbM_BusSetGlobalTime_Return(void);
#else
#define SchM_Schedulable_StbM_BusSetGlobalTime_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_BusSetGlobalTime_Return */

#if defined(SchM_Schedulable_StbM_BusSetGlobalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_BusSetGlobalTime_Start
#endif
#if defined(SchM_Schedulable_StbM_BusSetGlobalTime_Start)
#undef SchM_Schedulable_StbM_BusSetGlobalTime_Start
extern void SchM_Schedulable_StbM_BusSetGlobalTime_Start(void);
#else
#define SchM_Schedulable_StbM_BusSetGlobalTime_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_BusSetGlobalTime_Start */

#if defined(SchM_Schedulable_StbM_GetCurrentTimeExtended_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetCurrentTimeExtended_Return
#endif
#if defined(SchM_Schedulable_StbM_GetCurrentTimeExtended_Return)
#undef SchM_Schedulable_StbM_GetCurrentTimeExtended_Return
extern void SchM_Schedulable_StbM_GetCurrentTimeExtended_Return(void);
#else
#define SchM_Schedulable_StbM_GetCurrentTimeExtended_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetCurrentTimeExtended_Return */

#if defined(SchM_Schedulable_StbM_GetCurrentTimeExtended_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetCurrentTimeExtended_Start
#endif
#if defined(SchM_Schedulable_StbM_GetCurrentTimeExtended_Start)
#undef SchM_Schedulable_StbM_GetCurrentTimeExtended_Start
extern void SchM_Schedulable_StbM_GetCurrentTimeExtended_Start(void);
#else
#define SchM_Schedulable_StbM_GetCurrentTimeExtended_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetCurrentTimeExtended_Start */

#if defined(SchM_Schedulable_StbM_GetCurrentTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetCurrentTime_Return
#endif
#if defined(SchM_Schedulable_StbM_GetCurrentTime_Return)
#undef SchM_Schedulable_StbM_GetCurrentTime_Return
extern void SchM_Schedulable_StbM_GetCurrentTime_Return(void);
#else
#define SchM_Schedulable_StbM_GetCurrentTime_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetCurrentTime_Return */

#if defined(SchM_Schedulable_StbM_GetCurrentTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetCurrentTime_Start
#endif
#if defined(SchM_Schedulable_StbM_GetCurrentTime_Start)
#undef SchM_Schedulable_StbM_GetCurrentTime_Start
extern void SchM_Schedulable_StbM_GetCurrentTime_Start(void);
#else
#define SchM_Schedulable_StbM_GetCurrentTime_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetCurrentTime_Start */

#if defined(SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Return
#endif
#if defined(SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Return)
#undef SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Return
extern void SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Return(void);
#else
#define SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Return */

#if defined(SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Start
#endif
#if defined(SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Start)
#undef SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Start
extern void SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Start(void);
#else
#define SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetCurrentVirtualLocalTime_Start */

#if defined(SchM_Schedulable_StbM_GetMasterConfig_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetMasterConfig_Return
#endif
#if defined(SchM_Schedulable_StbM_GetMasterConfig_Return)
#undef SchM_Schedulable_StbM_GetMasterConfig_Return
extern void SchM_Schedulable_StbM_GetMasterConfig_Return(void);
#else
#define SchM_Schedulable_StbM_GetMasterConfig_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetMasterConfig_Return */

#if defined(SchM_Schedulable_StbM_GetMasterConfig_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetMasterConfig_Start
#endif
#if defined(SchM_Schedulable_StbM_GetMasterConfig_Start)
#undef SchM_Schedulable_StbM_GetMasterConfig_Start
extern void SchM_Schedulable_StbM_GetMasterConfig_Start(void);
#else
#define SchM_Schedulable_StbM_GetMasterConfig_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetMasterConfig_Start */

#if defined(SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Return
#endif
#if defined(SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Return)
#undef SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Return
extern void SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Return(void);
#else
#define SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Return */

#if defined(SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Start
#endif
#if defined(SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Start)
#undef SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Start
extern void SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Start(void);
#else
#define SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetOffsetTimeRecordHead_Start */

#if defined(SchM_Schedulable_StbM_GetOffset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetOffset_Return
#endif
#if defined(SchM_Schedulable_StbM_GetOffset_Return)
#undef SchM_Schedulable_StbM_GetOffset_Return
extern void SchM_Schedulable_StbM_GetOffset_Return(void);
#else
#define SchM_Schedulable_StbM_GetOffset_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetOffset_Return */

#if defined(SchM_Schedulable_StbM_GetOffset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetOffset_Start
#endif
#if defined(SchM_Schedulable_StbM_GetOffset_Start)
#undef SchM_Schedulable_StbM_GetOffset_Start
extern void SchM_Schedulable_StbM_GetOffset_Start(void);
#else
#define SchM_Schedulable_StbM_GetOffset_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetOffset_Start */

#if defined(SchM_Schedulable_StbM_GetRateDeviation_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetRateDeviation_Return
#endif
#if defined(SchM_Schedulable_StbM_GetRateDeviation_Return)
#undef SchM_Schedulable_StbM_GetRateDeviation_Return
extern void SchM_Schedulable_StbM_GetRateDeviation_Return(void);
#else
#define SchM_Schedulable_StbM_GetRateDeviation_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetRateDeviation_Return */

#if defined(SchM_Schedulable_StbM_GetRateDeviation_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetRateDeviation_Start
#endif
#if defined(SchM_Schedulable_StbM_GetRateDeviation_Start)
#undef SchM_Schedulable_StbM_GetRateDeviation_Start
extern void SchM_Schedulable_StbM_GetRateDeviation_Start(void);
#else
#define SchM_Schedulable_StbM_GetRateDeviation_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetRateDeviation_Start */

#if defined(SchM_Schedulable_StbM_GetSyncTimeRecordHead_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetSyncTimeRecordHead_Return
#endif
#if defined(SchM_Schedulable_StbM_GetSyncTimeRecordHead_Return)
#undef SchM_Schedulable_StbM_GetSyncTimeRecordHead_Return
extern void SchM_Schedulable_StbM_GetSyncTimeRecordHead_Return(void);
#else
#define SchM_Schedulable_StbM_GetSyncTimeRecordHead_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetSyncTimeRecordHead_Return */

#if defined(SchM_Schedulable_StbM_GetSyncTimeRecordHead_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetSyncTimeRecordHead_Start
#endif
#if defined(SchM_Schedulable_StbM_GetSyncTimeRecordHead_Start)
#undef SchM_Schedulable_StbM_GetSyncTimeRecordHead_Start
extern void SchM_Schedulable_StbM_GetSyncTimeRecordHead_Start(void);
#else
#define SchM_Schedulable_StbM_GetSyncTimeRecordHead_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetSyncTimeRecordHead_Start */

#if defined(SchM_Schedulable_StbM_GetTimeBaseStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetTimeBaseStatus_Return
#endif
#if defined(SchM_Schedulable_StbM_GetTimeBaseStatus_Return)
#undef SchM_Schedulable_StbM_GetTimeBaseStatus_Return
extern void SchM_Schedulable_StbM_GetTimeBaseStatus_Return(void);
#else
#define SchM_Schedulable_StbM_GetTimeBaseStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetTimeBaseStatus_Return */

#if defined(SchM_Schedulable_StbM_GetTimeBaseStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetTimeBaseStatus_Start
#endif
#if defined(SchM_Schedulable_StbM_GetTimeBaseStatus_Start)
#undef SchM_Schedulable_StbM_GetTimeBaseStatus_Start
extern void SchM_Schedulable_StbM_GetTimeBaseStatus_Start(void);
#else
#define SchM_Schedulable_StbM_GetTimeBaseStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetTimeBaseStatus_Start */

#if defined(SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Return
#endif
#if defined(SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Return)
#undef SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Return
extern void SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Return(void);
#else
#define SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Return */

#if defined(SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Start
#endif
#if defined(SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Start)
#undef SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Start
extern void SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Start(void);
#else
#define SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetTimeBaseUpdateCounter_Start */

#if defined(SchM_Schedulable_StbM_GetTimeLeap_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetTimeLeap_Return
#endif
#if defined(SchM_Schedulable_StbM_GetTimeLeap_Return)
#undef SchM_Schedulable_StbM_GetTimeLeap_Return
extern void SchM_Schedulable_StbM_GetTimeLeap_Return(void);
#else
#define SchM_Schedulable_StbM_GetTimeLeap_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetTimeLeap_Return */

#if defined(SchM_Schedulable_StbM_GetTimeLeap_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_GetTimeLeap_Start
#endif
#if defined(SchM_Schedulable_StbM_GetTimeLeap_Start)
#undef SchM_Schedulable_StbM_GetTimeLeap_Start
extern void SchM_Schedulable_StbM_GetTimeLeap_Start(void);
#else
#define SchM_Schedulable_StbM_GetTimeLeap_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_GetTimeLeap_Start */

#if defined(SchM_Schedulable_StbM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_StbM_MainFunction_Return)
#undef SchM_Schedulable_StbM_MainFunction_Return
extern void SchM_Schedulable_StbM_MainFunction_Return(void);
#else
#define SchM_Schedulable_StbM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_MainFunction_Return */

#if defined(SchM_Schedulable_StbM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_StbM_MainFunction_Start)
#undef SchM_Schedulable_StbM_MainFunction_Start
extern void SchM_Schedulable_StbM_MainFunction_Start(void);
#else
#define SchM_Schedulable_StbM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_MainFunction_Start */

#if defined(SchM_Schedulable_StbM_SetGlobalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetGlobalTime_Return
#endif
#if defined(SchM_Schedulable_StbM_SetGlobalTime_Return)
#undef SchM_Schedulable_StbM_SetGlobalTime_Return
extern void SchM_Schedulable_StbM_SetGlobalTime_Return(void);
#else
#define SchM_Schedulable_StbM_SetGlobalTime_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetGlobalTime_Return */

#if defined(SchM_Schedulable_StbM_SetGlobalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetGlobalTime_Start
#endif
#if defined(SchM_Schedulable_StbM_SetGlobalTime_Start)
#undef SchM_Schedulable_StbM_SetGlobalTime_Start
extern void SchM_Schedulable_StbM_SetGlobalTime_Start(void);
#else
#define SchM_Schedulable_StbM_SetGlobalTime_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetGlobalTime_Start */

#if defined(SchM_Schedulable_StbM_SetOffset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetOffset_Return
#endif
#if defined(SchM_Schedulable_StbM_SetOffset_Return)
#undef SchM_Schedulable_StbM_SetOffset_Return
extern void SchM_Schedulable_StbM_SetOffset_Return(void);
#else
#define SchM_Schedulable_StbM_SetOffset_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetOffset_Return */

#if defined(SchM_Schedulable_StbM_SetOffset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetOffset_Start
#endif
#if defined(SchM_Schedulable_StbM_SetOffset_Start)
#undef SchM_Schedulable_StbM_SetOffset_Start
extern void SchM_Schedulable_StbM_SetOffset_Start(void);
#else
#define SchM_Schedulable_StbM_SetOffset_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetOffset_Start */

#if defined(SchM_Schedulable_StbM_SetRateCorrection_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetRateCorrection_Return
#endif
#if defined(SchM_Schedulable_StbM_SetRateCorrection_Return)
#undef SchM_Schedulable_StbM_SetRateCorrection_Return
extern void SchM_Schedulable_StbM_SetRateCorrection_Return(void);
#else
#define SchM_Schedulable_StbM_SetRateCorrection_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetRateCorrection_Return */

#if defined(SchM_Schedulable_StbM_SetRateCorrection_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetRateCorrection_Start
#endif
#if defined(SchM_Schedulable_StbM_SetRateCorrection_Start)
#undef SchM_Schedulable_StbM_SetRateCorrection_Start
extern void SchM_Schedulable_StbM_SetRateCorrection_Start(void);
#else
#define SchM_Schedulable_StbM_SetRateCorrection_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetRateCorrection_Start */

#if defined(SchM_Schedulable_StbM_SetUserData_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetUserData_Return
#endif
#if defined(SchM_Schedulable_StbM_SetUserData_Return)
#undef SchM_Schedulable_StbM_SetUserData_Return
extern void SchM_Schedulable_StbM_SetUserData_Return(void);
#else
#define SchM_Schedulable_StbM_SetUserData_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetUserData_Return */

#if defined(SchM_Schedulable_StbM_SetUserData_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_SetUserData_Start
#endif
#if defined(SchM_Schedulable_StbM_SetUserData_Start)
#undef SchM_Schedulable_StbM_SetUserData_Start
extern void SchM_Schedulable_StbM_SetUserData_Start(void);
#else
#define SchM_Schedulable_StbM_SetUserData_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_SetUserData_Start */

#if defined(SchM_Schedulable_StbM_StartTimer_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_StartTimer_Return
#endif
#if defined(SchM_Schedulable_StbM_StartTimer_Return)
#undef SchM_Schedulable_StbM_StartTimer_Return
extern void SchM_Schedulable_StbM_StartTimer_Return(void);
#else
#define SchM_Schedulable_StbM_StartTimer_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_StartTimer_Return */

#if defined(SchM_Schedulable_StbM_StartTimer_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_StartTimer_Start
#endif
#if defined(SchM_Schedulable_StbM_StartTimer_Start)
#undef SchM_Schedulable_StbM_StartTimer_Start
extern void SchM_Schedulable_StbM_StartTimer_Start(void);
#else
#define SchM_Schedulable_StbM_StartTimer_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_StartTimer_Start */

#if defined(SchM_Schedulable_StbM_TriggerTimeTransmission_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_TriggerTimeTransmission_Return
#endif
#if defined(SchM_Schedulable_StbM_TriggerTimeTransmission_Return)
#undef SchM_Schedulable_StbM_TriggerTimeTransmission_Return
extern void SchM_Schedulable_StbM_TriggerTimeTransmission_Return(void);
#else
#define SchM_Schedulable_StbM_TriggerTimeTransmission_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_TriggerTimeTransmission_Return */

#if defined(SchM_Schedulable_StbM_TriggerTimeTransmission_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_TriggerTimeTransmission_Start
#endif
#if defined(SchM_Schedulable_StbM_TriggerTimeTransmission_Start)
#undef SchM_Schedulable_StbM_TriggerTimeTransmission_Start
extern void SchM_Schedulable_StbM_TriggerTimeTransmission_Start(void);
#else
#define SchM_Schedulable_StbM_TriggerTimeTransmission_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_TriggerTimeTransmission_Start */

#if defined(SchM_Schedulable_StbM_UpdateGlobalTime_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_UpdateGlobalTime_Return
#endif
#if defined(SchM_Schedulable_StbM_UpdateGlobalTime_Return)
#undef SchM_Schedulable_StbM_UpdateGlobalTime_Return
extern void SchM_Schedulable_StbM_UpdateGlobalTime_Return(void);
#else
#define SchM_Schedulable_StbM_UpdateGlobalTime_Return() ((void)(0))
#endif /* SchM_Schedulable_StbM_UpdateGlobalTime_Return */

#if defined(SchM_Schedulable_StbM_UpdateGlobalTime_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_StbM_UpdateGlobalTime_Start
#endif
#if defined(SchM_Schedulable_StbM_UpdateGlobalTime_Start)
#undef SchM_Schedulable_StbM_UpdateGlobalTime_Start
extern void SchM_Schedulable_StbM_UpdateGlobalTime_Start(void);
#else
#define SchM_Schedulable_StbM_UpdateGlobalTime_Start() ((void)(0))
#endif /* SchM_Schedulable_StbM_UpdateGlobalTime_Start */

#if defined(SchM_Schedulable_WdgM_CheckpointReached_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_CheckpointReached_Return
#endif
#if defined(SchM_Schedulable_WdgM_CheckpointReached_Return)
#undef SchM_Schedulable_WdgM_CheckpointReached_Return
extern void SchM_Schedulable_WdgM_CheckpointReached_Return(void);
#else
#define SchM_Schedulable_WdgM_CheckpointReached_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_CheckpointReached_Return */

#if defined(SchM_Schedulable_WdgM_CheckpointReached_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_CheckpointReached_Start
#endif
#if defined(SchM_Schedulable_WdgM_CheckpointReached_Start)
#undef SchM_Schedulable_WdgM_CheckpointReached_Start
extern void SchM_Schedulable_WdgM_CheckpointReached_Start(void);
#else
#define SchM_Schedulable_WdgM_CheckpointReached_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_CheckpointReached_Start */

#if defined(SchM_Schedulable_WdgM_DeInit_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_DeInit_Return
#endif
#if defined(SchM_Schedulable_WdgM_DeInit_Return)
#undef SchM_Schedulable_WdgM_DeInit_Return
extern void SchM_Schedulable_WdgM_DeInit_Return(void);
#else
#define SchM_Schedulable_WdgM_DeInit_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_DeInit_Return */

#if defined(SchM_Schedulable_WdgM_DeInit_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_DeInit_Start
#endif
#if defined(SchM_Schedulable_WdgM_DeInit_Start)
#undef SchM_Schedulable_WdgM_DeInit_Start
extern void SchM_Schedulable_WdgM_DeInit_Start(void);
#else
#define SchM_Schedulable_WdgM_DeInit_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_DeInit_Start */

#if defined(SchM_Schedulable_WdgM_GetFirstExpiredSEID_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetFirstExpiredSEID_Return
#endif
#if defined(SchM_Schedulable_WdgM_GetFirstExpiredSEID_Return)
#undef SchM_Schedulable_WdgM_GetFirstExpiredSEID_Return
extern void SchM_Schedulable_WdgM_GetFirstExpiredSEID_Return(void);
#else
#define SchM_Schedulable_WdgM_GetFirstExpiredSEID_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetFirstExpiredSEID_Return */

#if defined(SchM_Schedulable_WdgM_GetFirstExpiredSEID_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetFirstExpiredSEID_Start
#endif
#if defined(SchM_Schedulable_WdgM_GetFirstExpiredSEID_Start)
#undef SchM_Schedulable_WdgM_GetFirstExpiredSEID_Start
extern void SchM_Schedulable_WdgM_GetFirstExpiredSEID_Start(void);
#else
#define SchM_Schedulable_WdgM_GetFirstExpiredSEID_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetFirstExpiredSEID_Start */

#if defined(SchM_Schedulable_WdgM_GetGlobalStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetGlobalStatus_Return
#endif
#if defined(SchM_Schedulable_WdgM_GetGlobalStatus_Return)
#undef SchM_Schedulable_WdgM_GetGlobalStatus_Return
extern void SchM_Schedulable_WdgM_GetGlobalStatus_Return(void);
#else
#define SchM_Schedulable_WdgM_GetGlobalStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetGlobalStatus_Return */

#if defined(SchM_Schedulable_WdgM_GetGlobalStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetGlobalStatus_Start
#endif
#if defined(SchM_Schedulable_WdgM_GetGlobalStatus_Start)
#undef SchM_Schedulable_WdgM_GetGlobalStatus_Start
extern void SchM_Schedulable_WdgM_GetGlobalStatus_Start(void);
#else
#define SchM_Schedulable_WdgM_GetGlobalStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetGlobalStatus_Start */

#if defined(SchM_Schedulable_WdgM_GetLocalStatus_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetLocalStatus_Return
#endif
#if defined(SchM_Schedulable_WdgM_GetLocalStatus_Return)
#undef SchM_Schedulable_WdgM_GetLocalStatus_Return
extern void SchM_Schedulable_WdgM_GetLocalStatus_Return(void);
#else
#define SchM_Schedulable_WdgM_GetLocalStatus_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetLocalStatus_Return */

#if defined(SchM_Schedulable_WdgM_GetLocalStatus_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetLocalStatus_Start
#endif
#if defined(SchM_Schedulable_WdgM_GetLocalStatus_Start)
#undef SchM_Schedulable_WdgM_GetLocalStatus_Start
extern void SchM_Schedulable_WdgM_GetLocalStatus_Start(void);
#else
#define SchM_Schedulable_WdgM_GetLocalStatus_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetLocalStatus_Start */

#if defined(SchM_Schedulable_WdgM_GetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetMode_Return
#endif
#if defined(SchM_Schedulable_WdgM_GetMode_Return)
#undef SchM_Schedulable_WdgM_GetMode_Return
extern void SchM_Schedulable_WdgM_GetMode_Return(void);
#else
#define SchM_Schedulable_WdgM_GetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetMode_Return */

#if defined(SchM_Schedulable_WdgM_GetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetMode_Start
#endif
#if defined(SchM_Schedulable_WdgM_GetMode_Start)
#undef SchM_Schedulable_WdgM_GetMode_Start
extern void SchM_Schedulable_WdgM_GetMode_Start(void);
#else
#define SchM_Schedulable_WdgM_GetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetMode_Start */

#if defined(SchM_Schedulable_WdgM_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_WdgM_GetVersionInfo_Return)
#undef SchM_Schedulable_WdgM_GetVersionInfo_Return
extern void SchM_Schedulable_WdgM_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_WdgM_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetVersionInfo_Return */

#if defined(SchM_Schedulable_WdgM_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_WdgM_GetVersionInfo_Start)
#undef SchM_Schedulable_WdgM_GetVersionInfo_Start
extern void SchM_Schedulable_WdgM_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_WdgM_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_GetVersionInfo_Start */

#if defined(SchM_Schedulable_WdgM_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_Init_Return
#endif
#if defined(SchM_Schedulable_WdgM_Init_Return)
#undef SchM_Schedulable_WdgM_Init_Return
extern void SchM_Schedulable_WdgM_Init_Return(void);
#else
#define SchM_Schedulable_WdgM_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_Init_Return */

#if defined(SchM_Schedulable_WdgM_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_Init_Start
#endif
#if defined(SchM_Schedulable_WdgM_Init_Start)
#undef SchM_Schedulable_WdgM_Init_Start
extern void SchM_Schedulable_WdgM_Init_Start(void);
#else
#define SchM_Schedulable_WdgM_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_Init_Start */

#if defined(SchM_Schedulable_WdgM_MainFunction_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_MainFunction_Return
#endif
#if defined(SchM_Schedulable_WdgM_MainFunction_Return)
#undef SchM_Schedulable_WdgM_MainFunction_Return
extern void SchM_Schedulable_WdgM_MainFunction_Return(void);
#else
#define SchM_Schedulable_WdgM_MainFunction_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_MainFunction_Return */

#if defined(SchM_Schedulable_WdgM_MainFunction_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_MainFunction_Start
#endif
#if defined(SchM_Schedulable_WdgM_MainFunction_Start)
#undef SchM_Schedulable_WdgM_MainFunction_Start
extern void SchM_Schedulable_WdgM_MainFunction_Start(void);
#else
#define SchM_Schedulable_WdgM_MainFunction_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_MainFunction_Start */

#if defined(SchM_Schedulable_WdgM_PerformReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_PerformReset_Return
#endif
#if defined(SchM_Schedulable_WdgM_PerformReset_Return)
#undef SchM_Schedulable_WdgM_PerformReset_Return
extern void SchM_Schedulable_WdgM_PerformReset_Return(void);
#else
#define SchM_Schedulable_WdgM_PerformReset_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_PerformReset_Return */

#if defined(SchM_Schedulable_WdgM_PerformReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_PerformReset_Start
#endif
#if defined(SchM_Schedulable_WdgM_PerformReset_Start)
#undef SchM_Schedulable_WdgM_PerformReset_Start
extern void SchM_Schedulable_WdgM_PerformReset_Start(void);
#else
#define SchM_Schedulable_WdgM_PerformReset_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_PerformReset_Start */

#if defined(SchM_Schedulable_WdgM_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_SetMode_Return
#endif
#if defined(SchM_Schedulable_WdgM_SetMode_Return)
#undef SchM_Schedulable_WdgM_SetMode_Return
extern void SchM_Schedulable_WdgM_SetMode_Return(void);
#else
#define SchM_Schedulable_WdgM_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_WdgM_SetMode_Return */

#if defined(SchM_Schedulable_WdgM_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_WdgM_SetMode_Start
#endif
#if defined(SchM_Schedulable_WdgM_SetMode_Start)
#undef SchM_Schedulable_WdgM_SetMode_Start
extern void SchM_Schedulable_WdgM_SetMode_Start(void);
#else
#define SchM_Schedulable_WdgM_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_WdgM_SetMode_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Return
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Start
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_ClearResetRequest_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Return
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Start
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Return
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Start
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Init_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Return
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Start
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_Service_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Return
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Start
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetMode_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Return
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Start
extern void SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_43_Instance0_SetTriggerCondition_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification0_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Cbk_GptNotification1_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt0_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt10_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt11_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt12_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt13_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt14_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt15_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt16_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt17_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt18_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt19_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt1_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt20_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt21_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt22_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt23_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt24_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt2_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt3_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt4_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt5_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt6_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt7_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt8_Isr_Start */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Return
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Return)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Return
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Return(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Return */

#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Start
#endif
#if defined(SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Start)
#undef SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Start
extern void SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Start(void);
#else
#define SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_43_Instance0_Swt_Ip_Swt9_Isr_Start */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Return
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Return)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Return
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Return(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Return */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Start
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Start)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Start
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Start(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_GetVersionInfo_Start */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Return
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Return)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Return
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Return(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Return */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Start
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Start)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Start
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Start(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_Init_Start */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Return
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Return)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Return
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Return(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Return */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Start
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Start)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Start
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Start(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_SetMode_Start */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Return
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Return)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Return
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Return(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Return() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Return */

#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Start
#endif
#if defined(SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Start)
#undef SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Start
extern void SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Start(void);
#else
#define SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Start() ((void)(0))
#endif /* SchM_Schedulable_Wdg_76_Acw_76_Acw_SetTriggerCondition_Start */

#if defined(SchM_StartHook_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_StartHook_Return
#endif
#if defined(SchM_StartHook_Return)
#undef SchM_StartHook_Return
extern void SchM_StartHook_Return(void);
#else
#define SchM_StartHook_Return() ((void)(0))
#endif /* SchM_StartHook_Return */

#if defined(SchM_StartHook_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_StartHook_Start
#endif
#if defined(SchM_StartHook_Start)
#undef SchM_StartHook_Start
extern void SchM_StartHook_Start(void);
#else
#define SchM_StartHook_Start() ((void)(0))
#endif /* SchM_StartHook_Start */

#if defined(SchM_StartTimingHook_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_StartTimingHook_Return
#endif
#if defined(SchM_StartTimingHook_Return)
#undef SchM_StartTimingHook_Return
extern void SchM_StartTimingHook_Return(void);
#else
#define SchM_StartTimingHook_Return() ((void)(0))
#endif /* SchM_StartTimingHook_Return */

#if defined(SchM_StartTimingHook_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_StartTimingHook_Start
#endif
#if defined(SchM_StartTimingHook_Start)
#undef SchM_StartTimingHook_Start
extern void SchM_StartTimingHook_Start(void);
#else
#define SchM_StartTimingHook_Start() ((void)(0))
#endif /* SchM_StartTimingHook_Start */

#if defined(SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Return
#endif
#if defined(SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Return)
#undef SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Return
extern void SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Return(CONST(EcuM_StateType, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Return */

#if defined(SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Start
#endif
#if defined(SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Start)
#undef SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Start
extern void SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Start(CONST(EcuM_StateType, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_BswM_modeSwitchPort_CurrentMode_Start */

#if defined(SchM_SwitchHook_Dcm_DcmApplicationUpdated_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmApplicationUpdated_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmApplicationUpdated_Return)
#undef SchM_SwitchHook_Dcm_DcmApplicationUpdated_Return
extern void SchM_SwitchHook_Dcm_DcmApplicationUpdated_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmApplicationUpdated_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmApplicationUpdated_Return */

#if defined(SchM_SwitchHook_Dcm_DcmApplicationUpdated_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmApplicationUpdated_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmApplicationUpdated_Start)
#undef SchM_SwitchHook_Dcm_DcmApplicationUpdated_Start
extern void SchM_SwitchHook_Dcm_DcmApplicationUpdated_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmApplicationUpdated_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmApplicationUpdated_Start */

#if defined(SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return)
#undef SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return
extern void SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Return */

#if defined(SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start)
#undef SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start
extern void SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmCommunicationControl_ComMChannel_FD_CAN1_Start */

#if defined(SchM_SwitchHook_Dcm_DcmControlDTCSetting_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmControlDTCSetting_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmControlDTCSetting_Return)
#undef SchM_SwitchHook_Dcm_DcmControlDTCSetting_Return
extern void SchM_SwitchHook_Dcm_DcmControlDTCSetting_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmControlDTCSetting_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmControlDTCSetting_Return */

#if defined(SchM_SwitchHook_Dcm_DcmControlDTCSetting_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmControlDTCSetting_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmControlDTCSetting_Start)
#undef SchM_SwitchHook_Dcm_DcmControlDTCSetting_Start
extern void SchM_SwitchHook_Dcm_DcmControlDTCSetting_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmControlDTCSetting_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmControlDTCSetting_Start */

#if defined(SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Return)
#undef SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Return
extern void SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Return */

#if defined(SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Start)
#undef SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Start
extern void SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmDiagnosticSessionControl_Start */

#if defined(SchM_SwitchHook_Dcm_DcmEcuReset_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmEcuReset_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmEcuReset_Return)
#undef SchM_SwitchHook_Dcm_DcmEcuReset_Return
extern void SchM_SwitchHook_Dcm_DcmEcuReset_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmEcuReset_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmEcuReset_Return */

#if defined(SchM_SwitchHook_Dcm_DcmEcuReset_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmEcuReset_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmEcuReset_Start)
#undef SchM_SwitchHook_Dcm_DcmEcuReset_Start
extern void SchM_SwitchHook_Dcm_DcmEcuReset_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmEcuReset_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmEcuReset_Start */

#if defined(SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Return)
#undef SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Return
extern void SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Return */

#if defined(SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Start)
#undef SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Start
extern void SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmModeRapidPowerShutDown_Start */

#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return
extern void SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Return */

#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start
extern void SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnChangeOfDataIdentifier_Start */

#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return
extern void SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Return */

#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start)
#undef SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start
extern void SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmResponseOnEvent_OnDTCStatusChange_Start */

#if defined(SchM_SwitchHook_Dcm_DcmSecurityAccess_Return) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmSecurityAccess_Return
#endif
#if defined(SchM_SwitchHook_Dcm_DcmSecurityAccess_Return)
#undef SchM_SwitchHook_Dcm_DcmSecurityAccess_Return
extern void SchM_SwitchHook_Dcm_DcmSecurityAccess_Return(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmSecurityAccess_Return(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmSecurityAccess_Return */

#if defined(SchM_SwitchHook_Dcm_DcmSecurityAccess_Start) && (RTE_VFB_TRACE == FALSE)
#undef SchM_SwitchHook_Dcm_DcmSecurityAccess_Start
#endif
#if defined(SchM_SwitchHook_Dcm_DcmSecurityAccess_Start)
#undef SchM_SwitchHook_Dcm_DcmSecurityAccess_Start
extern void SchM_SwitchHook_Dcm_DcmSecurityAccess_Start(CONST(uint8, RTE_APPL_CONST) Data);
#else
#define SchM_SwitchHook_Dcm_DcmSecurityAccess_Start(Data) ((void)(0))
#endif /* SchM_SwitchHook_Dcm_DcmSecurityAccess_Start */

/******************************************************************************/
/*                 Compatibility between C/C++ Languages End                  */
/******************************************************************************/
#ifdef __cplusplus
}
#endif

/******************************************************************************/
/*                  Multiple Header Inclusion Protection End                  */
/******************************************************************************/
#endif

/******************************************************************************/
/*                              End of the file                               */
/******************************************************************************/
