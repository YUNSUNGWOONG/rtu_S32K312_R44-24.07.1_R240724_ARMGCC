/*******************************************************************************
**                                                                            **
**  (C) 2021 HYUNDAI AUTOEVER Corp.                                           **
**  Confidential Proprietary Information. Distribution Limited.               **
**  This source code is permitted to be used only in projects contracted      **
**  with Hyundai Autoever, and any other use is prohibited.                   **
**  If you use it for other purposes or change the source code,               **
**  you may take legal responsibility.                                        **
**  In this case, There is no warranty and technical support.                 **
**                                                                            **
**  FILE-NAME: LinTrcv.h                                                      **
**                                                                            **
**  MODULE-NAME: AUTOSAR LIN Transceiver Driver Module                        **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Framework version : 1.1.5                                                 **
**  Module version    : 1.0.7.0                                                **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            ** 
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/
/*
* INPUT FILE:      Configuration\Definition\Dio_s32k312_mqfp172.epd
*                  Configuration\Definition\ECUConfigurationParameters.arxml
*                  Configuration\Ecu\Ecud_EcuM.arxml            
*                  Configuration\Ecu\Ecud_LinTrcv.arxml         
*                  Configuration\Ecu\Mcal\Ecud_Dio.arxml        
*                  Generated\Bsw_Output\bswmd\Bswmd_LinTrcv.arxml
*                  Static_Code\Modules\EcuM_R44\generator\EcuM_ECU_Configuration_PDF.arxml
*                  Static_Code\Modules\LinTrcv_R44\generator\LinTrcv_ECU_Configuration_PDF.arxml
* GENERATED ON: The time-stamp is removed
*/ 

#ifndef LINTRCV_H
#define LINTRCV_H

/*******************************************************************************
**                      Include Section                                       **
*******************************************************************************/
/* Lin Transceiver Driver header file */
#include "ComStack_Types.h"            /* ComStack_Types Header File*/
#include "LinTrcv_Cfg.h"               /* LinTrcv_Cfg Header File*/
#include "Lin_GeneralTypes.h"          /* Lin_GeneralTypes Header File*/
#include "Dio.h"                       /* Dio header file */
#include "EcuM.h"                      /* EcuM header file */

/*******************************************************************************
**                      Common Published Information                          **
*******************************************************************************/

/*******************************************************************************
**                      Global Data Types                                     **
*******************************************************************************/
/* @Trace: LinTrcv_SUD_MACRO_004 */
/* Instance Identification */
#define LINTRCV_INSTANCE_ID                                ((uint8)0x00)

/* Service ID for the API LinTrcv_Init()*/
#define LINTRCV_INIT_SID                                   ((uint8)0x00)

/* Service ID for the API LinTrcv_SetOpMode() */
#define LINTRCV_SETOPMODE_SID                              ((uint8)0x01)

/* Service ID for the API LinTrcv_GetOpMode() */
#define LINTRCV_GETOPMODE_SID                              ((uint8)0x02)

/* Service ID for the API LinTrcv_GetBusWuReason() */
#define LINTRCV_GETBUSWAKEUPREASON_SID                     ((uint8)0x03)

/* Service ID for the API LinTrcv_GetVersionInfo()*/
#define LINTRCV_GETVERSIONINFO_SID              		   ((uint8)0x04)


/* @Trace: LinTrcv_SUD_MACRO_006 */
/* Service ID for the API LinTrcv_SetWakeupMode() */
#define LINTRCV_SETWAKEUPMODE_SID                          ((uint8)0x05)

/* Service ID for the API LinTrcv_CheckWakeup()*/
#define LINTRCV_CHECKWAKEUP_SID                            ((uint8)0x07)

/* DET Error Codes */
#define LINTRCV_E_INVALID_LIN_NETWORK                      ((uint8)0x01)

/* API is called with null pointer parameter */
#define LINTRCV_E_PARAM_POINTER                            ((uint8)0x02)

/* API service is used without initialization of LinTrcv */
#define LINTRCV_E_UNINIT                                   ((uint8)0x11)

/* API service is called in wrong transceiver operation mode */
#define LINTRCV_E_TRCV_NOT_SLEEP                           ((uint8)0x21)
#define LINTRCV_E_TRCV_NOT_NORMAL                          ((uint8)0x22)

/* API service is called with an invalid mode */
#define LINTRCV_E_INVALID_TRCV_OPMODE                      ((uint8)0x25)


/* @Trace: LinTrcv_SUD_DATATYPE_001 */
/* define LinTrcv mode type*/
typedef enum
{
  LINTRCV_TRCV_MODE_NORMAL = 0,
  LINTRCV_TRCV_MODE_STANDBY,
  LINTRCV_TRCV_MODE_SLEEP
}LinTrcv_TrcvModeType;

/* @Trace: LinTrcv_SUD_DATATYPE_002 */
/* Define DioType */
typedef enum
{
  LINTRCV_DIO_CHANNEL =0,
  LINTRCV_DIO_PORT,
  LINTRCV_DIO_GROUP_CHANNEL,
  LINTRCV_DIO_UNCONFIGURED
}LinTrcv_DioType;

/* @Trace: LinTrcv_SUD_DATATYPE_003 */
/* Configuration data structure of the LinTrcv Port-Pin-Group */
typedef struct 
{  
  LinTrcv_DioType DioType;
  union STag_DioConfigType
  {
    /* Channel type */
    Dio_ChannelType ChannelID;
    /* struct of Port - Pin*/
    struct STag_PortPin
    {
      /* index pin in port */
      uint8 PinNumber;
      /* Port type */
      Dio_PortType PortID;
    }PortPin;
    /* struct of Pin in Group */
    struct STag_GroupPin
    {
      /* index pin in port contain GroupChannel*/
      uint8 PinNumber;
      /* Group channel type */
      const Dio_ChannelGroupType* GroupChannel;
    }GroupPin;    
  }DioConfigType;
}LinTrcv_DioConfigType;


/* @Trace: LinTrcv_SUD_DATATYPE_004 */
/* Configuration data structure of the LinTrcv module*/
typedef struct STag_LinTrcv_ConfigType
{
  /* Wakeup Source Id */
  EcuM_WakeupSourceType ddWakeupSourceId;

  /* Input - EN Pin*/
  LinTrcv_DioConfigType ddENPin;

  /* Input - WakeUp Source Pin */
  LinTrcv_DioConfigType ddWkPin;

  /* Ouput - TxD Pin*/
  LinTrcv_DioConfigType ddTxDPin;
  
  /* Output - RxD Pin*/
  LinTrcv_DioConfigType ddRxDPin;

  /* WakeUp Supported by Bus used */
  boolean  blLinTrcvWakeupByBusUsed;

  /* Channel Used*/
  boolean blChannelUsed;

  /* StandbyMode Used*/
  boolean blStandbyModeUsed;
}LinTrcv_ConfigType;
/*******************************************************************************
**                      Configuration Set Handles                             **
*******************************************************************************/


/*******************************************************************************
**                      Function Prototypes                                   **
*******************************************************************************/
#define LINTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(void, LINTRCV_CODE) LinTrcv_Init(const LinTrcv_ConfigType* ConfigPtr);
#define LINTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define LINTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, LINTRCV_CODE) LinTrcv_SetOpMode
  (VAR (uint8, LINTRCV_VAR) LinNetwork, 
  VAR (LinTrcv_TrcvModeType, LINTRCV_VAR) OpMode);
#define LINTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define LINTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, LINTRCV_CODE) LinTrcv_GetOpMode
  (VAR (uint8, LINTRCV_VAR) LinNetwork,
  P2VAR(LinTrcv_TrcvModeType, AUTOMATIC, LINTRCV_APPL_DATA) OpMode);
#define LINTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define LINTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, LINTRCV_CODE) LinTrcv_GetBusWuReason
  (VAR (uint8, LINTRCV_VAR) LinNetwork, 
  P2VAR(LinTrcv_TrcvWakeupReasonType, AUTOMATIC, LINTRCV_APPL_DATA) 
  Reason);
#define LINTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define LINTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(void, LINTRCV_CODE)LinTrcv_GetVersionInfo
	(P2VAR(Std_VersionInfoType, AUTOMATIC, LINTRCV_APPL_DATA)versioninfo);
#define LINTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define LINTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, LINTRCV_CODE) LinTrcv_CheckWakeup
  (VAR (uint8, LINTRCV_VAR) LinNetwork);
#define LINTRCV_STOP_SEC_CODE
#include "MemMap.h"

#define LINTRCV_START_SEC_CODE
#include "MemMap.h"
extern FUNC(Std_ReturnType, LINTRCV_CODE) LinTrcv_SetWakeupMode
  (VAR (uint8, LINTRCV_VAR) LinNetwork, 
  VAR (LinTrcv_TrcvWakeupModeType, LINTRCV_VAR) TrcvWakupMode);
#define LINTRCV_STOP_SEC_CODE
#include "MemMap.h"

#endif /* LINTRCV_H */

/*******************************************************************************
**                      End of File                                           **
*******************************************************************************/
